;var VueDemi = (function (VueDemi, Vue, VueCompositionAPI) {
  if (VueDemi.install) {
    return VueDemi
  }
  if (Vue) {
    if (Vue.version.slice(0, 4) === '2.7.') {
      for (var key in Vue) {
        VueDemi[key] = Vue[key]
      }
      VueDemi.isVue2 = true
      VueDemi.isVue3 = false
      VueDemi.install = function (){}
      VueDemi.Vue = Vue
      VueDemi.Vue2 = Vue
      VueDemi.version = Vue.version
    }
    else if (Vue.version.slice(0, 2) === '2.') {
      if (VueCompositionAPI) {
        for (var key in VueCompositionAPI) {
          VueDemi[key] = VueCompositionAPI[key]
        }
        VueDemi.isVue2 = true
        VueDemi.isVue3 = false
        VueDemi.install = function (){}
        VueDemi.Vue = Vue
        VueDemi.Vue2 = Vue
        VueDemi.version = Vue.version
      } else {
        console.error(
          '[vue-demi] no VueCompositionAPI instance found, please be sure to import `@vue/composition-api` before `vue-demi`.'
        )
      }
    } else if (Vue.version.slice(0, 2) === '3.') {
      for (var key in Vue) {
        VueDemi[key] = Vue[key]
      }
      VueDemi.isVue2 = false
      VueDemi.isVue3 = true
      VueDemi.install = function (){}
      VueDemi.Vue = Vue
      VueDemi.Vue2 = undefined
      VueDemi.version = Vue.version
      VueDemi.set = function(target, key, val) {
        if (Array.isArray(target)) {
          target.length = Math.max(target.length, key)
          target.splice(key, 1, val)
          return val
        }
        target[key] = val
        return val
      }
      VueDemi.del = function(target, key) {
        if (Array.isArray(target)) {
          target.splice(key, 1)
          return
        }
        delete target[key]
      }
    } else {
      console.error('[vue-demi] Vue version ' + Vue.version + ' is unsupported.')
    }
  } else {
    console.error(
      '[vue-demi] no Vue instance found, please be sure to import `vue` before `vue-demi`.'
    )
  }
  return VueDemi
})(
  this.VueDemi = this.VueDemi || (typeof VueDemi !== "undefined" ? VueDemi : {}),
  this.Vue || (typeof Vue !== "undefined" ? Vue : undefined),
  this.VueCompositionAPI || (typeof VueCompositionAPI !== "undefined" ? VueCompositionAPI : undefined)
);
;
;(function (exports, nprogress, shared, vueDemi) {
  'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var nprogress__default = /*#__PURE__*/_interopDefaultLegacy(nprogress);

  function useNProgress(currentProgress = null, options) {
    const progress = vueDemi.ref(currentProgress);
    const isLoading = vueDemi.computed({
      set: (load) => load ? nprogress__default["default"].start() : nprogress__default["default"].done(),
      get: () => shared.isNumber(progress.value) && progress.value < 1
    });
    if (options)
      nprogress__default["default"].configure(options);
    const setProgress = nprogress__default["default"].set;
    nprogress__default["default"].set = (n) => {
      progress.value = n;
      return setProgress.call(nprogress__default["default"], n);
    };
    vueDemi.watchEffect(() => {
      if (shared.isNumber(progress.value) && shared.isClient)
        setProgress.call(nprogress__default["default"], progress.value);
    });
    shared.tryOnScopeDispose(nprogress__default["default"].remove);
    return {
      isLoading,
      progress,
      start: nprogress__default["default"].start,
      done: nprogress__default["default"].done,
      remove: () => {
        progress.value = null;
        nprogress__default["default"].remove();
      }
    };
  }

  exports.useNProgress = useNProgress;

  Object.defineProperty(exports, '__esModule', { value: true });

})(this.VueUse = this.VueUse || {}, nprogress, VueUse, VueDemi);
