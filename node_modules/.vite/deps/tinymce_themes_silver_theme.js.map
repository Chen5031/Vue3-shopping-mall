{
  "version": 3,
  "sources": ["../../tinymce/themes/silver/theme.js", "dep:tinymce_themes_silver_theme"],
  "sourcesContent": ["/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n    'use strict';\n\n    const getPrototypeOf$1 = Object.getPrototypeOf;\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq$1 = t => a => t === a;\n    const is$2 = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf$1(o) === proto);\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isPlainObject = value => is$2(value, Object);\n    const isArray = isType$1('array');\n    const isNull = eq$1(null);\n    const isBoolean = isSimpleType('boolean');\n    const isUndefined = eq$1(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const noop = () => {\n    };\n    const noarg = f => () => f();\n    const compose = (fa, fb) => {\n      return (...args) => {\n        return fa(fb.apply(null, args));\n      };\n    };\n    const compose1 = (fbc, fab) => a => fbc(fab(a));\n    const constant$1 = value => {\n      return () => {\n        return value;\n      };\n    };\n    const identity = x => {\n      return x;\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const not = f => t => !f(t);\n    const die = msg => {\n      return () => {\n        throw new Error(msg);\n      };\n    };\n    const apply = f => {\n      return f();\n    };\n    const never = constant$1(false);\n    const always = constant$1(true);\n\n    var global$a = tinymce.util.Tools.resolve('tinymce.ThemeManager');\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const indexOf = (xs, x) => {\n      const r = rawIndexOf(xs, x);\n      return r === -1 ? Optional.none() : Optional.some(r);\n    };\n    const contains$2 = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const range$2 = (num, f) => {\n      const r = [];\n      for (let i = 0; i < num; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    const chunk$1 = (array, size) => {\n      const r = [];\n      for (let i = 0; i < array.length; i += size) {\n        const s = nativeSlice.call(array, i, i + size);\n        r.push(s);\n      }\n      return r;\n    };\n    const map$2 = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const eachr = (xs, f) => {\n      for (let i = xs.length - 1; i >= 0; i--) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const partition$3 = (xs, pred) => {\n      const pass = [];\n      const fail = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        const arr = pred(x, i) ? pass : fail;\n        arr.push(x);\n      }\n      return {\n        pass,\n        fail\n      };\n    };\n    const filter$2 = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const foldr = (xs, f, acc) => {\n      eachr(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const foldl = (xs, f, acc) => {\n      each$1(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find$5 = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const findIndex$1 = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(i);\n        }\n      }\n      return Optional.none();\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind$3 = (xs, f) => flatten(map$2(xs, f));\n    const forall = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        const x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    const reverse = xs => {\n      const r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    const difference = (a1, a2) => filter$2(a1, x => !contains$2(a2, x));\n    const mapToObject = (xs, f) => {\n      const r = {};\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        r[String(x)] = f(x, i);\n      }\n      return r;\n    };\n    const pure$2 = x => [x];\n    const sort = (xs, comparator) => {\n      const copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n    const get$h = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$h(xs, 0);\n    const last$1 = xs => get$h(xs, xs.length - 1);\n    const from = isFunction(Array.from) ? Array.from : x => nativeSlice.call(x);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const map$1 = (obj, f) => {\n      return tupleMap(obj, (x, i) => ({\n        k: i,\n        v: f(x, i)\n      }));\n    };\n    const tupleMap = (obj, f) => {\n      const r = {};\n      each(obj, (x, i) => {\n        const tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const bifilter = (obj, pred) => {\n      const t = {};\n      const f = {};\n      internalFilter(obj, pred, objAcc(t), objAcc(f));\n      return {\n        t,\n        f\n      };\n    };\n    const filter$1 = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const mapToArray = (obj, f) => {\n      const r = [];\n      each(obj, (value, name) => {\n        r.push(f(value, name));\n      });\n      return r;\n    };\n    const find$4 = (obj, pred) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        if (pred(x, i, obj)) {\n          return Optional.some(x);\n        }\n      }\n      return Optional.none();\n    };\n    const values = obj => {\n      return mapToArray(obj, identity);\n    };\n    const get$g = (obj, key) => {\n      return has$2(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has$2 = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has$2(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const is$1 = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const equals = (lhs, rhs, comparator = tripleEquals) => lift2(lhs, rhs, comparator).getOr(lhs.isNone() && rhs.isNone());\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    const sequence = arr => {\n      const r = [];\n      for (let i = 0; i < arr.length; i++) {\n        const x = arr[i];\n        if (x.isSome()) {\n          r.push(x.getOrDie());\n        } else {\n          return Optional.none();\n        }\n      }\n      return Optional.some(r);\n    };\n    const lift2 = (oa, ob, f) => oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n    const lift3 = (oa, ob, oc, f) => oa.isSome() && ob.isSome() && oc.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie(), oc.getOrDie())) : Optional.none();\n    const mapFrom = (a, f) => a !== undefined && a !== null ? Optional.some(f(a)) : Optional.none();\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const addToEnd = (str, suffix) => {\n      return str + suffix;\n    };\n    const removeFromStart = (str, numChars) => {\n      return str.substring(numChars);\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const removeLeading = (str, prefix) => {\n      return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n    };\n    const ensureTrailing = (str, suffix) => {\n      return endsWith(str, suffix) ? str : addToEnd(str, suffix);\n    };\n    const contains$1 = (str, substr, start = 0, end) => {\n      const idx = str.indexOf(substr, start);\n      if (idx !== -1) {\n        return isUndefined(end) ? true : idx + substr.length <= end;\n      } else {\n        return false;\n      }\n    };\n    const startsWith = (str, prefix) => {\n      return checkRange(str, prefix, 0);\n    };\n    const endsWith = (str, suffix) => {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    const blank = r => s => s.replace(r, '');\n    const trim$1 = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = s => s.length > 0;\n    const isEmpty = s => !isNotEmpty(s);\n\n    const isSupported$1 = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const fromHtml$2 = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    const fromDom = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    const SugarElement = {\n      fromHtml: fromHtml$2,\n      fromTag,\n      fromText,\n      fromDom,\n      fromPoint\n    };\n\n    const Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const path$1 = (parts, scope) => {\n      let o = scope !== undefined && scope !== null ? scope : Global;\n      for (let i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    const resolve = (p, scope) => {\n      const parts = p.split('.');\n      return path$1(parts, scope);\n    };\n\n    const unsafe = (name, scope) => {\n      return resolve(name, scope);\n    };\n    const getOrDie$1 = (name, scope) => {\n      const actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n\n    const getPrototypeOf = Object.getPrototypeOf;\n    const sandHTMLElement = scope => {\n      return getOrDie$1('HTMLElement', scope);\n    };\n    const isPrototypeOf = x => {\n      const scope = resolve('ownerDocument.defaultView', x);\n      return isObject(x) && (sandHTMLElement(scope).prototype.isPrototypeOf(x) || /^HTML\\w*Element$/.test(getPrototypeOf(x).constructor.name));\n    };\n\n    const DOCUMENT = 9;\n    const DOCUMENT_FRAGMENT = 11;\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const name$3 = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    const type$1 = element => element.dom.nodeType;\n    const isType = t => element => type$1(element) === t;\n    const isHTMLElement = element => isElement$1(element) && isPrototypeOf(element.dom);\n    const isElement$1 = isType(ELEMENT);\n    const isText = isType(TEXT);\n    const isDocument = isType(DOCUMENT);\n    const isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n    const isTag = tag => e => isElement$1(e) && name$3(e) === tag;\n\n    const is = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    const bypassSelector = dom => dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT || dom.childElementCount === 0;\n    const all$3 = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? [] : map$2(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n    const one = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? Optional.none() : Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);\n    };\n\n    const eq = (e1, e2) => e1.dom === e2.dom;\n    const contains = (e1, e2) => {\n      const d1 = e1.dom;\n      const d2 = e2.dom;\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n\n    const owner$4 = element => SugarElement.fromDom(element.dom.ownerDocument);\n    const documentOrOwner = dos => isDocument(dos) ? dos : owner$4(dos);\n    const documentElement = element => SugarElement.fromDom(documentOrOwner(element).dom.documentElement);\n    const defaultView = element => SugarElement.fromDom(documentOrOwner(element).dom.defaultView);\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parentElement = element => Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    const offsetParent = element => Optional.from(element.dom.offsetParent).map(SugarElement.fromDom);\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children = element => map$2(element.dom.childNodes, SugarElement.fromDom);\n    const child$2 = (element, index) => {\n      const cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = element => child$2(element, 0);\n    const spot = (element, offset) => ({\n      element,\n      offset\n    });\n    const leaf = (element, offset) => {\n      const cs = children(element);\n      return cs.length > 0 && offset < cs.length ? spot(cs[offset], 0) : spot(element, offset);\n    };\n\n    const isShadowRoot = dos => isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    const supported = isFunction(Element.prototype.attachShadow) && isFunction(Node.prototype.getRootNode);\n    const isSupported = constant$1(supported);\n    const getRootNode = supported ? e => SugarElement.fromDom(e.dom.getRootNode()) : documentOrOwner;\n    const getContentContainer = dos => isShadowRoot(dos) ? dos : SugarElement.fromDom(documentOrOwner(dos).dom.body);\n    const isInShadowRoot = e => getShadowRoot(e).isSome();\n    const getShadowRoot = e => {\n      const r = getRootNode(e);\n      return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    const getShadowHost = e => SugarElement.fromDom(e.dom.host);\n    const getOriginalEventTarget = event => {\n      if (isSupported() && isNonNullable(event.target)) {\n        const el = SugarElement.fromDom(event.target);\n        if (isElement$1(el) && isOpenShadowHost(el)) {\n          if (event.composed && event.composedPath) {\n            const composedPath = event.composedPath();\n            if (composedPath) {\n              return head(composedPath);\n            }\n          }\n        }\n      }\n      return Optional.from(event.target);\n    };\n    const isOpenShadowHost = element => isNonNullable(element.dom.shadowRoot);\n\n    const inBody = element => {\n      const dom = isText(element) ? element.dom.parentNode : element.dom;\n      if (dom === undefined || dom === null || dom.ownerDocument === null) {\n        return false;\n      }\n      const doc = dom.ownerDocument;\n      return getShadowRoot(SugarElement.fromDom(dom)).fold(() => doc.body.contains(dom), compose1(inBody, getShadowHost));\n    };\n    const body = () => getBody(SugarElement.fromDom(document));\n    const getBody = doc => {\n      const b = doc.dom.body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return SugarElement.fromDom(b);\n    };\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set$9 = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const setAll$1 = (element, attrs) => {\n      const dom = element.dom;\n      each(attrs, (v, k) => {\n        rawSet(dom, k, v);\n      });\n    };\n    const get$f = (element, key) => {\n      const v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    const getOpt = (element, key) => Optional.from(get$f(element, key));\n    const has$1 = (element, key) => {\n      const dom = element.dom;\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    const remove$7 = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n    const clone$1 = element => foldl(element.dom.attributes, (acc, attr) => {\n      acc[attr.name] = attr.value;\n      return acc;\n    }, {});\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported$1(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const internalRemove = (dom, property) => {\n      if (isSupported$1(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    const set$8 = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n    const setAll = (element, css) => {\n      const dom = element.dom;\n      each(css, (v, k) => {\n        internalSet(dom, k, v);\n      });\n    };\n    const setOptions = (element, css) => {\n      const dom = element.dom;\n      each(css, (v, k) => {\n        v.fold(() => {\n          internalRemove(dom, k);\n        }, value => {\n          internalSet(dom, k, value);\n        });\n      });\n    };\n    const get$e = (element, property) => {\n      const dom = element.dom;\n      const styles = window.getComputedStyle(dom);\n      const r = styles.getPropertyValue(property);\n      return r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n    };\n    const getUnsafeProperty = (dom, property) => isSupported$1(dom) ? dom.style.getPropertyValue(property) : '';\n    const getRaw = (element, property) => {\n      const dom = element.dom;\n      const raw = getUnsafeProperty(dom, property);\n      return Optional.from(raw).filter(r => r.length > 0);\n    };\n    const getAllRaw = element => {\n      const css = {};\n      const dom = element.dom;\n      if (isSupported$1(dom)) {\n        for (let i = 0; i < dom.style.length; i++) {\n          const ruleName = dom.style.item(i);\n          css[ruleName] = dom.style[ruleName];\n        }\n      }\n      return css;\n    };\n    const isValidValue = (tag, property, value) => {\n      const element = SugarElement.fromTag(tag);\n      set$8(element, property, value);\n      const style = getRaw(element, property);\n      return style.isSome();\n    };\n    const remove$6 = (element, property) => {\n      const dom = element.dom;\n      internalRemove(dom, property);\n      if (is$1(getOpt(element, 'style').map(trim$1), '')) {\n        remove$7(element, 'style');\n      }\n    };\n    const reflow = e => e.dom.offsetWidth;\n\n    const Dimension = (name, getOffset) => {\n      const set = (element, h) => {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        const dom = element.dom;\n        if (isSupported$1(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      const get = element => {\n        const r = getOffset(element);\n        if (r <= 0 || r === null) {\n          const css = get$e(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      const getOuter = get;\n      const aggregate = (element, properties) => foldl(properties, (acc, property) => {\n        const val = get$e(element, property);\n        const value = val === undefined ? 0 : parseInt(val, 10);\n        return isNaN(value) ? acc : acc + value;\n      }, 0);\n      const max = (element, value, properties) => {\n        const cumulativeInclusions = aggregate(element, properties);\n        const absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set,\n        get,\n        getOuter,\n        aggregate,\n        max\n      };\n    };\n\n    const api$2 = Dimension('height', element => {\n      const dom = element.dom;\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    const get$d = element => api$2.get(element);\n    const getOuter$2 = element => api$2.getOuter(element);\n    const setMax$1 = (element, value) => {\n      const inclusions = [\n        'margin-top',\n        'border-top-width',\n        'padding-top',\n        'padding-bottom',\n        'border-bottom-width',\n        'margin-bottom'\n      ];\n      const absMax = api$2.max(element, value, inclusions);\n      set$8(element, 'max-height', absMax + 'px');\n    };\n\n    const r$1 = (left, top) => {\n      const translate = (x, y) => r$1(left + x, top + y);\n      return {\n        left,\n        top,\n        translate\n      };\n    };\n    const SugarPosition = r$1;\n\n    const boxPosition = dom => {\n      const box = dom.getBoundingClientRect();\n      return SugarPosition(box.left, box.top);\n    };\n    const firstDefinedOrZero = (a, b) => {\n      if (a !== undefined) {\n        return a;\n      } else {\n        return b !== undefined ? b : 0;\n      }\n    };\n    const absolute$3 = element => {\n      const doc = element.dom.ownerDocument;\n      const body = doc.body;\n      const win = doc.defaultView;\n      const html = doc.documentElement;\n      if (body === element.dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      const scrollTop = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageYOffset, html.scrollTop);\n      const scrollLeft = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageXOffset, html.scrollLeft);\n      const clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      const clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport$1(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    const viewport$1 = element => {\n      const dom = element.dom;\n      const doc = dom.ownerDocument;\n      const body = doc.body;\n      if (body === dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return SugarPosition(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    const api$1 = Dimension('width', element => element.dom.offsetWidth);\n    const set$7 = (element, h) => api$1.set(element, h);\n    const get$c = element => api$1.get(element);\n    const getOuter$1 = element => api$1.getOuter(element);\n    const setMax = (element, value) => {\n      const inclusions = [\n        'margin-left',\n        'border-left-width',\n        'padding-left',\n        'padding-right',\n        'border-right-width',\n        'margin-right'\n      ];\n      const absMax = api$1.max(element, value, inclusions);\n      set$8(element, 'max-width', absMax + 'px');\n    };\n\n    const cached = f => {\n      let called = false;\n      let r;\n      return (...args) => {\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    const DeviceType = (os, browser, userAgent, mediaMatch) => {\n      const isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      const isiPhone = os.isiOS() && !isiPad;\n      const isMobile = os.isiOS() || os.isAndroid();\n      const isTouch = isMobile || mediaMatch('(pointer:coarse)');\n      const isTablet = isiPad || !isiPhone && isMobile && mediaMatch('(min-device-width:768px)');\n      const isPhone = isiPhone || isMobile && !isTablet;\n      const iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      const isDesktop = !isPhone && !isTablet && !iOSwebview;\n      return {\n        isiPad: constant$1(isiPad),\n        isiPhone: constant$1(isiPhone),\n        isTablet: constant$1(isTablet),\n        isPhone: constant$1(isPhone),\n        isTouch: constant$1(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant$1(iOSwebview),\n        isDesktop: constant$1(isDesktop)\n      };\n    };\n\n    const firstMatch = (regexes, s) => {\n      for (let i = 0; i < regexes.length; i++) {\n        const x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    const find$3 = (regexes, agent) => {\n      const r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      const group = i => {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$d(group(1), group(2));\n    };\n    const detect$4 = (versionRegexes, agent) => {\n      const cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown$3();\n      }\n      return find$3(versionRegexes, cleanedAgent);\n    };\n    const unknown$3 = () => {\n      return nu$d(0, 0);\n    };\n    const nu$d = (major, minor) => {\n      return {\n        major,\n        minor\n      };\n    };\n    const Version = {\n      nu: nu$d,\n      detect: detect$4,\n      unknown: unknown$3\n    };\n\n    const detectBrowser$1 = (browsers, userAgentData) => {\n      return findMap(userAgentData.brands, uaBrand => {\n        const lcBrand = uaBrand.brand.toLowerCase();\n        return find$5(browsers, browser => {\n          var _a;\n          return lcBrand === ((_a = browser.brand) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n        }).map(info => ({\n          current: info.name,\n          version: Version.nu(parseInt(uaBrand.version, 10), 0)\n        }));\n      });\n    };\n\n    const detect$3 = (candidates, userAgent) => {\n      const agent = String(userAgent).toLowerCase();\n      return find$5(candidates, candidate => {\n        return candidate.search(agent);\n      });\n    };\n    const detectBrowser = (browsers, userAgent) => {\n      return detect$3(browsers, userAgent).map(browser => {\n        const version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version\n        };\n      });\n    };\n    const detectOs = (oses, userAgent) => {\n      return detect$3(oses, userAgent).map(os => {\n        const version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version\n        };\n      });\n    };\n\n    const normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    const checkContains = target => {\n      return uastring => {\n        return contains$1(uastring, target);\n      };\n    };\n    const browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: uastring => {\n          return contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chromium',\n        brand: 'Chromium',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: uastring => {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: uastring => {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: uastring => {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    const oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: uastring => {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'macOS',\n        search: checkContains('mac os x'),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      },\n      {\n        name: 'ChromeOS',\n        search: checkContains('cros'),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }\n    ];\n    const PlatformInfo = {\n      browsers: constant$1(browsers),\n      oses: constant$1(oses)\n    };\n\n    const edge = 'Edge';\n    const chromium = 'Chromium';\n    const ie = 'IE';\n    const opera = 'Opera';\n    const firefox = 'Firefox';\n    const safari = 'Safari';\n    const unknown$2 = () => {\n      return nu$c({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu$c = info => {\n      const current = info.current;\n      const version = info.version;\n      const isBrowser = name => () => current === name;\n      return {\n        current,\n        version,\n        isEdge: isBrowser(edge),\n        isChromium: isBrowser(chromium),\n        isIE: isBrowser(ie),\n        isOpera: isBrowser(opera),\n        isFirefox: isBrowser(firefox),\n        isSafari: isBrowser(safari)\n      };\n    };\n    const Browser = {\n      unknown: unknown$2,\n      nu: nu$c,\n      edge: constant$1(edge),\n      chromium: constant$1(chromium),\n      ie: constant$1(ie),\n      opera: constant$1(opera),\n      firefox: constant$1(firefox),\n      safari: constant$1(safari)\n    };\n\n    const windows = 'Windows';\n    const ios = 'iOS';\n    const android = 'Android';\n    const linux = 'Linux';\n    const macos = 'macOS';\n    const solaris = 'Solaris';\n    const freebsd = 'FreeBSD';\n    const chromeos = 'ChromeOS';\n    const unknown$1 = () => {\n      return nu$b({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu$b = info => {\n      const current = info.current;\n      const version = info.version;\n      const isOS = name => () => current === name;\n      return {\n        current,\n        version,\n        isWindows: isOS(windows),\n        isiOS: isOS(ios),\n        isAndroid: isOS(android),\n        isMacOS: isOS(macos),\n        isLinux: isOS(linux),\n        isSolaris: isOS(solaris),\n        isFreeBSD: isOS(freebsd),\n        isChromeOS: isOS(chromeos)\n      };\n    };\n    const OperatingSystem = {\n      unknown: unknown$1,\n      nu: nu$b,\n      windows: constant$1(windows),\n      ios: constant$1(ios),\n      android: constant$1(android),\n      linux: constant$1(linux),\n      macos: constant$1(macos),\n      solaris: constant$1(solaris),\n      freebsd: constant$1(freebsd),\n      chromeos: constant$1(chromeos)\n    };\n\n    const detect$2 = (userAgent, userAgentDataOpt, mediaMatch) => {\n      const browsers = PlatformInfo.browsers();\n      const oses = PlatformInfo.oses();\n      const browser = userAgentDataOpt.bind(userAgentData => detectBrowser$1(browsers, userAgentData)).orThunk(() => detectBrowser(browsers, userAgent)).fold(Browser.unknown, Browser.nu);\n      const os = detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      const deviceType = DeviceType(os, browser, userAgent, mediaMatch);\n      return {\n        browser,\n        os,\n        deviceType\n      };\n    };\n    const PlatformDetection = { detect: detect$2 };\n\n    const mediaMatch = query => window.matchMedia(query).matches;\n    let platform = cached(() => PlatformDetection.detect(navigator.userAgent, Optional.from(navigator.userAgentData), mediaMatch));\n    const detect$1 = () => platform();\n\n    const mkEvent = (target, x, y, stop, prevent, kill, raw) => ({\n      target,\n      x,\n      y,\n      stop,\n      prevent,\n      kill,\n      raw\n    });\n    const fromRawEvent$1 = rawEvent => {\n      const target = SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));\n      const stop = () => rawEvent.stopPropagation();\n      const prevent = () => rawEvent.preventDefault();\n      const kill = compose(prevent, stop);\n      return mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n    };\n    const handle = (filter, handler) => rawEvent => {\n      if (filter(rawEvent)) {\n        handler(fromRawEvent$1(rawEvent));\n      }\n    };\n    const binder = (element, event, filter, handler, useCapture) => {\n      const wrapped = handle(filter, handler);\n      element.dom.addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    const bind$2 = (element, event, filter, handler) => binder(element, event, filter, handler, false);\n    const capture$1 = (element, event, filter, handler) => binder(element, event, filter, handler, true);\n    const unbind = (element, event, handler, useCapture) => {\n      element.dom.removeEventListener(event, handler, useCapture);\n    };\n\n    const before$1 = (marker, element) => {\n      const parent$1 = parent(marker);\n      parent$1.each(v => {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    const after$2 = (marker, element) => {\n      const sibling = nextSibling(marker);\n      sibling.fold(() => {\n        const parent$1 = parent(marker);\n        parent$1.each(v => {\n          append$2(v, element);\n        });\n      }, v => {\n        before$1(v, element);\n      });\n    };\n    const prepend$1 = (parent, element) => {\n      const firstChild$1 = firstChild(parent);\n      firstChild$1.fold(() => {\n        append$2(parent, element);\n      }, v => {\n        parent.dom.insertBefore(element.dom, v.dom);\n      });\n    };\n    const append$2 = (parent, element) => {\n      parent.dom.appendChild(element.dom);\n    };\n    const appendAt = (parent, element, index) => {\n      child$2(parent, index).fold(() => {\n        append$2(parent, element);\n      }, v => {\n        before$1(v, element);\n      });\n    };\n\n    const append$1 = (parent, elements) => {\n      each$1(elements, x => {\n        append$2(parent, x);\n      });\n    };\n\n    const empty = element => {\n      element.dom.textContent = '';\n      each$1(children(element), rogue => {\n        remove$5(rogue);\n      });\n    };\n    const remove$5 = element => {\n      const dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    const get$b = _DOC => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      const y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return SugarPosition(x, y);\n    };\n    const to = (x, y, _DOC) => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const win = doc.defaultView;\n      if (win) {\n        win.scrollTo(x, y);\n      }\n    };\n\n    const get$a = _win => {\n      const win = _win === undefined ? window : _win;\n      if (detect$1().browser.isFirefox()) {\n        return Optional.none();\n      } else {\n        return Optional.from(win.visualViewport);\n      }\n    };\n    const bounds$1 = (x, y, width, height) => ({\n      x,\n      y,\n      width,\n      height,\n      right: x + width,\n      bottom: y + height\n    });\n    const getBounds$3 = _win => {\n      const win = _win === undefined ? window : _win;\n      const doc = win.document;\n      const scroll = get$b(SugarElement.fromDom(doc));\n      return get$a(win).fold(() => {\n        const html = win.document.documentElement;\n        const width = html.clientWidth;\n        const height = html.clientHeight;\n        return bounds$1(scroll.left, scroll.top, width, height);\n      }, visualViewport => bounds$1(Math.max(visualViewport.pageLeft, scroll.left), Math.max(visualViewport.pageTop, scroll.top), visualViewport.width, visualViewport.height));\n    };\n\n    const getDocument = () => SugarElement.fromDom(document);\n\n    const walkUp = (navigation, doc) => {\n      const frame = navigation.view(doc);\n      return frame.fold(constant$1([]), f => {\n        const parent = navigation.owner(f);\n        const rest = walkUp(navigation, parent);\n        return [f].concat(rest);\n      });\n    };\n    const pathTo = (element, navigation) => {\n      const d = navigation.owner(element);\n      const paths = walkUp(navigation, d);\n      return Optional.some(paths);\n    };\n\n    const view = doc => {\n      var _a;\n      const element = doc.dom === document ? Optional.none() : Optional.from((_a = doc.dom.defaultView) === null || _a === void 0 ? void 0 : _a.frameElement);\n      return element.map(SugarElement.fromDom);\n    };\n    const owner$3 = element => owner$4(element);\n\n    var Navigation = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        view: view,\n        owner: owner$3\n    });\n\n    const find$2 = element => {\n      const doc = getDocument();\n      const scroll = get$b(doc);\n      const path = pathTo(element, Navigation);\n      return path.fold(curry(absolute$3, element), frames => {\n        const offset = viewport$1(element);\n        const r = foldr(frames, (b, a) => {\n          const loc = viewport$1(a);\n          return {\n            left: b.left + loc.left,\n            top: b.top + loc.top\n          };\n        }, {\n          left: 0,\n          top: 0\n        });\n        return SugarPosition(r.left + offset.left + scroll.left, r.top + offset.top + scroll.top);\n      });\n    };\n\n    const pointed = (point, width, height) => ({\n      point,\n      width,\n      height\n    });\n    const rect = (x, y, width, height) => ({\n      x,\n      y,\n      width,\n      height\n    });\n    const bounds = (x, y, width, height) => ({\n      x,\n      y,\n      width,\n      height,\n      right: x + width,\n      bottom: y + height\n    });\n    const box$1 = element => {\n      const xy = absolute$3(element);\n      const w = getOuter$1(element);\n      const h = getOuter$2(element);\n      return bounds(xy.left, xy.top, w, h);\n    };\n    const absolute$2 = element => {\n      const position = find$2(element);\n      const width = getOuter$1(element);\n      const height = getOuter$2(element);\n      return bounds(position.left, position.top, width, height);\n    };\n    const win = () => getBounds$3(window);\n\n    const value$4 = value => {\n      const applyHelper = fn => fn(value);\n      const constHelper = constant$1(value);\n      const outputHelper = () => output;\n      const output = {\n        tag: true,\n        inner: value,\n        fold: (_onError, onValue) => onValue(value),\n        isValue: always,\n        isError: never,\n        map: mapper => Result.value(mapper(value)),\n        mapError: outputHelper,\n        bind: applyHelper,\n        exists: applyHelper,\n        forall: applyHelper,\n        getOr: constHelper,\n        or: outputHelper,\n        getOrThunk: constHelper,\n        orThunk: outputHelper,\n        getOrDie: constHelper,\n        each: fn => {\n          fn(value);\n        },\n        toOptional: () => Optional.some(value)\n      };\n      return output;\n    };\n    const error$1 = error => {\n      const outputHelper = () => output;\n      const output = {\n        tag: false,\n        inner: error,\n        fold: (onError, _onValue) => onError(error),\n        isValue: never,\n        isError: always,\n        map: outputHelper,\n        mapError: mapper => Result.error(mapper(error)),\n        bind: outputHelper,\n        exists: never,\n        forall: always,\n        getOr: identity,\n        or: identity,\n        getOrThunk: apply,\n        orThunk: apply,\n        getOrDie: die(String(error)),\n        each: noop,\n        toOptional: Optional.none\n      };\n      return output;\n    };\n    const fromOption = (optional, err) => optional.fold(() => error$1(err), value$4);\n    const Result = {\n      value: value$4,\n      error: error$1,\n      fromOption\n    };\n\n    var SimpleResultType;\n    (function (SimpleResultType) {\n      SimpleResultType[SimpleResultType['Error'] = 0] = 'Error';\n      SimpleResultType[SimpleResultType['Value'] = 1] = 'Value';\n    }(SimpleResultType || (SimpleResultType = {})));\n    const fold$1 = (res, onError, onValue) => res.stype === SimpleResultType.Error ? onError(res.serror) : onValue(res.svalue);\n    const partition$2 = results => {\n      const values = [];\n      const errors = [];\n      each$1(results, obj => {\n        fold$1(obj, err => errors.push(err), val => values.push(val));\n      });\n      return {\n        values,\n        errors\n      };\n    };\n    const mapError = (res, f) => {\n      if (res.stype === SimpleResultType.Error) {\n        return {\n          stype: SimpleResultType.Error,\n          serror: f(res.serror)\n        };\n      } else {\n        return res;\n      }\n    };\n    const map = (res, f) => {\n      if (res.stype === SimpleResultType.Value) {\n        return {\n          stype: SimpleResultType.Value,\n          svalue: f(res.svalue)\n        };\n      } else {\n        return res;\n      }\n    };\n    const bind$1 = (res, f) => {\n      if (res.stype === SimpleResultType.Value) {\n        return f(res.svalue);\n      } else {\n        return res;\n      }\n    };\n    const bindError = (res, f) => {\n      if (res.stype === SimpleResultType.Error) {\n        return f(res.serror);\n      } else {\n        return res;\n      }\n    };\n    const svalue = v => ({\n      stype: SimpleResultType.Value,\n      svalue: v\n    });\n    const serror = e => ({\n      stype: SimpleResultType.Error,\n      serror: e\n    });\n    const toResult$1 = res => fold$1(res, Result.error, Result.value);\n    const fromResult$1 = res => res.fold(serror, svalue);\n    const SimpleResult = {\n      fromResult: fromResult$1,\n      toResult: toResult$1,\n      svalue,\n      partition: partition$2,\n      serror,\n      bind: bind$1,\n      bindError,\n      map,\n      mapError,\n      fold: fold$1\n    };\n\n    const field$2 = (key, newKey, presence, prop) => ({\n      tag: 'field',\n      key,\n      newKey,\n      presence,\n      prop\n    });\n    const customField$1 = (newKey, instantiator) => ({\n      tag: 'custom',\n      newKey,\n      instantiator\n    });\n    const fold = (value, ifField, ifCustom) => {\n      switch (value.tag) {\n      case 'field':\n        return ifField(value.key, value.newKey, value.presence, value.prop);\n      case 'custom':\n        return ifCustom(value.newKey, value.instantiator);\n      }\n    };\n\n    const shallow$1 = (old, nu) => {\n      return nu;\n    };\n    const deep = (old, nu) => {\n      const bothObjects = isPlainObject(old) && isPlainObject(nu);\n      return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    const baseMerge = merger => {\n      return (...objects) => {\n        if (objects.length === 0) {\n          throw new Error(`Can't merge zero objects`);\n        }\n        const ret = {};\n        for (let j = 0; j < objects.length; j++) {\n          const curObject = objects[j];\n          for (const key in curObject) {\n            if (has$2(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    const deepMerge = baseMerge(deep);\n    const merge$1 = baseMerge(shallow$1);\n\n    const required$2 = () => ({\n      tag: 'required',\n      process: {}\n    });\n    const defaultedThunk = fallbackThunk => ({\n      tag: 'defaultedThunk',\n      process: fallbackThunk\n    });\n    const defaulted$1 = fallback => defaultedThunk(constant$1(fallback));\n    const asOption = () => ({\n      tag: 'option',\n      process: {}\n    });\n    const mergeWithThunk = baseThunk => ({\n      tag: 'mergeWithThunk',\n      process: baseThunk\n    });\n    const mergeWith = base => mergeWithThunk(constant$1(base));\n\n    const mergeValues$1 = (values, base) => values.length > 0 ? SimpleResult.svalue(deepMerge(base, merge$1.apply(undefined, values))) : SimpleResult.svalue(base);\n    const mergeErrors$1 = errors => compose(SimpleResult.serror, flatten)(errors);\n    const consolidateObj = (objects, base) => {\n      const partition = SimpleResult.partition(objects);\n      return partition.errors.length > 0 ? mergeErrors$1(partition.errors) : mergeValues$1(partition.values, base);\n    };\n    const consolidateArr = objects => {\n      const partitions = SimpleResult.partition(objects);\n      return partitions.errors.length > 0 ? mergeErrors$1(partitions.errors) : SimpleResult.svalue(partitions.values);\n    };\n    const ResultCombine = {\n      consolidateObj,\n      consolidateArr\n    };\n\n    const formatObj = input => {\n      return isObject(input) && keys(input).length > 100 ? ' removed due to size' : JSON.stringify(input, null, 2);\n    };\n    const formatErrors = errors => {\n      const es = errors.length > 10 ? errors.slice(0, 10).concat([{\n          path: [],\n          getErrorInfo: constant$1('... (only showing first ten failures)')\n        }]) : errors;\n      return map$2(es, e => {\n        return 'Failed path: (' + e.path.join(' > ') + ')\\n' + e.getErrorInfo();\n      });\n    };\n\n    const nu$a = (path, getErrorInfo) => {\n      return SimpleResult.serror([{\n          path,\n          getErrorInfo\n        }]);\n    };\n    const missingRequired = (path, key, obj) => nu$a(path, () => 'Could not find valid *required* value for \"' + key + '\" in ' + formatObj(obj));\n    const missingKey = (path, key) => nu$a(path, () => 'Choice schema did not contain choice key: \"' + key + '\"');\n    const missingBranch = (path, branches, branch) => nu$a(path, () => 'The chosen schema: \"' + branch + '\" did not exist in branches: ' + formatObj(branches));\n    const unsupportedFields = (path, unsupported) => nu$a(path, () => 'There are unsupported fields: [' + unsupported.join(', ') + '] specified');\n    const custom = (path, err) => nu$a(path, constant$1(err));\n\n    const value$3 = validator => {\n      const extract = (path, val) => {\n        return SimpleResult.bindError(validator(val), err => custom(path, err));\n      };\n      const toString = constant$1('val');\n      return {\n        extract,\n        toString\n      };\n    };\n    const anyValue$1 = value$3(SimpleResult.svalue);\n\n    const requiredAccess = (path, obj, key, bundle) => get$g(obj, key).fold(() => missingRequired(path, key, obj), bundle);\n    const fallbackAccess = (obj, key, fallback, bundle) => {\n      const v = get$g(obj, key).getOrThunk(() => fallback(obj));\n      return bundle(v);\n    };\n    const optionAccess = (obj, key, bundle) => bundle(get$g(obj, key));\n    const optionDefaultedAccess = (obj, key, fallback, bundle) => {\n      const opt = get$g(obj, key).map(val => val === true ? fallback(obj) : val);\n      return bundle(opt);\n    };\n    const extractField = (field, path, obj, key, prop) => {\n      const bundle = av => prop.extract(path.concat([key]), av);\n      const bundleAsOption = optValue => optValue.fold(() => SimpleResult.svalue(Optional.none()), ov => {\n        const result = prop.extract(path.concat([key]), ov);\n        return SimpleResult.map(result, Optional.some);\n      });\n      switch (field.tag) {\n      case 'required':\n        return requiredAccess(path, obj, key, bundle);\n      case 'defaultedThunk':\n        return fallbackAccess(obj, key, field.process, bundle);\n      case 'option':\n        return optionAccess(obj, key, bundleAsOption);\n      case 'defaultedOptionThunk':\n        return optionDefaultedAccess(obj, key, field.process, bundleAsOption);\n      case 'mergeWithThunk': {\n          return fallbackAccess(obj, key, constant$1({}), v => {\n            const result = deepMerge(field.process(obj), v);\n            return bundle(result);\n          });\n        }\n      }\n    };\n    const extractFields = (path, obj, fields) => {\n      const success = {};\n      const errors = [];\n      for (const field of fields) {\n        fold(field, (key, newKey, presence, prop) => {\n          const result = extractField(presence, path, obj, key, prop);\n          SimpleResult.fold(result, err => {\n            errors.push(...err);\n          }, res => {\n            success[newKey] = res;\n          });\n        }, (newKey, instantiator) => {\n          success[newKey] = instantiator(obj);\n        });\n      }\n      return errors.length > 0 ? SimpleResult.serror(errors) : SimpleResult.svalue(success);\n    };\n    const valueThunk = getDelegate => {\n      const extract = (path, val) => getDelegate().extract(path, val);\n      const toString = () => getDelegate().toString();\n      return {\n        extract,\n        toString\n      };\n    };\n    const getSetKeys = obj => keys(filter$1(obj, isNonNullable));\n    const objOfOnly = fields => {\n      const delegate = objOf(fields);\n      const fieldNames = foldr(fields, (acc, value) => {\n        return fold(value, key => deepMerge(acc, { [key]: true }), constant$1(acc));\n      }, {});\n      const extract = (path, o) => {\n        const keys = isBoolean(o) ? [] : getSetKeys(o);\n        const extra = filter$2(keys, k => !hasNonNullableKey(fieldNames, k));\n        return extra.length === 0 ? delegate.extract(path, o) : unsupportedFields(path, extra);\n      };\n      return {\n        extract,\n        toString: delegate.toString\n      };\n    };\n    const objOf = values => {\n      const extract = (path, o) => extractFields(path, o, values);\n      const toString = () => {\n        const fieldStrings = map$2(values, value => fold(value, (key, _okey, _presence, prop) => key + ' -> ' + prop.toString(), (newKey, _instantiator) => 'state(' + newKey + ')'));\n        return 'obj{\\n' + fieldStrings.join('\\n') + '}';\n      };\n      return {\n        extract,\n        toString\n      };\n    };\n    const arrOf = prop => {\n      const extract = (path, array) => {\n        const results = map$2(array, (a, i) => prop.extract(path.concat(['[' + i + ']']), a));\n        return ResultCombine.consolidateArr(results);\n      };\n      const toString = () => 'array(' + prop.toString() + ')';\n      return {\n        extract,\n        toString\n      };\n    };\n    const oneOf = (props, rawF) => {\n      const f = rawF !== undefined ? rawF : identity;\n      const extract = (path, val) => {\n        const errors = [];\n        for (const prop of props) {\n          const res = prop.extract(path, val);\n          if (res.stype === SimpleResultType.Value) {\n            return {\n              stype: SimpleResultType.Value,\n              svalue: f(res.svalue)\n            };\n          }\n          errors.push(res);\n        }\n        return ResultCombine.consolidateArr(errors);\n      };\n      const toString = () => 'oneOf(' + map$2(props, prop => prop.toString()).join(', ') + ')';\n      return {\n        extract,\n        toString\n      };\n    };\n    const setOf$1 = (validator, prop) => {\n      const validateKeys = (path, keys) => arrOf(value$3(validator)).extract(path, keys);\n      const extract = (path, o) => {\n        const keys$1 = keys(o);\n        const validatedKeys = validateKeys(path, keys$1);\n        return SimpleResult.bind(validatedKeys, validKeys => {\n          const schema = map$2(validKeys, vk => {\n            return field$2(vk, vk, required$2(), prop);\n          });\n          return objOf(schema).extract(path, o);\n        });\n      };\n      const toString = () => 'setOf(' + prop.toString() + ')';\n      return {\n        extract,\n        toString\n      };\n    };\n    const thunk = (_desc, processor) => {\n      const getP = cached(processor);\n      const extract = (path, val) => getP().extract(path, val);\n      const toString = () => getP().toString();\n      return {\n        extract,\n        toString\n      };\n    };\n    const arrOfObj = compose(arrOf, objOf);\n\n    const anyValue = constant$1(anyValue$1);\n    const typedValue = (validator, expectedType) => value$3(a => {\n      const actualType = typeof a;\n      return validator(a) ? SimpleResult.svalue(a) : SimpleResult.serror(`Expected type: ${ expectedType } but got: ${ actualType }`);\n    });\n    const number = typedValue(isNumber, 'number');\n    const string = typedValue(isString, 'string');\n    const boolean = typedValue(isBoolean, 'boolean');\n    const functionProcessor = typedValue(isFunction, 'function');\n    const isPostMessageable = val => {\n      if (Object(val) !== val) {\n        return true;\n      }\n      switch ({}.toString.call(val).slice(8, -1)) {\n      case 'Boolean':\n      case 'Number':\n      case 'String':\n      case 'Date':\n      case 'RegExp':\n      case 'Blob':\n      case 'FileList':\n      case 'ImageData':\n      case 'ImageBitmap':\n      case 'ArrayBuffer':\n        return true;\n      case 'Array':\n      case 'Object':\n        return Object.keys(val).every(prop => isPostMessageable(val[prop]));\n      default:\n        return false;\n      }\n    };\n    const postMessageable = value$3(a => {\n      if (isPostMessageable(a)) {\n        return SimpleResult.svalue(a);\n      } else {\n        return SimpleResult.serror('Expected value to be acceptable for sending via postMessage');\n      }\n    });\n\n    const chooseFrom = (path, input, branches, ch) => {\n      const fields = get$g(branches, ch);\n      return fields.fold(() => missingBranch(path, branches, ch), vp => vp.extract(path.concat(['branch: ' + ch]), input));\n    };\n    const choose$2 = (key, branches) => {\n      const extract = (path, input) => {\n        const choice = get$g(input, key);\n        return choice.fold(() => missingKey(path, key), chosen => chooseFrom(path, input, branches, chosen));\n      };\n      const toString = () => 'chooseOn(' + key + '). Possible values: ' + keys(branches);\n      return {\n        extract,\n        toString\n      };\n    };\n\n    const arrOfVal = () => arrOf(anyValue$1);\n    const valueOf = validator => value$3(v => validator(v).fold(SimpleResult.serror, SimpleResult.svalue));\n    const setOf = (validator, prop) => setOf$1(v => SimpleResult.fromResult(validator(v)), prop);\n    const extractValue = (label, prop, obj) => {\n      const res = prop.extract([label], obj);\n      return SimpleResult.mapError(res, errs => ({\n        input: obj,\n        errors: errs\n      }));\n    };\n    const asRaw = (label, prop, obj) => SimpleResult.toResult(extractValue(label, prop, obj));\n    const getOrDie = extraction => {\n      return extraction.fold(errInfo => {\n        throw new Error(formatError(errInfo));\n      }, identity);\n    };\n    const asRawOrDie$1 = (label, prop, obj) => getOrDie(asRaw(label, prop, obj));\n    const formatError = errInfo => {\n      return 'Errors: \\n' + formatErrors(errInfo.errors).join('\\n') + '\\n\\nInput object: ' + formatObj(errInfo.input);\n    };\n    const choose$1 = (key, branches) => choose$2(key, map$1(branches, objOf));\n    const thunkOf = (desc, schema) => thunk(desc, schema);\n\n    const field$1 = field$2;\n    const customField = customField$1;\n    const validateEnum = values => valueOf(value => contains$2(values, value) ? Result.value(value) : Result.error(`Unsupported value: \"${ value }\", choose one of \"${ values.join(', ') }\".`));\n    const required$1 = key => field$1(key, key, required$2(), anyValue());\n    const requiredOf = (key, schema) => field$1(key, key, required$2(), schema);\n    const requiredNumber = key => requiredOf(key, number);\n    const requiredString = key => requiredOf(key, string);\n    const requiredStringEnum = (key, values) => field$1(key, key, required$2(), validateEnum(values));\n    const requiredBoolean = key => requiredOf(key, boolean);\n    const requiredFunction = key => requiredOf(key, functionProcessor);\n    const forbid = (key, message) => field$1(key, key, asOption(), value$3(_v => SimpleResult.serror('The field: ' + key + ' is forbidden. ' + message)));\n    const requiredObjOf = (key, objSchema) => field$1(key, key, required$2(), objOf(objSchema));\n    const requiredArrayOfObj = (key, objFields) => field$1(key, key, required$2(), arrOfObj(objFields));\n    const requiredArrayOf = (key, schema) => field$1(key, key, required$2(), arrOf(schema));\n    const option$3 = key => field$1(key, key, asOption(), anyValue());\n    const optionOf = (key, schema) => field$1(key, key, asOption(), schema);\n    const optionNumber = key => optionOf(key, number);\n    const optionString = key => optionOf(key, string);\n    const optionStringEnum = (key, values) => optionOf(key, validateEnum(values));\n    const optionFunction = key => optionOf(key, functionProcessor);\n    const optionArrayOf = (key, schema) => optionOf(key, arrOf(schema));\n    const optionObjOf = (key, objSchema) => optionOf(key, objOf(objSchema));\n    const optionObjOfOnly = (key, objSchema) => optionOf(key, objOfOnly(objSchema));\n    const defaulted = (key, fallback) => field$1(key, key, defaulted$1(fallback), anyValue());\n    const defaultedOf = (key, fallback, schema) => field$1(key, key, defaulted$1(fallback), schema);\n    const defaultedNumber = (key, fallback) => defaultedOf(key, fallback, number);\n    const defaultedString = (key, fallback) => defaultedOf(key, fallback, string);\n    const defaultedStringEnum = (key, fallback, values) => defaultedOf(key, fallback, validateEnum(values));\n    const defaultedBoolean = (key, fallback) => defaultedOf(key, fallback, boolean);\n    const defaultedFunction = (key, fallback) => defaultedOf(key, fallback, functionProcessor);\n    const defaultedPostMsg = (key, fallback) => defaultedOf(key, fallback, postMessageable);\n    const defaultedArrayOf = (key, fallback, schema) => defaultedOf(key, fallback, arrOf(schema));\n    const defaultedObjOf = (key, fallback, objSchema) => defaultedOf(key, fallback, objOf(objSchema));\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const generate$7 = cases => {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      const constructors = [];\n      const adt = {};\n      each$1(cases, (acase, count) => {\n        const keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        const key = keys$1[0];\n        const value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = (...args) => {\n          const argLength = args.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          const match = branches => {\n            const branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            const allReqd = forall(constructors, reqKey => {\n              return contains$2(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: (...foldArgs) => {\n              if (foldArgs.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n              }\n              const target = foldArgs[count];\n              return target.apply(null, args);\n            },\n            match,\n            log: label => {\n              console.log(label, {\n                constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    const Adt = { generate: generate$7 };\n\n    Adt.generate([\n      {\n        bothErrors: [\n          'error1',\n          'error2'\n        ]\n      },\n      {\n        firstError: [\n          'error1',\n          'value2'\n        ]\n      },\n      {\n        secondError: [\n          'value1',\n          'error2'\n        ]\n      },\n      {\n        bothValues: [\n          'value1',\n          'value2'\n        ]\n      }\n    ]);\n    const partition$1 = results => {\n      const errors = [];\n      const values = [];\n      each$1(results, result => {\n        result.fold(err => {\n          errors.push(err);\n        }, value => {\n          values.push(value);\n        });\n      });\n      return {\n        errors,\n        values\n      };\n    };\n\n    const exclude$1 = (obj, fields) => {\n      const r = {};\n      each(obj, (v, k) => {\n        if (!contains$2(fields, k)) {\n          r[k] = v;\n        }\n      });\n      return r;\n    };\n\n    const wrap$2 = (key, value) => ({ [key]: value });\n    const wrapAll$1 = keyvalues => {\n      const r = {};\n      each$1(keyvalues, kv => {\n        r[kv.key] = kv.value;\n      });\n      return r;\n    };\n\n    const exclude = (obj, fields) => exclude$1(obj, fields);\n    const wrap$1 = (key, value) => wrap$2(key, value);\n    const wrapAll = keyvalues => wrapAll$1(keyvalues);\n    const mergeValues = (values, base) => {\n      return values.length === 0 ? Result.value(base) : Result.value(deepMerge(base, merge$1.apply(undefined, values)));\n    };\n    const mergeErrors = errors => Result.error(flatten(errors));\n    const consolidate = (objs, base) => {\n      const partitions = partition$1(objs);\n      return partitions.errors.length > 0 ? mergeErrors(partitions.errors) : mergeValues(partitions.values, base);\n    };\n\n    const ensureIsRoot = isRoot => isFunction(isRoot) ? isRoot : never;\n    const ancestor$2 = (scope, transform, isRoot) => {\n      let element = scope.dom;\n      const stop = ensureIsRoot(isRoot);\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        const transformed = transform(el);\n        if (transformed.isSome()) {\n          return transformed;\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$4 = (scope, transform, isRoot) => {\n      const current = transform(scope);\n      const stop = ensureIsRoot(isRoot);\n      return current.orThunk(() => stop(scope) ? Optional.none() : ancestor$2(scope, transform, stop));\n    };\n\n    const isSource = (component, simulatedEvent) => eq(component.element, simulatedEvent.event.target);\n\n    const defaultEventHandler = {\n      can: always,\n      abort: never,\n      run: noop\n    };\n    const nu$9 = parts => {\n      if (!hasNonNullableKey(parts, 'can') && !hasNonNullableKey(parts, 'abort') && !hasNonNullableKey(parts, 'run')) {\n        throw new Error('EventHandler defined by: ' + JSON.stringify(parts, null, 2) + ' does not have can, abort, or run!');\n      }\n      return {\n        ...defaultEventHandler,\n        ...parts\n      };\n    };\n    const all$2 = (handlers, f) => (...args) => foldl(handlers, (acc, handler) => acc && f(handler).apply(undefined, args), true);\n    const any = (handlers, f) => (...args) => foldl(handlers, (acc, handler) => acc || f(handler).apply(undefined, args), false);\n    const read$2 = handler => isFunction(handler) ? {\n      can: always,\n      abort: never,\n      run: handler\n    } : handler;\n    const fuse$1 = handlers => {\n      const can = all$2(handlers, handler => handler.can);\n      const abort = any(handlers, handler => handler.abort);\n      const run = (...args) => {\n        each$1(handlers, handler => {\n          handler.run.apply(undefined, args);\n        });\n      };\n      return {\n        can,\n        abort,\n        run\n      };\n    };\n\n    const constant = constant$1;\n    const touchstart = constant('touchstart');\n    const touchmove = constant('touchmove');\n    const touchend = constant('touchend');\n    const touchcancel = constant('touchcancel');\n    const mousedown = constant('mousedown');\n    const mousemove = constant('mousemove');\n    const mouseout = constant('mouseout');\n    const mouseup = constant('mouseup');\n    const mouseover = constant('mouseover');\n    const focusin = constant('focusin');\n    const focusout = constant('focusout');\n    const keydown = constant('keydown');\n    const keyup = constant('keyup');\n    const input = constant('input');\n    const change = constant('change');\n    const click = constant('click');\n    const transitioncancel = constant('transitioncancel');\n    const transitionend = constant('transitionend');\n    const transitionstart = constant('transitionstart');\n    const selectstart = constant('selectstart');\n\n    const prefixName = name => constant$1('alloy.' + name);\n    const alloy = { tap: prefixName('tap') };\n    const focus$4 = prefixName('focus');\n    const postBlur = prefixName('blur.post');\n    const postPaste = prefixName('paste.post');\n    const receive = prefixName('receive');\n    const execute$5 = prefixName('execute');\n    const focusItem = prefixName('focus.item');\n    const tap = alloy.tap;\n    const longpress = prefixName('longpress');\n    const sandboxClose = prefixName('sandbox.close');\n    const typeaheadCancel = prefixName('typeahead.cancel');\n    const systemInit = prefixName('system.init');\n    const documentTouchmove = prefixName('system.touchmove');\n    const documentTouchend = prefixName('system.touchend');\n    const windowScroll = prefixName('system.scroll');\n    const windowResize = prefixName('system.resize');\n    const attachedToDom = prefixName('system.attached');\n    const detachedFromDom = prefixName('system.detached');\n    const dismissRequested = prefixName('system.dismissRequested');\n    const repositionRequested = prefixName('system.repositionRequested');\n    const focusShifted = prefixName('focusmanager.shifted');\n    const slotVisibility = prefixName('slotcontainer.visibility');\n    const changeTab = prefixName('change.tab');\n    const dismissTab = prefixName('dismiss.tab');\n    const highlight$1 = prefixName('highlight');\n    const dehighlight$1 = prefixName('dehighlight');\n\n    const emit = (component, event) => {\n      dispatchWith(component, component.element, event, {});\n    };\n    const emitWith = (component, event, properties) => {\n      dispatchWith(component, component.element, event, properties);\n    };\n    const emitExecute = component => {\n      emit(component, execute$5());\n    };\n    const dispatch = (component, target, event) => {\n      dispatchWith(component, target, event, {});\n    };\n    const dispatchWith = (component, target, event, properties) => {\n      const data = {\n        target,\n        ...properties\n      };\n      component.getSystem().triggerEvent(event, target, data);\n    };\n    const retargetAndDispatchWith = (component, target, eventName, properties) => {\n      const data = {\n        ...properties,\n        target\n      };\n      component.getSystem().triggerEvent(eventName, target, data);\n    };\n    const dispatchEvent = (component, target, event, simulatedEvent) => {\n      component.getSystem().triggerEvent(event, target, simulatedEvent.event);\n    };\n\n    const derive$2 = configs => wrapAll(configs);\n    const abort = (name, predicate) => {\n      return {\n        key: name,\n        value: nu$9({ abort: predicate })\n      };\n    };\n    const can = (name, predicate) => {\n      return {\n        key: name,\n        value: nu$9({ can: predicate })\n      };\n    };\n    const preventDefault = name => {\n      return {\n        key: name,\n        value: nu$9({\n          run: (component, simulatedEvent) => {\n            simulatedEvent.event.prevent();\n          }\n        })\n      };\n    };\n    const run$1 = (name, handler) => {\n      return {\n        key: name,\n        value: nu$9({ run: handler })\n      };\n    };\n    const runActionExtra = (name, action, extra) => {\n      return {\n        key: name,\n        value: nu$9({\n          run: (component, simulatedEvent) => {\n            action.apply(undefined, [\n              component,\n              simulatedEvent\n            ].concat(extra));\n          }\n        })\n      };\n    };\n    const runOnName = name => {\n      return handler => run$1(name, handler);\n    };\n    const runOnSourceName = name => {\n      return handler => ({\n        key: name,\n        value: nu$9({\n          run: (component, simulatedEvent) => {\n            if (isSource(component, simulatedEvent)) {\n              handler(component, simulatedEvent);\n            }\n          }\n        })\n      });\n    };\n    const redirectToUid = (name, uid) => {\n      return run$1(name, (component, simulatedEvent) => {\n        component.getSystem().getByUid(uid).each(redirectee => {\n          dispatchEvent(redirectee, redirectee.element, name, simulatedEvent);\n        });\n      });\n    };\n    const redirectToPart = (name, detail, partName) => {\n      const uid = detail.partUids[partName];\n      return redirectToUid(name, uid);\n    };\n    const runWithTarget = (name, f) => {\n      return run$1(name, (component, simulatedEvent) => {\n        const ev = simulatedEvent.event;\n        const target = component.getSystem().getByDom(ev.target).getOrThunk(() => {\n          const closest = closest$4(ev.target, el => component.getSystem().getByDom(el).toOptional(), never);\n          return closest.getOr(component);\n        });\n        f(component, target, simulatedEvent);\n      });\n    };\n    const cutter = name => {\n      return run$1(name, (component, simulatedEvent) => {\n        simulatedEvent.cut();\n      });\n    };\n    const stopper = name => {\n      return run$1(name, (component, simulatedEvent) => {\n        simulatedEvent.stop();\n      });\n    };\n    const runOnSource = (name, f) => {\n      return runOnSourceName(name)(f);\n    };\n    const runOnAttached = runOnSourceName(attachedToDom());\n    const runOnDetached = runOnSourceName(detachedFromDom());\n    const runOnInit = runOnSourceName(systemInit());\n    const runOnExecute$1 = runOnName(execute$5());\n\n    const fromHtml$1 = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      return children(SugarElement.fromDom(div));\n    };\n\n    const get$9 = element => element.dom.innerHTML;\n    const set$6 = (element, content) => {\n      const owner = owner$4(element);\n      const docDom = owner.dom;\n      const fragment = SugarElement.fromDom(docDom.createDocumentFragment());\n      const contentElements = fromHtml$1(content, docDom);\n      append$1(fragment, contentElements);\n      empty(element);\n      append$2(element, fragment);\n    };\n    const getOuter = element => {\n      const container = SugarElement.fromTag('div');\n      const clone = SugarElement.fromDom(element.dom.cloneNode(true));\n      append$2(container, clone);\n      return get$9(container);\n    };\n\n    const clone = (original, isDeep) => SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    const shallow = original => clone(original, false);\n\n    const getHtml = element => {\n      if (isShadowRoot(element)) {\n        return '#shadow-root';\n      } else {\n        const clone = shallow(element);\n        return getOuter(clone);\n      }\n    };\n\n    const element = elem => getHtml(elem);\n\n    const isRecursive = (component, originator, target) => eq(originator, component.element) && !eq(originator, target);\n    const events$i = derive$2([can(focus$4(), (component, simulatedEvent) => {\n        const event = simulatedEvent.event;\n        const originator = event.originator;\n        const target = event.target;\n        if (isRecursive(component, originator, target)) {\n          console.warn(focus$4() + ' did not get interpreted by the desired target. ' + '\\nOriginator: ' + element(originator) + '\\nTarget: ' + element(target) + '\\nCheck the ' + focus$4() + ' event handlers');\n          return false;\n        } else {\n          return true;\n        }\n      })]);\n\n    var DefaultEvents = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$i\n    });\n\n    let unique = 0;\n    const generate$6 = prefix => {\n      const date = new Date();\n      const time = date.getTime();\n      const random = Math.floor(Math.random() * 1000000000);\n      unique++;\n      return prefix + '_' + random + unique + String(time);\n    };\n\n    const prefix$1 = constant$1('alloy-id-');\n    const idAttr$1 = constant$1('data-alloy-id');\n\n    const prefix = prefix$1();\n    const idAttr = idAttr$1();\n    const write = (label, elem) => {\n      const id = generate$6(prefix + label);\n      writeOnly(elem, id);\n      return id;\n    };\n    const writeOnly = (elem, uid) => {\n      Object.defineProperty(elem.dom, idAttr, {\n        value: uid,\n        writable: true\n      });\n    };\n    const read$1 = elem => {\n      const id = isElement$1(elem) ? elem.dom[idAttr] : null;\n      return Optional.from(id);\n    };\n    const generate$5 = prefix => generate$6(prefix);\n\n    const make$8 = identity;\n\n    const NoContextApi = getComp => {\n      const getMessage = event => `The component must be in a context to execute: ${ event }` + (getComp ? '\\n' + element(getComp().element) + ' is not in context.' : '');\n      const fail = event => () => {\n        throw new Error(getMessage(event));\n      };\n      const warn = event => () => {\n        console.warn(getMessage(event));\n      };\n      return {\n        debugInfo: constant$1('fake'),\n        triggerEvent: warn('triggerEvent'),\n        triggerFocus: warn('triggerFocus'),\n        triggerEscape: warn('triggerEscape'),\n        broadcast: warn('broadcast'),\n        broadcastOn: warn('broadcastOn'),\n        broadcastEvent: warn('broadcastEvent'),\n        build: fail('build'),\n        buildOrPatch: fail('buildOrPatch'),\n        addToWorld: fail('addToWorld'),\n        removeFromWorld: fail('removeFromWorld'),\n        addToGui: fail('addToGui'),\n        removeFromGui: fail('removeFromGui'),\n        getByUid: fail('getByUid'),\n        getByDom: fail('getByDom'),\n        isConnected: never\n      };\n    };\n    const singleton$1 = NoContextApi();\n\n    const markAsBehaviourApi = (f, apiName, apiFunction) => {\n      const delegate = apiFunction.toString();\n      const endIndex = delegate.indexOf(')') + 1;\n      const openBracketIndex = delegate.indexOf('(');\n      const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n      f.toFunctionAnnotation = () => ({\n        name: apiName,\n        parameters: cleanParameters(parameters.slice(0, 1).concat(parameters.slice(3)))\n      });\n      return f;\n    };\n    const cleanParameters = parameters => map$2(parameters, p => endsWith(p, '/*') ? p.substring(0, p.length - '/*'.length) : p);\n    const markAsExtraApi = (f, extraName) => {\n      const delegate = f.toString();\n      const endIndex = delegate.indexOf(')') + 1;\n      const openBracketIndex = delegate.indexOf('(');\n      const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n      f.toFunctionAnnotation = () => ({\n        name: extraName,\n        parameters: cleanParameters(parameters)\n      });\n      return f;\n    };\n    const markAsSketchApi = (f, apiFunction) => {\n      const delegate = apiFunction.toString();\n      const endIndex = delegate.indexOf(')') + 1;\n      const openBracketIndex = delegate.indexOf('(');\n      const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n      f.toFunctionAnnotation = () => ({\n        name: 'OVERRIDE',\n        parameters: cleanParameters(parameters.slice(1))\n      });\n      return f;\n    };\n\n    const premadeTag = generate$6('alloy-premade');\n    const premade$1 = comp => {\n      Object.defineProperty(comp.element.dom, premadeTag, {\n        value: comp.uid,\n        writable: true\n      });\n      return wrap$1(premadeTag, comp);\n    };\n    const isPremade = element => has$2(element.dom, premadeTag);\n    const getPremade = spec => get$g(spec, premadeTag);\n    const makeApi = f => markAsSketchApi((component, ...rest) => f(component.getApis(), component, ...rest), f);\n\n    const NoState = { init: () => nu$8({ readState: constant$1('No State required') }) };\n    const nu$8 = spec => spec;\n\n    const generateFrom$1 = (spec, all) => {\n      const schema = map$2(all, a => optionObjOf(a.name(), [\n        required$1('config'),\n        defaulted('state', NoState)\n      ]));\n      const validated = asRaw('component.behaviours', objOf(schema), spec.behaviours).fold(errInfo => {\n        throw new Error(formatError(errInfo) + '\\nComplete spec:\\n' + JSON.stringify(spec, null, 2));\n      }, identity);\n      return {\n        list: all,\n        data: map$1(validated, optBlobThunk => {\n          const output = optBlobThunk.map(blob => ({\n            config: blob.config,\n            state: blob.state.init(blob.config)\n          }));\n          return constant$1(output);\n        })\n      };\n    };\n    const getBehaviours$3 = bData => bData.list;\n    const getData$2 = bData => bData.data;\n\n    const byInnerKey = (data, tuple) => {\n      const r = {};\n      each(data, (detail, key) => {\n        each(detail, (value, indexKey) => {\n          const chain = get$g(r, indexKey).getOr([]);\n          r[indexKey] = chain.concat([tuple(key, value)]);\n        });\n      });\n      return r;\n    };\n\n    const nu$7 = s => ({\n      classes: isUndefined(s.classes) ? [] : s.classes,\n      attributes: isUndefined(s.attributes) ? {} : s.attributes,\n      styles: isUndefined(s.styles) ? {} : s.styles\n    });\n    const merge = (defnA, mod) => ({\n      ...defnA,\n      attributes: {\n        ...defnA.attributes,\n        ...mod.attributes\n      },\n      styles: {\n        ...defnA.styles,\n        ...mod.styles\n      },\n      classes: defnA.classes.concat(mod.classes)\n    });\n\n    const combine$2 = (info, baseMod, behaviours, base) => {\n      const modsByBehaviour = { ...baseMod };\n      each$1(behaviours, behaviour => {\n        modsByBehaviour[behaviour.name()] = behaviour.exhibit(info, base);\n      });\n      const byAspect = byInnerKey(modsByBehaviour, (name, modification) => ({\n        name,\n        modification\n      }));\n      const combineObjects = objects => foldr(objects, (b, a) => ({\n        ...a.modification,\n        ...b\n      }), {});\n      const combinedClasses = foldr(byAspect.classes, (b, a) => a.modification.concat(b), []);\n      const combinedAttributes = combineObjects(byAspect.attributes);\n      const combinedStyles = combineObjects(byAspect.styles);\n      return nu$7({\n        classes: combinedClasses,\n        attributes: combinedAttributes,\n        styles: combinedStyles\n      });\n    };\n\n    const sortKeys = (label, keyName, array, order) => {\n      try {\n        const sorted = sort(array, (a, b) => {\n          const aKey = a[keyName];\n          const bKey = b[keyName];\n          const aIndex = order.indexOf(aKey);\n          const bIndex = order.indexOf(bKey);\n          if (aIndex === -1) {\n            throw new Error('The ordering for ' + label + ' does not have an entry for ' + aKey + '.\\nOrder specified: ' + JSON.stringify(order, null, 2));\n          }\n          if (bIndex === -1) {\n            throw new Error('The ordering for ' + label + ' does not have an entry for ' + bKey + '.\\nOrder specified: ' + JSON.stringify(order, null, 2));\n          }\n          if (aIndex < bIndex) {\n            return -1;\n          } else if (bIndex < aIndex) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        return Result.value(sorted);\n      } catch (err) {\n        return Result.error([err]);\n      }\n    };\n\n    const uncurried = (handler, purpose) => ({\n      handler,\n      purpose\n    });\n    const curried = (handler, purpose) => ({\n      cHandler: handler,\n      purpose\n    });\n    const curryArgs = (descHandler, extraArgs) => curried(curry.apply(undefined, [descHandler.handler].concat(extraArgs)), descHandler.purpose);\n    const getCurried = descHandler => descHandler.cHandler;\n\n    const behaviourTuple = (name, handler) => ({\n      name,\n      handler\n    });\n    const nameToHandlers = (behaviours, info) => {\n      const r = {};\n      each$1(behaviours, behaviour => {\n        r[behaviour.name()] = behaviour.handlers(info);\n      });\n      return r;\n    };\n    const groupByEvents = (info, behaviours, base) => {\n      const behaviourEvents = {\n        ...base,\n        ...nameToHandlers(behaviours, info)\n      };\n      return byInnerKey(behaviourEvents, behaviourTuple);\n    };\n    const combine$1 = (info, eventOrder, behaviours, base) => {\n      const byEventName = groupByEvents(info, behaviours, base);\n      return combineGroups(byEventName, eventOrder);\n    };\n    const assemble = rawHandler => {\n      const handler = read$2(rawHandler);\n      return (component, simulatedEvent, ...rest) => {\n        const args = [\n          component,\n          simulatedEvent\n        ].concat(rest);\n        if (handler.abort.apply(undefined, args)) {\n          simulatedEvent.stop();\n        } else if (handler.can.apply(undefined, args)) {\n          handler.run.apply(undefined, args);\n        }\n      };\n    };\n    const missingOrderError = (eventName, tuples) => Result.error(['The event (' + eventName + ') has more than one behaviour that listens to it.\\nWhen this occurs, you must ' + 'specify an event ordering for the behaviours in your spec (e.g. [ \"listing\", \"toggling\" ]).\\nThe behaviours that ' + 'can trigger it are: ' + JSON.stringify(map$2(tuples, c => c.name), null, 2)]);\n    const fuse = (tuples, eventOrder, eventName) => {\n      const order = eventOrder[eventName];\n      if (!order) {\n        return missingOrderError(eventName, tuples);\n      } else {\n        return sortKeys('Event: ' + eventName, 'name', tuples, order).map(sortedTuples => {\n          const handlers = map$2(sortedTuples, tuple => tuple.handler);\n          return fuse$1(handlers);\n        });\n      }\n    };\n    const combineGroups = (byEventName, eventOrder) => {\n      const r = mapToArray(byEventName, (tuples, eventName) => {\n        const combined = tuples.length === 1 ? Result.value(tuples[0].handler) : fuse(tuples, eventOrder, eventName);\n        return combined.map(handler => {\n          const assembled = assemble(handler);\n          const purpose = tuples.length > 1 ? filter$2(eventOrder[eventName], o => exists(tuples, t => t.name === o)).join(' > ') : tuples[0].name;\n          return wrap$1(eventName, uncurried(assembled, purpose));\n        });\n      });\n      return consolidate(r, {});\n    };\n\n    const baseBehaviour = 'alloy.base.behaviour';\n    const schema$z = objOf([\n      field$1('dom', 'dom', required$2(), objOf([\n        required$1('tag'),\n        defaulted('styles', {}),\n        defaulted('classes', []),\n        defaulted('attributes', {}),\n        option$3('value'),\n        option$3('innerHtml')\n      ])),\n      required$1('components'),\n      required$1('uid'),\n      defaulted('events', {}),\n      defaulted('apis', {}),\n      field$1('eventOrder', 'eventOrder', mergeWith({\n        [execute$5()]: [\n          'disabling',\n          baseBehaviour,\n          'toggling',\n          'typeaheadevents'\n        ],\n        [focus$4()]: [\n          baseBehaviour,\n          'focusing',\n          'keying'\n        ],\n        [systemInit()]: [\n          baseBehaviour,\n          'disabling',\n          'toggling',\n          'representing'\n        ],\n        [input()]: [\n          baseBehaviour,\n          'representing',\n          'streaming',\n          'invalidating'\n        ],\n        [detachedFromDom()]: [\n          baseBehaviour,\n          'representing',\n          'item-events',\n          'tooltipping'\n        ],\n        [mousedown()]: [\n          'focusing',\n          baseBehaviour,\n          'item-type-events'\n        ],\n        [touchstart()]: [\n          'focusing',\n          baseBehaviour,\n          'item-type-events'\n        ],\n        [mouseover()]: [\n          'item-type-events',\n          'tooltipping'\n        ],\n        [receive()]: [\n          'receiving',\n          'reflecting',\n          'tooltipping'\n        ]\n      }), anyValue()),\n      option$3('domModification')\n    ]);\n    const toInfo = spec => asRaw('custom.definition', schema$z, spec);\n    const toDefinition = detail => ({\n      ...detail.dom,\n      uid: detail.uid,\n      domChildren: map$2(detail.components, comp => comp.element)\n    });\n    const toModification = detail => detail.domModification.fold(() => nu$7({}), nu$7);\n    const toEvents = info => info.events;\n\n    const read = (element, attr) => {\n      const value = get$f(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    const add$4 = (element, attr, id) => {\n      const old = read(element, attr);\n      const nu = old.concat([id]);\n      set$9(element, attr, nu.join(' '));\n      return true;\n    };\n    const remove$4 = (element, attr, id) => {\n      const nu = filter$2(read(element, attr), v => v !== id);\n      if (nu.length > 0) {\n        set$9(element, attr, nu.join(' '));\n      } else {\n        remove$7(element, attr);\n      }\n      return false;\n    };\n\n    const supports = element => element.dom.classList !== undefined;\n    const get$8 = element => read(element, 'class');\n    const add$3 = (element, clazz) => add$4(element, 'class', clazz);\n    const remove$3 = (element, clazz) => remove$4(element, 'class', clazz);\n\n    const add$2 = (element, clazz) => {\n      if (supports(element)) {\n        element.dom.classList.add(clazz);\n      } else {\n        add$3(element, clazz);\n      }\n    };\n    const cleanClass = element => {\n      const classList = supports(element) ? element.dom.classList : get$8(element);\n      if (classList.length === 0) {\n        remove$7(element, 'class');\n      }\n    };\n    const remove$2 = (element, clazz) => {\n      if (supports(element)) {\n        const classList = element.dom.classList;\n        classList.remove(clazz);\n      } else {\n        remove$3(element, clazz);\n      }\n      cleanClass(element);\n    };\n    const has = (element, clazz) => supports(element) && element.dom.classList.contains(clazz);\n\n    const add$1 = (element, classes) => {\n      each$1(classes, x => {\n        add$2(element, x);\n      });\n    };\n    const remove$1 = (element, classes) => {\n      each$1(classes, x => {\n        remove$2(element, x);\n      });\n    };\n    const hasAll = (element, classes) => forall(classes, clazz => has(element, clazz));\n    const getNative = element => {\n      const classList = element.dom.classList;\n      const r = new Array(classList.length);\n      for (let i = 0; i < classList.length; i++) {\n        const item = classList.item(i);\n        if (item !== null) {\n          r[i] = item;\n        }\n      }\n      return r;\n    };\n    const get$7 = element => supports(element) ? getNative(element) : get$8(element);\n\n    const get$6 = element => element.dom.value;\n    const set$5 = (element, value) => {\n      if (value === undefined) {\n        throw new Error('Value.set was undefined');\n      }\n      element.dom.value = value;\n    };\n\n    const determineObsoleted = (parent, index, oldObsoleted) => {\n      const newObsoleted = child$2(parent, index);\n      return newObsoleted.map(newObs => {\n        const elemChanged = oldObsoleted.exists(o => !eq(o, newObs));\n        if (elemChanged) {\n          const oldTag = oldObsoleted.map(name$3).getOr('span');\n          const marker = SugarElement.fromTag(oldTag);\n          before$1(newObs, marker);\n          return marker;\n        } else {\n          return newObs;\n        }\n      });\n    };\n    const ensureInDom = (parent, child, obsoleted) => {\n      obsoleted.fold(() => append$2(parent, child), obs => {\n        if (!eq(obs, child)) {\n          before$1(obs, child);\n          remove$5(obs);\n        }\n      });\n    };\n    const patchChildrenWith = (parent, nu, f) => {\n      const builtChildren = map$2(nu, f);\n      const currentChildren = children(parent);\n      each$1(currentChildren.slice(builtChildren.length), remove$5);\n      return builtChildren;\n    };\n    const patchSpecChild = (parent, index, spec, build) => {\n      const oldObsoleted = child$2(parent, index);\n      const childComp = build(spec, oldObsoleted);\n      const obsoleted = determineObsoleted(parent, index, oldObsoleted);\n      ensureInDom(parent, childComp.element, obsoleted);\n      return childComp;\n    };\n    const patchSpecChildren = (parent, specs, build) => patchChildrenWith(parent, specs, (spec, index) => patchSpecChild(parent, index, spec, build));\n    const patchDomChildren = (parent, nodes) => patchChildrenWith(parent, nodes, (node, index) => {\n      const optObsoleted = child$2(parent, index);\n      ensureInDom(parent, node, optObsoleted);\n      return node;\n    });\n\n    const diffKeyValueSet = (newObj, oldObj) => {\n      const newKeys = keys(newObj);\n      const oldKeys = keys(oldObj);\n      const toRemove = difference(oldKeys, newKeys);\n      const toSet = bifilter(newObj, (v, k) => {\n        return !has$2(oldObj, k) || v !== oldObj[k];\n      }).t;\n      return {\n        toRemove,\n        toSet\n      };\n    };\n    const reconcileToDom = (definition, obsoleted) => {\n      const {\n        class: clazz,\n        style,\n        ...existingAttributes\n      } = clone$1(obsoleted);\n      const {\n        toSet: attrsToSet,\n        toRemove: attrsToRemove\n      } = diffKeyValueSet(definition.attributes, existingAttributes);\n      const updateAttrs = () => {\n        each$1(attrsToRemove, a => remove$7(obsoleted, a));\n        setAll$1(obsoleted, attrsToSet);\n      };\n      const existingStyles = getAllRaw(obsoleted);\n      const {\n        toSet: stylesToSet,\n        toRemove: stylesToRemove\n      } = diffKeyValueSet(definition.styles, existingStyles);\n      const updateStyles = () => {\n        each$1(stylesToRemove, s => remove$6(obsoleted, s));\n        setAll(obsoleted, stylesToSet);\n      };\n      const existingClasses = get$7(obsoleted);\n      const classesToRemove = difference(existingClasses, definition.classes);\n      const classesToAdd = difference(definition.classes, existingClasses);\n      const updateClasses = () => {\n        add$1(obsoleted, classesToAdd);\n        remove$1(obsoleted, classesToRemove);\n      };\n      const updateHtml = html => {\n        set$6(obsoleted, html);\n      };\n      const updateChildren = () => {\n        const children = definition.domChildren;\n        patchDomChildren(obsoleted, children);\n      };\n      const updateValue = () => {\n        const valueElement = obsoleted;\n        const value = definition.value.getOrUndefined();\n        if (value !== get$6(valueElement)) {\n          set$5(valueElement, value !== null && value !== void 0 ? value : '');\n        }\n      };\n      updateAttrs();\n      updateClasses();\n      updateStyles();\n      definition.innerHtml.fold(updateChildren, updateHtml);\n      updateValue();\n      return obsoleted;\n    };\n\n    const introduceToDom = definition => {\n      const subject = SugarElement.fromTag(definition.tag);\n      setAll$1(subject, definition.attributes);\n      add$1(subject, definition.classes);\n      setAll(subject, definition.styles);\n      definition.innerHtml.each(html => set$6(subject, html));\n      const children = definition.domChildren;\n      append$1(subject, children);\n      definition.value.each(value => {\n        set$5(subject, value);\n      });\n      return subject;\n    };\n    const attemptPatch = (definition, obsoleted) => {\n      try {\n        const e = reconcileToDom(definition, obsoleted);\n        return Optional.some(e);\n      } catch (err) {\n        return Optional.none();\n      }\n    };\n    const hasMixedChildren = definition => definition.innerHtml.isSome() && definition.domChildren.length > 0;\n    const renderToDom = (definition, optObsoleted) => {\n      const canBePatched = candidate => name$3(candidate) === definition.tag && !hasMixedChildren(definition) && !isPremade(candidate);\n      const elem = optObsoleted.filter(canBePatched).bind(obsoleted => attemptPatch(definition, obsoleted)).getOrThunk(() => introduceToDom(definition));\n      writeOnly(elem, definition.uid);\n      return elem;\n    };\n\n    const getBehaviours$2 = spec => {\n      const behaviours = get$g(spec, 'behaviours').getOr({});\n      return bind$3(keys(behaviours), name => {\n        const behaviour = behaviours[name];\n        return isNonNullable(behaviour) ? [behaviour.me] : [];\n      });\n    };\n    const generateFrom = (spec, all) => generateFrom$1(spec, all);\n    const generate$4 = spec => {\n      const all = getBehaviours$2(spec);\n      return generateFrom(spec, all);\n    };\n\n    const getDomDefinition = (info, bList, bData) => {\n      const definition = toDefinition(info);\n      const infoModification = toModification(info);\n      const baseModification = { 'alloy.base.modification': infoModification };\n      const modification = bList.length > 0 ? combine$2(bData, baseModification, bList, definition) : infoModification;\n      return merge(definition, modification);\n    };\n    const getEvents = (info, bList, bData) => {\n      const baseEvents = { 'alloy.base.behaviour': toEvents(info) };\n      return combine$1(bData, info.eventOrder, bList, baseEvents).getOrDie();\n    };\n    const build$2 = (spec, obsoleted) => {\n      const getMe = () => me;\n      const systemApi = Cell(singleton$1);\n      const info = getOrDie(toInfo(spec));\n      const bBlob = generate$4(spec);\n      const bList = getBehaviours$3(bBlob);\n      const bData = getData$2(bBlob);\n      const modDefinition = getDomDefinition(info, bList, bData);\n      const item = renderToDom(modDefinition, obsoleted);\n      const events = getEvents(info, bList, bData);\n      const subcomponents = Cell(info.components);\n      const connect = newApi => {\n        systemApi.set(newApi);\n      };\n      const disconnect = () => {\n        systemApi.set(NoContextApi(getMe));\n      };\n      const syncComponents = () => {\n        const children$1 = children(item);\n        const subs = bind$3(children$1, child => systemApi.get().getByDom(child).fold(() => [], pure$2));\n        subcomponents.set(subs);\n      };\n      const config = behaviour => {\n        const b = bData;\n        const f = isFunction(b[behaviour.name()]) ? b[behaviour.name()] : () => {\n          throw new Error('Could not find ' + behaviour.name() + ' in ' + JSON.stringify(spec, null, 2));\n        };\n        return f();\n      };\n      const hasConfigured = behaviour => isFunction(bData[behaviour.name()]);\n      const getApis = () => info.apis;\n      const readState = behaviourName => bData[behaviourName]().map(b => b.state.readState()).getOr('not enabled');\n      const me = {\n        uid: spec.uid,\n        getSystem: systemApi.get,\n        config,\n        hasConfigured,\n        spec,\n        readState,\n        getApis,\n        connect,\n        disconnect,\n        element: item,\n        syncComponents,\n        components: subcomponents.get,\n        events\n      };\n      return me;\n    };\n\n    const buildSubcomponents = (spec, obsoleted) => {\n      const components = get$g(spec, 'components').getOr([]);\n      return obsoleted.fold(() => map$2(components, build$1), obs => map$2(components, (c, i) => {\n        return buildOrPatch(c, child$2(obs, i));\n      }));\n    };\n    const buildFromSpec = (userSpec, obsoleted) => {\n      const {\n        events: specEvents,\n        ...spec\n      } = make$8(userSpec);\n      const components = buildSubcomponents(spec, obsoleted);\n      const completeSpec = {\n        ...spec,\n        events: {\n          ...DefaultEvents,\n          ...specEvents\n        },\n        components\n      };\n      return Result.value(build$2(completeSpec, obsoleted));\n    };\n    const text$1 = textContent => {\n      const element = SugarElement.fromText(textContent);\n      return external$1({ element });\n    };\n    const external$1 = spec => {\n      const extSpec = asRawOrDie$1('external.component', objOfOnly([\n        required$1('element'),\n        option$3('uid')\n      ]), spec);\n      const systemApi = Cell(NoContextApi());\n      const connect = newApi => {\n        systemApi.set(newApi);\n      };\n      const disconnect = () => {\n        systemApi.set(NoContextApi(() => me));\n      };\n      const uid = extSpec.uid.getOrThunk(() => generate$5('external'));\n      writeOnly(extSpec.element, uid);\n      const me = {\n        uid,\n        getSystem: systemApi.get,\n        config: Optional.none,\n        hasConfigured: never,\n        connect,\n        disconnect,\n        getApis: () => ({}),\n        element: extSpec.element,\n        spec,\n        readState: constant$1('No state'),\n        syncComponents: noop,\n        components: constant$1([]),\n        events: {}\n      };\n      return premade$1(me);\n    };\n    const uids = generate$5;\n    const isSketchSpec$1 = spec => has$2(spec, 'uid');\n    const buildOrPatch = (spec, obsoleted) => getPremade(spec).getOrThunk(() => {\n      const userSpecWithUid = isSketchSpec$1(spec) ? spec : {\n        uid: uids(''),\n        ...spec\n      };\n      return buildFromSpec(userSpecWithUid, obsoleted).getOrDie();\n    });\n    const build$1 = spec => buildOrPatch(spec, Optional.none());\n    const premade = premade$1;\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    const ancestor$1 = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$3 = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor$1, scope, predicate, isRoot);\n    };\n    const child$1 = (scope, predicate) => {\n      const pred = node => predicate(SugarElement.fromDom(node));\n      const result = find$5(scope.dom.childNodes, pred);\n      return result.map(SugarElement.fromDom);\n    };\n    const descendant$1 = (scope, predicate) => {\n      const descend = node => {\n        for (let i = 0; i < node.childNodes.length; i++) {\n          const child = SugarElement.fromDom(node.childNodes[i]);\n          if (predicate(child)) {\n            return Optional.some(child);\n          }\n          const res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope.dom);\n    };\n\n    const closest$2 = (scope, predicate, isRoot) => closest$3(scope, predicate, isRoot).isSome();\n\n    const ancestor = (scope, selector, isRoot) => ancestor$1(scope, e => is(e, selector), isRoot);\n    const child = (scope, selector) => child$1(scope, e => is(e, selector));\n    const descendant = (scope, selector) => one(selector, scope);\n    const closest$1 = (scope, selector, isRoot) => {\n      const is$1 = (element, selector) => is(element, selector);\n      return ClosestOrAncestor(is$1, ancestor, scope, selector, isRoot);\n    };\n\n    const attribute = 'aria-controls';\n    const find$1 = queryElem => {\n      const dependent = closest$3(queryElem, elem => {\n        if (!isElement$1(elem)) {\n          return false;\n        }\n        const id = get$f(elem, 'id');\n        return id !== undefined && id.indexOf(attribute) > -1;\n      });\n      return dependent.bind(dep => {\n        const id = get$f(dep, 'id');\n        const dos = getRootNode(dep);\n        return descendant(dos, `[${ attribute }=\"${ id }\"]`);\n      });\n    };\n    const manager = () => {\n      const ariaId = generate$6(attribute);\n      const link = elem => {\n        set$9(elem, attribute, ariaId);\n      };\n      const unlink = elem => {\n        remove$7(elem, attribute);\n      };\n      return {\n        id: ariaId,\n        link,\n        unlink\n      };\n    };\n\n    const isAriaPartOf = (component, queryElem) => find$1(queryElem).exists(owner => isPartOf$1(component, owner));\n    const isPartOf$1 = (component, queryElem) => closest$2(queryElem, el => eq(el, component.element), never) || isAriaPartOf(component, queryElem);\n\n    const unknown = 'unknown';\n    var EventConfiguration;\n    (function (EventConfiguration) {\n      EventConfiguration[EventConfiguration['STOP'] = 0] = 'STOP';\n      EventConfiguration[EventConfiguration['NORMAL'] = 1] = 'NORMAL';\n      EventConfiguration[EventConfiguration['LOGGING'] = 2] = 'LOGGING';\n    }(EventConfiguration || (EventConfiguration = {})));\n    const eventConfig = Cell({});\n    const makeEventLogger = (eventName, initialTarget) => {\n      const sequence = [];\n      const startTime = new Date().getTime();\n      return {\n        logEventCut: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'cut',\n            target,\n            purpose\n          });\n        },\n        logEventStopped: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'stopped',\n            target,\n            purpose\n          });\n        },\n        logNoParent: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'no-parent',\n            target,\n            purpose\n          });\n        },\n        logEventNoHandlers: (_name, target) => {\n          sequence.push({\n            outcome: 'no-handlers-left',\n            target\n          });\n        },\n        logEventResponse: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'response',\n            purpose,\n            target\n          });\n        },\n        write: () => {\n          const finishTime = new Date().getTime();\n          if (contains$2([\n              'mousemove',\n              'mouseover',\n              'mouseout',\n              systemInit()\n            ], eventName)) {\n            return;\n          }\n          console.log(eventName, {\n            event: eventName,\n            time: finishTime - startTime,\n            target: initialTarget.dom,\n            sequence: map$2(sequence, s => {\n              if (!contains$2([\n                  'cut',\n                  'stopped',\n                  'response'\n                ], s.outcome)) {\n                return s.outcome;\n              } else {\n                return '{' + s.purpose + '} ' + s.outcome + ' at (' + element(s.target) + ')';\n              }\n            })\n          });\n        }\n      };\n    };\n    const processEvent = (eventName, initialTarget, f) => {\n      const status = get$g(eventConfig.get(), eventName).orThunk(() => {\n        const patterns = keys(eventConfig.get());\n        return findMap(patterns, p => eventName.indexOf(p) > -1 ? Optional.some(eventConfig.get()[p]) : Optional.none());\n      }).getOr(EventConfiguration.NORMAL);\n      switch (status) {\n      case EventConfiguration.NORMAL:\n        return f(noLogger());\n      case EventConfiguration.LOGGING: {\n          const logger = makeEventLogger(eventName, initialTarget);\n          const output = f(logger);\n          logger.write();\n          return output;\n        }\n      case EventConfiguration.STOP:\n        return true;\n      }\n    };\n    const path = [\n      'alloy/data/Fields',\n      'alloy/debugging/Debugging'\n    ];\n    const getTrace = () => {\n      const err = new Error();\n      if (err.stack !== undefined) {\n        const lines = err.stack.split('\\n');\n        return find$5(lines, line => line.indexOf('alloy') > 0 && !exists(path, p => line.indexOf(p) > -1)).getOr(unknown);\n      } else {\n        return unknown;\n      }\n    };\n    const ignoreEvent = {\n      logEventCut: noop,\n      logEventStopped: noop,\n      logNoParent: noop,\n      logEventNoHandlers: noop,\n      logEventResponse: noop,\n      write: noop\n    };\n    const monitorEvent = (eventName, initialTarget, f) => processEvent(eventName, initialTarget, f);\n    const noLogger = constant$1(ignoreEvent);\n\n    const menuFields = constant$1([\n      required$1('menu'),\n      required$1('selectedMenu')\n    ]);\n    const itemFields = constant$1([\n      required$1('item'),\n      required$1('selectedItem')\n    ]);\n    constant$1(objOf(itemFields().concat(menuFields())));\n    const itemSchema$3 = constant$1(objOf(itemFields()));\n\n    const _initSize = requiredObjOf('initSize', [\n      required$1('numColumns'),\n      required$1('numRows')\n    ]);\n    const itemMarkers = () => requiredOf('markers', itemSchema$3());\n    const tieredMenuMarkers = () => requiredObjOf('markers', [required$1('backgroundMenu')].concat(menuFields()).concat(itemFields()));\n    const markers$1 = required => requiredObjOf('markers', map$2(required, required$1));\n    const onPresenceHandler = (label, fieldName, presence) => {\n      getTrace();\n      return field$1(fieldName, fieldName, presence, valueOf(f => Result.value((...args) => {\n        return f.apply(undefined, args);\n      })));\n    };\n    const onHandler = fieldName => onPresenceHandler('onHandler', fieldName, defaulted$1(noop));\n    const onKeyboardHandler = fieldName => onPresenceHandler('onKeyboardHandler', fieldName, defaulted$1(Optional.none));\n    const onStrictHandler = fieldName => onPresenceHandler('onHandler', fieldName, required$2());\n    const onStrictKeyboardHandler = fieldName => onPresenceHandler('onKeyboardHandler', fieldName, required$2());\n    const output$1 = (name, value) => customField(name, constant$1(value));\n    const snapshot = name => customField(name, identity);\n    const initSize = constant$1(_initSize);\n\n    const nu$6 = (x, y, bubble, direction, placement, boundsRestriction, labelPrefix, alwaysFit = false) => ({\n      x,\n      y,\n      bubble,\n      direction,\n      placement,\n      restriction: boundsRestriction,\n      label: `${ labelPrefix }-${ placement }`,\n      alwaysFit\n    });\n\n    const adt$a = Adt.generate([\n      { southeast: [] },\n      { southwest: [] },\n      { northeast: [] },\n      { northwest: [] },\n      { south: [] },\n      { north: [] },\n      { east: [] },\n      { west: [] }\n    ]);\n    const cata$2 = (subject, southeast, southwest, northeast, northwest, south, north, east, west) => subject.fold(southeast, southwest, northeast, northwest, south, north, east, west);\n    const cataVertical = (subject, south, middle, north) => subject.fold(south, south, north, north, south, north, middle, middle);\n    const cataHorizontal = (subject, east, middle, west) => subject.fold(east, west, east, west, middle, middle, east, west);\n    const southeast$3 = adt$a.southeast;\n    const southwest$3 = adt$a.southwest;\n    const northeast$3 = adt$a.northeast;\n    const northwest$3 = adt$a.northwest;\n    const south$3 = adt$a.south;\n    const north$3 = adt$a.north;\n    const east$3 = adt$a.east;\n    const west$3 = adt$a.west;\n\n    const cycleBy = (value, delta, min, max) => {\n      const r = value + delta;\n      if (r > max) {\n        return min;\n      } else if (r < min) {\n        return max;\n      } else {\n        return r;\n      }\n    };\n    const clamp = (value, min, max) => Math.min(Math.max(value, min), max);\n\n    const getRestriction = (anchor, restriction) => {\n      switch (restriction) {\n      case 1:\n        return anchor.x;\n      case 0:\n        return anchor.x + anchor.width;\n      case 2:\n        return anchor.y;\n      case 3:\n        return anchor.y + anchor.height;\n      }\n    };\n    const boundsRestriction = (anchor, restrictions) => mapToObject([\n      'left',\n      'right',\n      'top',\n      'bottom'\n    ], dir => get$g(restrictions, dir).map(restriction => getRestriction(anchor, restriction)));\n    const adjustBounds = (bounds$1, restriction, bubbleOffset) => {\n      const applyRestriction = (dir, current) => restriction[dir].map(pos => {\n        const isVerticalAxis = dir === 'top' || dir === 'bottom';\n        const offset = isVerticalAxis ? bubbleOffset.top : bubbleOffset.left;\n        const comparator = dir === 'left' || dir === 'top' ? Math.max : Math.min;\n        const newPos = comparator(pos, current) + offset;\n        return isVerticalAxis ? clamp(newPos, bounds$1.y, bounds$1.bottom) : clamp(newPos, bounds$1.x, bounds$1.right);\n      }).getOr(current);\n      const adjustedLeft = applyRestriction('left', bounds$1.x);\n      const adjustedTop = applyRestriction('top', bounds$1.y);\n      const adjustedRight = applyRestriction('right', bounds$1.right);\n      const adjustedBottom = applyRestriction('bottom', bounds$1.bottom);\n      return bounds(adjustedLeft, adjustedTop, adjustedRight - adjustedLeft, adjustedBottom - adjustedTop);\n    };\n\n    const labelPrefix$2 = 'layout';\n    const eastX$1 = anchor => anchor.x;\n    const middleX$1 = (anchor, element) => anchor.x + anchor.width / 2 - element.width / 2;\n    const westX$1 = (anchor, element) => anchor.x + anchor.width - element.width;\n    const northY$2 = (anchor, element) => anchor.y - element.height;\n    const southY$2 = anchor => anchor.y + anchor.height;\n    const centreY$1 = (anchor, element) => anchor.y + anchor.height / 2 - element.height / 2;\n    const eastEdgeX$1 = anchor => anchor.x + anchor.width;\n    const westEdgeX$1 = (anchor, element) => anchor.x - element.width;\n    const southeast$2 = (anchor, element, bubbles) => nu$6(eastX$1(anchor), southY$2(anchor), bubbles.southeast(), southeast$3(), 'southeast', boundsRestriction(anchor, {\n      left: 1,\n      top: 3\n    }), labelPrefix$2);\n    const southwest$2 = (anchor, element, bubbles) => nu$6(westX$1(anchor, element), southY$2(anchor), bubbles.southwest(), southwest$3(), 'southwest', boundsRestriction(anchor, {\n      right: 0,\n      top: 3\n    }), labelPrefix$2);\n    const northeast$2 = (anchor, element, bubbles) => nu$6(eastX$1(anchor), northY$2(anchor, element), bubbles.northeast(), northeast$3(), 'northeast', boundsRestriction(anchor, {\n      left: 1,\n      bottom: 2\n    }), labelPrefix$2);\n    const northwest$2 = (anchor, element, bubbles) => nu$6(westX$1(anchor, element), northY$2(anchor, element), bubbles.northwest(), northwest$3(), 'northwest', boundsRestriction(anchor, {\n      right: 0,\n      bottom: 2\n    }), labelPrefix$2);\n    const north$2 = (anchor, element, bubbles) => nu$6(middleX$1(anchor, element), northY$2(anchor, element), bubbles.north(), north$3(), 'north', boundsRestriction(anchor, { bottom: 2 }), labelPrefix$2);\n    const south$2 = (anchor, element, bubbles) => nu$6(middleX$1(anchor, element), southY$2(anchor), bubbles.south(), south$3(), 'south', boundsRestriction(anchor, { top: 3 }), labelPrefix$2);\n    const east$2 = (anchor, element, bubbles) => nu$6(eastEdgeX$1(anchor), centreY$1(anchor, element), bubbles.east(), east$3(), 'east', boundsRestriction(anchor, { left: 0 }), labelPrefix$2);\n    const west$2 = (anchor, element, bubbles) => nu$6(westEdgeX$1(anchor, element), centreY$1(anchor, element), bubbles.west(), west$3(), 'west', boundsRestriction(anchor, { right: 1 }), labelPrefix$2);\n    const all$1 = () => [\n      southeast$2,\n      southwest$2,\n      northeast$2,\n      northwest$2,\n      south$2,\n      north$2,\n      east$2,\n      west$2\n    ];\n    const allRtl$1 = () => [\n      southwest$2,\n      southeast$2,\n      northwest$2,\n      northeast$2,\n      south$2,\n      north$2,\n      east$2,\n      west$2\n    ];\n    const aboveOrBelow = () => [\n      northeast$2,\n      northwest$2,\n      southeast$2,\n      southwest$2,\n      north$2,\n      south$2\n    ];\n    const aboveOrBelowRtl = () => [\n      northwest$2,\n      northeast$2,\n      southwest$2,\n      southeast$2,\n      north$2,\n      south$2\n    ];\n    const belowOrAbove = () => [\n      southeast$2,\n      southwest$2,\n      northeast$2,\n      northwest$2,\n      south$2,\n      north$2\n    ];\n    const belowOrAboveRtl = () => [\n      southwest$2,\n      southeast$2,\n      northwest$2,\n      northeast$2,\n      south$2,\n      north$2\n    ];\n\n    const chooseChannels = (channels, message) => message.universal ? channels : filter$2(channels, ch => contains$2(message.channels, ch));\n    const events$h = receiveConfig => derive$2([run$1(receive(), (component, message) => {\n        const channelMap = receiveConfig.channels;\n        const channels = keys(channelMap);\n        const receivingData = message;\n        const targetChannels = chooseChannels(channels, receivingData);\n        each$1(targetChannels, ch => {\n          const channelInfo = channelMap[ch];\n          const channelSchema = channelInfo.schema;\n          const data = asRawOrDie$1('channel[' + ch + '] data\\nReceiver: ' + element(component.element), channelSchema, receivingData.data);\n          channelInfo.onReceive(component, data);\n        });\n      })]);\n\n    var ActiveReceiving = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$h\n    });\n\n    var ReceivingSchema = [requiredOf('channels', setOf(Result.value, objOfOnly([\n        onStrictHandler('onReceive'),\n        defaulted('schema', anyValue())\n      ])))];\n\n    const executeEvent = (bConfig, bState, executor) => runOnExecute$1(component => {\n      executor(component, bConfig, bState);\n    });\n    const loadEvent = (bConfig, bState, f) => runOnInit((component, _simulatedEvent) => {\n      f(component, bConfig, bState);\n    });\n    const create$4 = (schema, name, active, apis, extra, state) => {\n      const configSchema = objOfOnly(schema);\n      const schemaSchema = optionObjOf(name, [optionObjOfOnly('config', schema)]);\n      return doCreate(configSchema, schemaSchema, name, active, apis, extra, state);\n    };\n    const createModes$1 = (modes, name, active, apis, extra, state) => {\n      const configSchema = modes;\n      const schemaSchema = optionObjOf(name, [optionOf('config', modes)]);\n      return doCreate(configSchema, schemaSchema, name, active, apis, extra, state);\n    };\n    const wrapApi = (bName, apiFunction, apiName) => {\n      const f = (component, ...rest) => {\n        const args = [component].concat(rest);\n        return component.config({ name: constant$1(bName) }).fold(() => {\n          throw new Error('We could not find any behaviour configuration for: ' + bName + '. Using API: ' + apiName);\n        }, info => {\n          const rest = Array.prototype.slice.call(args, 1);\n          return apiFunction.apply(undefined, [\n            component,\n            info.config,\n            info.state\n          ].concat(rest));\n        });\n      };\n      return markAsBehaviourApi(f, apiName, apiFunction);\n    };\n    const revokeBehaviour = name => ({\n      key: name,\n      value: undefined\n    });\n    const doCreate = (configSchema, schemaSchema, name, active, apis, extra, state) => {\n      const getConfig = info => hasNonNullableKey(info, name) ? info[name]() : Optional.none();\n      const wrappedApis = map$1(apis, (apiF, apiName) => wrapApi(name, apiF, apiName));\n      const wrappedExtra = map$1(extra, (extraF, extraName) => markAsExtraApi(extraF, extraName));\n      const me = {\n        ...wrappedExtra,\n        ...wrappedApis,\n        revoke: curry(revokeBehaviour, name),\n        config: spec => {\n          const prepared = asRawOrDie$1(name + '-config', configSchema, spec);\n          return {\n            key: name,\n            value: {\n              config: prepared,\n              me,\n              configAsRaw: cached(() => asRawOrDie$1(name + '-config', configSchema, spec)),\n              initialConfig: spec,\n              state\n            }\n          };\n        },\n        schema: constant$1(schemaSchema),\n        exhibit: (info, base) => {\n          return lift2(getConfig(info), get$g(active, 'exhibit'), (behaviourInfo, exhibitor) => {\n            return exhibitor(base, behaviourInfo.config, behaviourInfo.state);\n          }).getOrThunk(() => nu$7({}));\n        },\n        name: constant$1(name),\n        handlers: info => {\n          return getConfig(info).map(behaviourInfo => {\n            const getEvents = get$g(active, 'events').getOr(() => ({}));\n            return getEvents(behaviourInfo.config, behaviourInfo.state);\n          }).getOr({});\n        }\n      };\n      return me;\n    };\n\n    const derive$1 = capabilities => wrapAll(capabilities);\n    const simpleSchema = objOfOnly([\n      required$1('fields'),\n      required$1('name'),\n      defaulted('active', {}),\n      defaulted('apis', {}),\n      defaulted('state', NoState),\n      defaulted('extra', {})\n    ]);\n    const create$3 = data => {\n      const value = asRawOrDie$1('Creating behaviour: ' + data.name, simpleSchema, data);\n      return create$4(value.fields, value.name, value.active, value.apis, value.extra, value.state);\n    };\n    const modeSchema = objOfOnly([\n      required$1('branchKey'),\n      required$1('branches'),\n      required$1('name'),\n      defaulted('active', {}),\n      defaulted('apis', {}),\n      defaulted('state', NoState),\n      defaulted('extra', {})\n    ]);\n    const createModes = data => {\n      const value = asRawOrDie$1('Creating behaviour: ' + data.name, modeSchema, data);\n      return createModes$1(choose$1(value.branchKey, value.branches), value.name, value.active, value.apis, value.extra, value.state);\n    };\n    const revoke = constant$1(undefined);\n\n    const Receiving = create$3({\n      fields: ReceivingSchema,\n      name: 'receiving',\n      active: ActiveReceiving\n    });\n\n    const exhibit$6 = (base, posConfig) => nu$7({\n      classes: [],\n      styles: posConfig.useFixed() ? {} : { position: 'relative' }\n    });\n\n    var ActivePosition = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$6\n    });\n\n    const focus$3 = element => element.dom.focus();\n    const blur$1 = element => element.dom.blur();\n    const hasFocus = element => {\n      const root = getRootNode(element).dom;\n      return element.dom === root.activeElement;\n    };\n    const active$1 = (root = getDocument()) => Optional.from(root.dom.activeElement).map(SugarElement.fromDom);\n    const search = element => active$1(getRootNode(element)).filter(e => element.dom.contains(e.dom));\n\n    const preserve$1 = (f, container) => {\n      const dos = getRootNode(container);\n      const refocus = active$1(dos).bind(focused => {\n        const hasFocus = elem => eq(focused, elem);\n        return hasFocus(container) ? Optional.some(container) : descendant$1(container, hasFocus);\n      });\n      const result = f(container);\n      refocus.each(oldFocus => {\n        active$1(dos).filter(newFocus => eq(newFocus, oldFocus)).fold(() => {\n          focus$3(oldFocus);\n        }, noop);\n      });\n      return result;\n    };\n\n    const NuPositionCss = (position, left, top, right, bottom) => {\n      const toPx = num => num + 'px';\n      return {\n        position,\n        left: left.map(toPx),\n        top: top.map(toPx),\n        right: right.map(toPx),\n        bottom: bottom.map(toPx)\n      };\n    };\n    const toOptions = position => ({\n      ...position,\n      position: Optional.some(position.position)\n    });\n    const applyPositionCss = (element, position) => {\n      setOptions(element, toOptions(position));\n    };\n\n    const adt$9 = Adt.generate([\n      { none: [] },\n      {\n        relative: [\n          'x',\n          'y',\n          'width',\n          'height'\n        ]\n      },\n      {\n        fixed: [\n          'x',\n          'y',\n          'width',\n          'height'\n        ]\n      }\n    ]);\n    const positionWithDirection = (posName, decision, x, y, width, height) => {\n      const decisionRect = decision.rect;\n      const decisionX = decisionRect.x - x;\n      const decisionY = decisionRect.y - y;\n      const decisionWidth = decisionRect.width;\n      const decisionHeight = decisionRect.height;\n      const decisionRight = width - (decisionX + decisionWidth);\n      const decisionBottom = height - (decisionY + decisionHeight);\n      const left = Optional.some(decisionX);\n      const top = Optional.some(decisionY);\n      const right = Optional.some(decisionRight);\n      const bottom = Optional.some(decisionBottom);\n      const none = Optional.none();\n      return cata$2(decision.direction, () => NuPositionCss(posName, left, top, none, none), () => NuPositionCss(posName, none, top, right, none), () => NuPositionCss(posName, left, none, none, bottom), () => NuPositionCss(posName, none, none, right, bottom), () => NuPositionCss(posName, left, top, none, none), () => NuPositionCss(posName, left, none, none, bottom), () => NuPositionCss(posName, left, top, none, none), () => NuPositionCss(posName, none, top, right, none));\n    };\n    const reposition = (origin, decision) => origin.fold(() => {\n      const decisionRect = decision.rect;\n      return NuPositionCss('absolute', Optional.some(decisionRect.x), Optional.some(decisionRect.y), Optional.none(), Optional.none());\n    }, (x, y, width, height) => {\n      return positionWithDirection('absolute', decision, x, y, width, height);\n    }, (x, y, width, height) => {\n      return positionWithDirection('fixed', decision, x, y, width, height);\n    });\n    const toBox = (origin, element) => {\n      const rel = curry(find$2, element);\n      const position = origin.fold(rel, rel, () => {\n        const scroll = get$b();\n        return find$2(element).translate(-scroll.left, -scroll.top);\n      });\n      const width = getOuter$1(element);\n      const height = getOuter$2(element);\n      return bounds(position.left, position.top, width, height);\n    };\n    const viewport = (origin, getBounds) => getBounds.fold(() => origin.fold(win, win, bounds), b => origin.fold(b, b, () => {\n      const bounds$1 = b();\n      const pos = translate$2(origin, bounds$1.x, bounds$1.y);\n      return bounds(pos.left, pos.top, bounds$1.width, bounds$1.height);\n    }));\n    const translate$2 = (origin, x, y) => {\n      const pos = SugarPosition(x, y);\n      const removeScroll = () => {\n        const outerScroll = get$b();\n        return pos.translate(-outerScroll.left, -outerScroll.top);\n      };\n      return origin.fold(constant$1(pos), constant$1(pos), removeScroll);\n    };\n    const cata$1 = (subject, onNone, onRelative, onFixed) => subject.fold(onNone, onRelative, onFixed);\n    adt$9.none;\n    const relative$1 = adt$9.relative;\n    const fixed$1 = adt$9.fixed;\n\n    const anchor = (anchorBox, origin) => ({\n      anchorBox,\n      origin\n    });\n    const box = (anchorBox, origin) => anchor(anchorBox, origin);\n\n    const placementAttribute = 'data-alloy-placement';\n    const setPlacement$1 = (element, placement) => {\n      set$9(element, placementAttribute, placement);\n    };\n    const getPlacement = element => getOpt(element, placementAttribute);\n    const reset$2 = element => remove$7(element, placementAttribute);\n\n    const adt$8 = Adt.generate([\n      { fit: ['reposition'] },\n      {\n        nofit: [\n          'reposition',\n          'visibleW',\n          'visibleH',\n          'isVisible'\n        ]\n      }\n    ]);\n    const determinePosition = (box, bounds) => {\n      const {\n        x: boundsX,\n        y: boundsY,\n        right: boundsRight,\n        bottom: boundsBottom\n      } = bounds;\n      const {x, y, right, bottom, width, height} = box;\n      const xInBounds = x >= boundsX && x <= boundsRight;\n      const yInBounds = y >= boundsY && y <= boundsBottom;\n      const originInBounds = xInBounds && yInBounds;\n      const rightInBounds = right <= boundsRight && right >= boundsX;\n      const bottomInBounds = bottom <= boundsBottom && bottom >= boundsY;\n      const sizeInBounds = rightInBounds && bottomInBounds;\n      const visibleW = Math.min(width, x >= boundsX ? boundsRight - x : right - boundsX);\n      const visibleH = Math.min(height, y >= boundsY ? boundsBottom - y : bottom - boundsY);\n      return {\n        originInBounds,\n        sizeInBounds,\n        visibleW,\n        visibleH\n      };\n    };\n    const calcReposition = (box, bounds$1) => {\n      const {\n        x: boundsX,\n        y: boundsY,\n        right: boundsRight,\n        bottom: boundsBottom\n      } = bounds$1;\n      const {x, y, width, height} = box;\n      const maxX = Math.max(boundsX, boundsRight - width);\n      const maxY = Math.max(boundsY, boundsBottom - height);\n      const restrictedX = clamp(x, boundsX, maxX);\n      const restrictedY = clamp(y, boundsY, maxY);\n      const restrictedWidth = Math.min(restrictedX + width, boundsRight) - restrictedX;\n      const restrictedHeight = Math.min(restrictedY + height, boundsBottom) - restrictedY;\n      return bounds(restrictedX, restrictedY, restrictedWidth, restrictedHeight);\n    };\n    const calcMaxSizes = (direction, box, bounds) => {\n      const upAvailable = constant$1(box.bottom - bounds.y);\n      const downAvailable = constant$1(bounds.bottom - box.y);\n      const maxHeight = cataVertical(direction, downAvailable, downAvailable, upAvailable);\n      const westAvailable = constant$1(box.right - bounds.x);\n      const eastAvailable = constant$1(bounds.right - box.x);\n      const maxWidth = cataHorizontal(direction, eastAvailable, eastAvailable, westAvailable);\n      return {\n        maxWidth,\n        maxHeight\n      };\n    };\n    const attempt = (candidate, width, height, bounds$1) => {\n      const bubble = candidate.bubble;\n      const bubbleOffset = bubble.offset;\n      const adjustedBounds = adjustBounds(bounds$1, candidate.restriction, bubbleOffset);\n      const newX = candidate.x + bubbleOffset.left;\n      const newY = candidate.y + bubbleOffset.top;\n      const box = bounds(newX, newY, width, height);\n      const {originInBounds, sizeInBounds, visibleW, visibleH} = determinePosition(box, adjustedBounds);\n      const fits = originInBounds && sizeInBounds;\n      const fittedBox = fits ? box : calcReposition(box, adjustedBounds);\n      const isPartlyVisible = fittedBox.width > 0 && fittedBox.height > 0;\n      const {maxWidth, maxHeight} = calcMaxSizes(candidate.direction, fittedBox, bounds$1);\n      const reposition = {\n        rect: fittedBox,\n        maxHeight,\n        maxWidth,\n        direction: candidate.direction,\n        placement: candidate.placement,\n        classes: {\n          on: bubble.classesOn,\n          off: bubble.classesOff\n        },\n        layout: candidate.label,\n        testY: newY\n      };\n      return fits || candidate.alwaysFit ? adt$8.fit(reposition) : adt$8.nofit(reposition, visibleW, visibleH, isPartlyVisible);\n    };\n    const attempts = (element, candidates, anchorBox, elementBox, bubbles, bounds) => {\n      const panelWidth = elementBox.width;\n      const panelHeight = elementBox.height;\n      const attemptBestFit = (layout, reposition, visibleW, visibleH, isVisible) => {\n        const next = layout(anchorBox, elementBox, bubbles, element, bounds);\n        const attemptLayout = attempt(next, panelWidth, panelHeight, bounds);\n        return attemptLayout.fold(constant$1(attemptLayout), (newReposition, newVisibleW, newVisibleH, newIsVisible) => {\n          const improved = isVisible === newIsVisible ? newVisibleH > visibleH || newVisibleW > visibleW : !isVisible && newIsVisible;\n          return improved ? attemptLayout : adt$8.nofit(reposition, visibleW, visibleH, isVisible);\n        });\n      };\n      const abc = foldl(candidates, (b, a) => {\n        const bestNext = curry(attemptBestFit, a);\n        return b.fold(constant$1(b), bestNext);\n      }, adt$8.nofit({\n        rect: anchorBox,\n        maxHeight: elementBox.height,\n        maxWidth: elementBox.width,\n        direction: southeast$3(),\n        placement: 'southeast',\n        classes: {\n          on: [],\n          off: []\n        },\n        layout: 'none',\n        testY: anchorBox.y\n      }, -1, -1, false));\n      return abc.fold(identity, identity);\n    };\n\n    const singleton = doRevoke => {\n      const subject = Cell(Optional.none());\n      const revoke = () => subject.get().each(doRevoke);\n      const clear = () => {\n        revoke();\n        subject.set(Optional.none());\n      };\n      const isSet = () => subject.get().isSome();\n      const get = () => subject.get();\n      const set = s => {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear,\n        isSet,\n        get,\n        set\n      };\n    };\n    const destroyable = () => singleton(s => s.destroy());\n    const unbindable = () => singleton(s => s.unbind());\n    const value$2 = () => {\n      const subject = singleton(noop);\n      const on = f => subject.get().each(f);\n      return {\n        ...subject,\n        on\n      };\n    };\n\n    const filter = always;\n    const bind = (element, event, handler) => bind$2(element, event, filter, handler);\n    const capture = (element, event, handler) => capture$1(element, event, filter, handler);\n    const fromRawEvent = fromRawEvent$1;\n\n    const properties = [\n      'top',\n      'bottom',\n      'right',\n      'left'\n    ];\n    const timerAttr = 'data-alloy-transition-timer';\n    const isTransitioning$1 = (element, transition) => hasAll(element, transition.classes);\n    const shouldApplyTransitionCss = (transition, decision, lastPlacement) => {\n      return lastPlacement.exists(placer => {\n        const mode = transition.mode;\n        return mode === 'all' ? true : placer[mode] !== decision[mode];\n      });\n    };\n    const hasChanges = (position, intermediate) => {\n      const round = value => parseFloat(value).toFixed(3);\n      return find$4(intermediate, (value, key) => {\n        const newValue = position[key].map(round);\n        const val = value.map(round);\n        return !equals(newValue, val);\n      }).isSome();\n    };\n    const getTransitionDuration = element => {\n      const get = name => {\n        const style = get$e(element, name);\n        const times = style.split(/\\s*,\\s*/);\n        return filter$2(times, isNotEmpty);\n      };\n      const parse = value => {\n        if (isString(value) && /^[\\d.]+/.test(value)) {\n          const num = parseFloat(value);\n          return endsWith(value, 'ms') ? num : num * 1000;\n        } else {\n          return 0;\n        }\n      };\n      const delay = get('transition-delay');\n      const duration = get('transition-duration');\n      return foldl(duration, (acc, dur, i) => {\n        const time = parse(delay[i]) + parse(dur);\n        return Math.max(acc, time);\n      }, 0);\n    };\n    const setupTransitionListeners = (element, transition) => {\n      const transitionEnd = unbindable();\n      const transitionCancel = unbindable();\n      let timer;\n      const isSourceTransition = e => {\n        var _a;\n        const pseudoElement = (_a = e.raw.pseudoElement) !== null && _a !== void 0 ? _a : '';\n        return eq(e.target, element) && isEmpty(pseudoElement) && contains$2(properties, e.raw.propertyName);\n      };\n      const transitionDone = e => {\n        if (isNullable(e) || isSourceTransition(e)) {\n          transitionEnd.clear();\n          transitionCancel.clear();\n          const type = e === null || e === void 0 ? void 0 : e.raw.type;\n          if (isNullable(type) || type === transitionend()) {\n            clearTimeout(timer);\n            remove$7(element, timerAttr);\n            remove$1(element, transition.classes);\n          }\n        }\n      };\n      const transitionStart = bind(element, transitionstart(), e => {\n        if (isSourceTransition(e)) {\n          transitionStart.unbind();\n          transitionEnd.set(bind(element, transitionend(), transitionDone));\n          transitionCancel.set(bind(element, transitioncancel(), transitionDone));\n        }\n      });\n      const duration = getTransitionDuration(element);\n      requestAnimationFrame(() => {\n        timer = setTimeout(transitionDone, duration + 17);\n        set$9(element, timerAttr, timer);\n      });\n    };\n    const startTransitioning = (element, transition) => {\n      add$1(element, transition.classes);\n      getOpt(element, timerAttr).each(timerId => {\n        clearTimeout(parseInt(timerId, 10));\n        remove$7(element, timerAttr);\n      });\n      setupTransitionListeners(element, transition);\n    };\n    const applyTransitionCss = (element, origin, position, transition, decision, lastPlacement) => {\n      const shouldTransition = shouldApplyTransitionCss(transition, decision, lastPlacement);\n      if (shouldTransition || isTransitioning$1(element, transition)) {\n        set$8(element, 'position', position.position);\n        const rect = toBox(origin, element);\n        const intermediatePosition = reposition(origin, {\n          ...decision,\n          rect\n        });\n        const intermediateCssOptions = mapToObject(properties, prop => intermediatePosition[prop]);\n        if (hasChanges(position, intermediateCssOptions)) {\n          setOptions(element, intermediateCssOptions);\n          if (shouldTransition) {\n            startTransitioning(element, transition);\n          }\n          reflow(element);\n        }\n      } else {\n        remove$1(element, transition.classes);\n      }\n    };\n\n    const elementSize = p => ({\n      width: getOuter$1(p),\n      height: getOuter$2(p)\n    });\n    const layout = (anchorBox, element, bubbles, options) => {\n      remove$6(element, 'max-height');\n      remove$6(element, 'max-width');\n      const elementBox = elementSize(element);\n      return attempts(element, options.preference, anchorBox, elementBox, bubbles, options.bounds);\n    };\n    const setClasses = (element, decision) => {\n      const classInfo = decision.classes;\n      remove$1(element, classInfo.off);\n      add$1(element, classInfo.on);\n    };\n    const setHeight = (element, decision, options) => {\n      const maxHeightFunction = options.maxHeightFunction;\n      maxHeightFunction(element, decision.maxHeight);\n    };\n    const setWidth = (element, decision, options) => {\n      const maxWidthFunction = options.maxWidthFunction;\n      maxWidthFunction(element, decision.maxWidth);\n    };\n    const position$2 = (element, decision, options) => {\n      const positionCss = reposition(options.origin, decision);\n      options.transition.each(transition => {\n        applyTransitionCss(element, options.origin, positionCss, transition, decision, options.lastPlacement);\n      });\n      applyPositionCss(element, positionCss);\n    };\n    const setPlacement = (element, decision) => {\n      setPlacement$1(element, decision.placement);\n    };\n\n    const setMaxHeight = (element, maxHeight) => {\n      setMax$1(element, Math.floor(maxHeight));\n    };\n    const anchored = constant$1((element, available) => {\n      setMaxHeight(element, available);\n      setAll(element, {\n        'overflow-x': 'hidden',\n        'overflow-y': 'auto'\n      });\n    });\n    const expandable$1 = constant$1((element, available) => {\n      setMaxHeight(element, available);\n    });\n\n    const defaultOr = (options, key, dephault) => options[key] === undefined ? dephault : options[key];\n    const simple = (anchor, element, bubble, layouts, lastPlacement, getBounds, overrideOptions, transition) => {\n      const maxHeightFunction = defaultOr(overrideOptions, 'maxHeightFunction', anchored());\n      const maxWidthFunction = defaultOr(overrideOptions, 'maxWidthFunction', noop);\n      const anchorBox = anchor.anchorBox;\n      const origin = anchor.origin;\n      const options = {\n        bounds: viewport(origin, getBounds),\n        origin,\n        preference: layouts,\n        maxHeightFunction,\n        maxWidthFunction,\n        lastPlacement,\n        transition\n      };\n      return go(anchorBox, element, bubble, options);\n    };\n    const go = (anchorBox, element, bubble, options) => {\n      const decision = layout(anchorBox, element, bubble, options);\n      position$2(element, decision, options);\n      setPlacement(element, decision);\n      setClasses(element, decision);\n      setHeight(element, decision, options);\n      setWidth(element, decision, options);\n      return {\n        layout: decision.layout,\n        placement: decision.placement\n      };\n    };\n\n    const allAlignments = [\n      'valignCentre',\n      'alignLeft',\n      'alignRight',\n      'alignCentre',\n      'top',\n      'bottom',\n      'left',\n      'right',\n      'inset'\n    ];\n    const nu$5 = (xOffset, yOffset, classes, insetModifier = 1) => {\n      const insetXOffset = xOffset * insetModifier;\n      const insetYOffset = yOffset * insetModifier;\n      const getClasses = prop => get$g(classes, prop).getOr([]);\n      const make = (xDelta, yDelta, alignmentsOn) => {\n        const alignmentsOff = difference(allAlignments, alignmentsOn);\n        return {\n          offset: SugarPosition(xDelta, yDelta),\n          classesOn: bind$3(alignmentsOn, getClasses),\n          classesOff: bind$3(alignmentsOff, getClasses)\n        };\n      };\n      return {\n        southeast: () => make(-xOffset, yOffset, [\n          'top',\n          'alignLeft'\n        ]),\n        southwest: () => make(xOffset, yOffset, [\n          'top',\n          'alignRight'\n        ]),\n        south: () => make(-xOffset / 2, yOffset, [\n          'top',\n          'alignCentre'\n        ]),\n        northeast: () => make(-xOffset, -yOffset, [\n          'bottom',\n          'alignLeft'\n        ]),\n        northwest: () => make(xOffset, -yOffset, [\n          'bottom',\n          'alignRight'\n        ]),\n        north: () => make(-xOffset / 2, -yOffset, [\n          'bottom',\n          'alignCentre'\n        ]),\n        east: () => make(xOffset, -yOffset / 2, [\n          'valignCentre',\n          'left'\n        ]),\n        west: () => make(-xOffset, -yOffset / 2, [\n          'valignCentre',\n          'right'\n        ]),\n        insetNortheast: () => make(insetXOffset, insetYOffset, [\n          'top',\n          'alignLeft',\n          'inset'\n        ]),\n        insetNorthwest: () => make(-insetXOffset, insetYOffset, [\n          'top',\n          'alignRight',\n          'inset'\n        ]),\n        insetNorth: () => make(-insetXOffset / 2, insetYOffset, [\n          'top',\n          'alignCentre',\n          'inset'\n        ]),\n        insetSoutheast: () => make(insetXOffset, -insetYOffset, [\n          'bottom',\n          'alignLeft',\n          'inset'\n        ]),\n        insetSouthwest: () => make(-insetXOffset, -insetYOffset, [\n          'bottom',\n          'alignRight',\n          'inset'\n        ]),\n        insetSouth: () => make(-insetXOffset / 2, -insetYOffset, [\n          'bottom',\n          'alignCentre',\n          'inset'\n        ]),\n        insetEast: () => make(-insetXOffset, -insetYOffset / 2, [\n          'valignCentre',\n          'right',\n          'inset'\n        ]),\n        insetWest: () => make(insetXOffset, -insetYOffset / 2, [\n          'valignCentre',\n          'left',\n          'inset'\n        ])\n      };\n    };\n    const fallback = () => nu$5(0, 0, {});\n\n    const nu$4 = identity;\n\n    const onDirection = (isLtr, isRtl) => element => getDirection(element) === 'rtl' ? isRtl : isLtr;\n    const getDirection = element => get$e(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n\n    var AttributeValue;\n    (function (AttributeValue) {\n      AttributeValue['TopToBottom'] = 'toptobottom';\n      AttributeValue['BottomToTop'] = 'bottomtotop';\n    }(AttributeValue || (AttributeValue = {})));\n    const Attribute = 'data-alloy-vertical-dir';\n    const isBottomToTopDir = el => closest$2(el, current => isElement$1(current) && get$f(current, 'data-alloy-vertical-dir') === AttributeValue.BottomToTop);\n\n    const schema$y = () => optionObjOf('layouts', [\n      required$1('onLtr'),\n      required$1('onRtl'),\n      option$3('onBottomLtr'),\n      option$3('onBottomRtl')\n    ]);\n    const get$5 = (elem, info, defaultLtr, defaultRtl, defaultBottomLtr, defaultBottomRtl, dirElement) => {\n      const isBottomToTop = dirElement.map(isBottomToTopDir).getOr(false);\n      const customLtr = info.layouts.map(ls => ls.onLtr(elem));\n      const customRtl = info.layouts.map(ls => ls.onRtl(elem));\n      const ltr = isBottomToTop ? info.layouts.bind(ls => ls.onBottomLtr.map(f => f(elem))).or(customLtr).getOr(defaultBottomLtr) : customLtr.getOr(defaultLtr);\n      const rtl = isBottomToTop ? info.layouts.bind(ls => ls.onBottomRtl.map(f => f(elem))).or(customRtl).getOr(defaultBottomRtl) : customRtl.getOr(defaultRtl);\n      const f = onDirection(ltr, rtl);\n      return f(elem);\n    };\n\n    const placement$4 = (component, anchorInfo, origin) => {\n      const hotspot = anchorInfo.hotspot;\n      const anchorBox = toBox(origin, hotspot.element);\n      const layouts = get$5(component.element, anchorInfo, belowOrAbove(), belowOrAboveRtl(), aboveOrBelow(), aboveOrBelowRtl(), Optional.some(anchorInfo.hotspot.element));\n      return Optional.some(nu$4({\n        anchorBox,\n        bubble: anchorInfo.bubble.getOr(fallback()),\n        overrides: anchorInfo.overrides,\n        layouts,\n        placer: Optional.none()\n      }));\n    };\n    var HotspotAnchor = [\n      required$1('hotspot'),\n      option$3('bubble'),\n      defaulted('overrides', {}),\n      schema$y(),\n      output$1('placement', placement$4)\n    ];\n\n    const placement$3 = (component, anchorInfo, origin) => {\n      const pos = translate$2(origin, anchorInfo.x, anchorInfo.y);\n      const anchorBox = bounds(pos.left, pos.top, anchorInfo.width, anchorInfo.height);\n      const layouts = get$5(component.element, anchorInfo, all$1(), allRtl$1(), all$1(), allRtl$1(), Optional.none());\n      return Optional.some(nu$4({\n        anchorBox,\n        bubble: anchorInfo.bubble,\n        overrides: anchorInfo.overrides,\n        layouts,\n        placer: Optional.none()\n      }));\n    };\n    var MakeshiftAnchor = [\n      required$1('x'),\n      required$1('y'),\n      defaulted('height', 0),\n      defaulted('width', 0),\n      defaulted('bubble', fallback()),\n      defaulted('overrides', {}),\n      schema$y(),\n      output$1('placement', placement$3)\n    ];\n\n    const adt$7 = Adt.generate([\n      { screen: ['point'] },\n      {\n        absolute: [\n          'point',\n          'scrollLeft',\n          'scrollTop'\n        ]\n      }\n    ]);\n    const toFixed = pos => pos.fold(identity, (point, scrollLeft, scrollTop) => point.translate(-scrollLeft, -scrollTop));\n    const toAbsolute = pos => pos.fold(identity, identity);\n    const sum = points => foldl(points, (b, a) => b.translate(a.left, a.top), SugarPosition(0, 0));\n    const sumAsFixed = positions => {\n      const points = map$2(positions, toFixed);\n      return sum(points);\n    };\n    const sumAsAbsolute = positions => {\n      const points = map$2(positions, toAbsolute);\n      return sum(points);\n    };\n    const screen = adt$7.screen;\n    const absolute$1 = adt$7.absolute;\n\n    const getOffset = (component, origin, anchorInfo) => {\n      const win = defaultView(anchorInfo.root).dom;\n      const hasSameOwner = frame => {\n        const frameOwner = owner$4(frame);\n        const compOwner = owner$4(component.element);\n        return eq(frameOwner, compOwner);\n      };\n      return Optional.from(win.frameElement).map(SugarElement.fromDom).filter(hasSameOwner).map(absolute$3);\n    };\n    const getRootPoint = (component, origin, anchorInfo) => {\n      const doc = owner$4(component.element);\n      const outerScroll = get$b(doc);\n      const offset = getOffset(component, origin, anchorInfo).getOr(outerScroll);\n      return absolute$1(offset, outerScroll.left, outerScroll.top);\n    };\n\n    const getBox = (left, top, width, height) => {\n      const point = screen(SugarPosition(left, top));\n      return Optional.some(pointed(point, width, height));\n    };\n    const calcNewAnchor = (optBox, rootPoint, anchorInfo, origin, elem) => optBox.map(box => {\n      const points = [\n        rootPoint,\n        box.point\n      ];\n      const topLeft = cata$1(origin, () => sumAsAbsolute(points), () => sumAsAbsolute(points), () => sumAsFixed(points));\n      const anchorBox = rect(topLeft.left, topLeft.top, box.width, box.height);\n      const layoutsLtr = anchorInfo.showAbove ? aboveOrBelow() : belowOrAbove();\n      const layoutsRtl = anchorInfo.showAbove ? aboveOrBelowRtl() : belowOrAboveRtl();\n      const layouts = get$5(elem, anchorInfo, layoutsLtr, layoutsRtl, layoutsLtr, layoutsRtl, Optional.none());\n      return nu$4({\n        anchorBox,\n        bubble: anchorInfo.bubble.getOr(fallback()),\n        overrides: anchorInfo.overrides,\n        layouts,\n        placer: Optional.none()\n      });\n    });\n\n    const placement$2 = (component, anchorInfo, origin) => {\n      const rootPoint = getRootPoint(component, origin, anchorInfo);\n      return anchorInfo.node.filter(inBody).bind(target => {\n        const rect = target.dom.getBoundingClientRect();\n        const nodeBox = getBox(rect.left, rect.top, rect.width, rect.height);\n        const elem = anchorInfo.node.getOr(component.element);\n        return calcNewAnchor(nodeBox, rootPoint, anchorInfo, origin, elem);\n      });\n    };\n    var NodeAnchor = [\n      required$1('node'),\n      required$1('root'),\n      option$3('bubble'),\n      schema$y(),\n      defaulted('overrides', {}),\n      defaulted('showAbove', false),\n      output$1('placement', placement$2)\n    ];\n\n    const zeroWidth = '\\uFEFF';\n    const nbsp = '\\xA0';\n\n    const create$2 = (start, soffset, finish, foffset) => ({\n      start,\n      soffset,\n      finish,\n      foffset\n    });\n    const SimRange = { create: create$2 };\n\n    const adt$6 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    const cata = (subject, onBefore, onOn, onAfter) => subject.fold(onBefore, onOn, onAfter);\n    const getStart$1 = situ => situ.fold(identity, identity, identity);\n    const before = adt$6.before;\n    const on$1 = adt$6.on;\n    const after$1 = adt$6.after;\n    const Situ = {\n      before,\n      on: on$1,\n      after: after$1,\n      cata,\n      getStart: getStart$1\n    };\n\n    const adt$5 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const exactFromRange = simRange => adt$5.exact(simRange.start, simRange.soffset, simRange.finish, simRange.foffset);\n    const getStart = selection => selection.match({\n      domRange: rng => SugarElement.fromDom(rng.startContainer),\n      relative: (startSitu, _finishSitu) => Situ.getStart(startSitu),\n      exact: (start, _soffset, _finish, _foffset) => start\n    });\n    const domRange = adt$5.domRange;\n    const relative = adt$5.relative;\n    const exact = adt$5.exact;\n    const getWin = selection => {\n      const start = getStart(selection);\n      return defaultView(start);\n    };\n    const range$1 = SimRange.create;\n    const SimSelection = {\n      domRange,\n      relative,\n      exact,\n      exactFromRange,\n      getWin,\n      range: range$1\n    };\n\n    const setStart = (rng, situ) => {\n      situ.fold(e => {\n        rng.setStartBefore(e.dom);\n      }, (e, o) => {\n        rng.setStart(e.dom, o);\n      }, e => {\n        rng.setStartAfter(e.dom);\n      });\n    };\n    const setFinish = (rng, situ) => {\n      situ.fold(e => {\n        rng.setEndBefore(e.dom);\n      }, (e, o) => {\n        rng.setEnd(e.dom, o);\n      }, e => {\n        rng.setEndAfter(e.dom);\n      });\n    };\n    const relativeToNative = (win, startSitu, finishSitu) => {\n      const range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    const exactToNative = (win, start, soffset, finish, foffset) => {\n      const rng = win.document.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const toRect = rect => ({\n      left: rect.left,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      width: rect.width,\n      height: rect.height\n    });\n    const getFirstRect$1 = rng => {\n      const rects = rng.getClientRects();\n      const rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n    const getBounds$2 = rng => {\n      const rect = rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n\n    const adt$4 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const fromRange = (win, type, range) => type(SugarElement.fromDom(range.startContainer), range.startOffset, SugarElement.fromDom(range.endContainer), range.endOffset);\n    const getRanges = (win, selection) => selection.match({\n      domRange: rng => {\n        return {\n          ltr: constant$1(rng),\n          rtl: Optional.none\n        };\n      },\n      relative: (startSitu, finishSitu) => {\n        return {\n          ltr: cached(() => relativeToNative(win, startSitu, finishSitu)),\n          rtl: cached(() => Optional.some(relativeToNative(win, finishSitu, startSitu)))\n        };\n      },\n      exact: (start, soffset, finish, foffset) => {\n        return {\n          ltr: cached(() => exactToNative(win, start, soffset, finish, foffset)),\n          rtl: cached(() => Optional.some(exactToNative(win, finish, foffset, start, soffset)))\n        };\n      }\n    });\n    const doDiagnose = (win, ranges) => {\n      const rng = ranges.ltr();\n      if (rng.collapsed) {\n        const reversed = ranges.rtl().filter(rev => rev.collapsed === false);\n        return reversed.map(rev => adt$4.rtl(SugarElement.fromDom(rev.endContainer), rev.endOffset, SugarElement.fromDom(rev.startContainer), rev.startOffset)).getOrThunk(() => fromRange(win, adt$4.ltr, rng));\n      } else {\n        return fromRange(win, adt$4.ltr, rng);\n      }\n    };\n    const diagnose = (win, selection) => {\n      const ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    const asLtrRange = (win, selection) => {\n      const diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(start.dom, soffset);\n          rng.setEnd(finish.dom, foffset);\n          return rng;\n        },\n        rtl: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(finish.dom, foffset);\n          rng.setEnd(start.dom, soffset);\n          return rng;\n        }\n      });\n    };\n    adt$4.ltr;\n    adt$4.rtl;\n\n    const descendants = (scope, selector) => all$3(selector, scope);\n\n    const makeRange = (start, soffset, finish, foffset) => {\n      const doc = owner$4(start);\n      const rng = doc.dom.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const after = (start, soffset, finish, foffset) => {\n      const r = makeRange(start, soffset, finish, foffset);\n      const same = eq(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    const getNativeSelection = win => Optional.from(win.getSelection());\n    const readRange = selection => {\n      if (selection.rangeCount > 0) {\n        const firstRng = selection.getRangeAt(0);\n        const lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Optional.some(SimRange.create(SugarElement.fromDom(firstRng.startContainer), firstRng.startOffset, SugarElement.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Optional.none();\n      }\n    };\n    const doGetExact = selection => {\n      if (selection.anchorNode === null || selection.focusNode === null) {\n        return readRange(selection);\n      } else {\n        const anchor = SugarElement.fromDom(selection.anchorNode);\n        const focus = SugarElement.fromDom(selection.focusNode);\n        return after(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Optional.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n      }\n    };\n    const getExact = win => getNativeSelection(win).filter(sel => sel.rangeCount > 0).bind(doGetExact);\n    const getFirstRect = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return getFirstRect$1(rng);\n    };\n    const getBounds$1 = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return getBounds$2(rng);\n    };\n\n    const NodeValue = (is, name) => {\n      const get = element => {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      const getOption = element => is(element) ? Optional.from(element.dom.nodeValue) : Optional.none();\n      const set = (element, value) => {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom.nodeValue = value;\n      };\n      return {\n        get,\n        getOption,\n        set\n      };\n    };\n\n    const api = NodeValue(isText, 'text');\n    const get$4 = element => api.get(element);\n\n    const point = (element, offset) => ({\n      element,\n      offset\n    });\n    const descendOnce$1 = (element, offset) => {\n      const children$1 = children(element);\n      if (children$1.length === 0) {\n        return point(element, offset);\n      } else if (offset < children$1.length) {\n        return point(children$1[offset], 0);\n      } else {\n        const last = children$1[children$1.length - 1];\n        const len = isText(last) ? get$4(last).length : children(last).length;\n        return point(last, len);\n      }\n    };\n\n    const descendOnce = (element, offset) => isText(element) ? point(element, offset) : descendOnce$1(element, offset);\n    const getAnchorSelection = (win, anchorInfo) => {\n      const getSelection = anchorInfo.getSelection.getOrThunk(() => () => getExact(win));\n      return getSelection().map(sel => {\n        const modStart = descendOnce(sel.start, sel.soffset);\n        const modFinish = descendOnce(sel.finish, sel.foffset);\n        return SimSelection.range(modStart.element, modStart.offset, modFinish.element, modFinish.offset);\n      });\n    };\n    const placement$1 = (component, anchorInfo, origin) => {\n      const win = defaultView(anchorInfo.root).dom;\n      const rootPoint = getRootPoint(component, origin, anchorInfo);\n      const selectionBox = getAnchorSelection(win, anchorInfo).bind(sel => {\n        const optRect = getBounds$1(win, SimSelection.exactFromRange(sel)).orThunk(() => {\n          const x = SugarElement.fromText(zeroWidth);\n          before$1(sel.start, x);\n          const rect = getFirstRect(win, SimSelection.exact(x, 0, x, 1));\n          remove$5(x);\n          return rect;\n        });\n        return optRect.bind(rawRect => getBox(rawRect.left, rawRect.top, rawRect.width, rawRect.height));\n      });\n      const targetElement = getAnchorSelection(win, anchorInfo).bind(sel => isElement$1(sel.start) ? Optional.some(sel.start) : parentElement(sel.start));\n      const elem = targetElement.getOr(component.element);\n      return calcNewAnchor(selectionBox, rootPoint, anchorInfo, origin, elem);\n    };\n    var SelectionAnchor = [\n      option$3('getSelection'),\n      required$1('root'),\n      option$3('bubble'),\n      schema$y(),\n      defaulted('overrides', {}),\n      defaulted('showAbove', false),\n      output$1('placement', placement$1)\n    ];\n\n    const labelPrefix$1 = 'link-layout';\n    const eastX = anchor => anchor.x + anchor.width;\n    const westX = (anchor, element) => anchor.x - element.width;\n    const northY$1 = (anchor, element) => anchor.y - element.height + anchor.height;\n    const southY$1 = anchor => anchor.y;\n    const southeast$1 = (anchor, element, bubbles) => nu$6(eastX(anchor), southY$1(anchor), bubbles.southeast(), southeast$3(), 'southeast', boundsRestriction(anchor, {\n      left: 0,\n      top: 2\n    }), labelPrefix$1);\n    const southwest$1 = (anchor, element, bubbles) => nu$6(westX(anchor, element), southY$1(anchor), bubbles.southwest(), southwest$3(), 'southwest', boundsRestriction(anchor, {\n      right: 1,\n      top: 2\n    }), labelPrefix$1);\n    const northeast$1 = (anchor, element, bubbles) => nu$6(eastX(anchor), northY$1(anchor, element), bubbles.northeast(), northeast$3(), 'northeast', boundsRestriction(anchor, {\n      left: 0,\n      bottom: 3\n    }), labelPrefix$1);\n    const northwest$1 = (anchor, element, bubbles) => nu$6(westX(anchor, element), northY$1(anchor, element), bubbles.northwest(), northwest$3(), 'northwest', boundsRestriction(anchor, {\n      right: 1,\n      bottom: 3\n    }), labelPrefix$1);\n    const all = () => [\n      southeast$1,\n      southwest$1,\n      northeast$1,\n      northwest$1\n    ];\n    const allRtl = () => [\n      southwest$1,\n      southeast$1,\n      northwest$1,\n      northeast$1\n    ];\n\n    const placement = (component, submenuInfo, origin) => {\n      const anchorBox = toBox(origin, submenuInfo.item.element);\n      const layouts = get$5(component.element, submenuInfo, all(), allRtl(), all(), allRtl(), Optional.none());\n      return Optional.some(nu$4({\n        anchorBox,\n        bubble: fallback(),\n        overrides: submenuInfo.overrides,\n        layouts,\n        placer: Optional.none()\n      }));\n    };\n    var SubmenuAnchor = [\n      required$1('item'),\n      schema$y(),\n      defaulted('overrides', {}),\n      output$1('placement', placement)\n    ];\n\n    var AnchorSchema = choose$1('type', {\n      selection: SelectionAnchor,\n      node: NodeAnchor,\n      hotspot: HotspotAnchor,\n      submenu: SubmenuAnchor,\n      makeshift: MakeshiftAnchor\n    });\n\n    const TransitionSchema = [\n      requiredArrayOf('classes', string),\n      defaultedStringEnum('mode', 'all', [\n        'all',\n        'layout',\n        'placement'\n      ])\n    ];\n    const PositionSchema = [\n      defaulted('useFixed', never),\n      option$3('getBounds')\n    ];\n    const PlacementSchema = [\n      requiredOf('anchor', AnchorSchema),\n      optionObjOf('transition', TransitionSchema)\n    ];\n\n    const getFixedOrigin = () => {\n      const html = document.documentElement;\n      return fixed$1(0, 0, html.clientWidth, html.clientHeight);\n    };\n    const getRelativeOrigin = component => {\n      const position = absolute$3(component.element);\n      const bounds = component.element.dom.getBoundingClientRect();\n      return relative$1(position.left, position.top, bounds.width, bounds.height);\n    };\n    const place = (component, origin, anchoring, getBounds, placee, lastPlace, transition) => {\n      const anchor = box(anchoring.anchorBox, origin);\n      return simple(anchor, placee.element, anchoring.bubble, anchoring.layouts, lastPlace, getBounds, anchoring.overrides, transition);\n    };\n    const position$1 = (component, posConfig, posState, placee, placementSpec) => {\n      positionWithin(component, posConfig, posState, placee, placementSpec, Optional.none());\n    };\n    const positionWithin = (component, posConfig, posState, placee, placementSpec, boxElement) => {\n      const boundsBox = boxElement.map(box$1);\n      return positionWithinBounds(component, posConfig, posState, placee, placementSpec, boundsBox);\n    };\n    const positionWithinBounds = (component, posConfig, posState, placee, placementSpec, bounds) => {\n      const placeeDetail = asRawOrDie$1('placement.info', objOf(PlacementSchema), placementSpec);\n      const anchorage = placeeDetail.anchor;\n      const element = placee.element;\n      const placeeState = posState.get(placee.uid);\n      preserve$1(() => {\n        set$8(element, 'position', 'fixed');\n        const oldVisibility = getRaw(element, 'visibility');\n        set$8(element, 'visibility', 'hidden');\n        const origin = posConfig.useFixed() ? getFixedOrigin() : getRelativeOrigin(component);\n        const placer = anchorage.placement;\n        const getBounds = bounds.map(constant$1).or(posConfig.getBounds);\n        placer(component, anchorage, origin).each(anchoring => {\n          const doPlace = anchoring.placer.getOr(place);\n          const newState = doPlace(component, origin, anchoring, getBounds, placee, placeeState, placeeDetail.transition);\n          posState.set(placee.uid, newState);\n        });\n        oldVisibility.fold(() => {\n          remove$6(element, 'visibility');\n        }, vis => {\n          set$8(element, 'visibility', vis);\n        });\n        if (getRaw(element, 'left').isNone() && getRaw(element, 'top').isNone() && getRaw(element, 'right').isNone() && getRaw(element, 'bottom').isNone() && is$1(getRaw(element, 'position'), 'fixed')) {\n          remove$6(element, 'position');\n        }\n      }, element);\n    };\n    const getMode = (component, pConfig, _pState) => pConfig.useFixed() ? 'fixed' : 'absolute';\n    const reset$1 = (component, pConfig, posState, placee) => {\n      const element = placee.element;\n      each$1([\n        'position',\n        'left',\n        'right',\n        'top',\n        'bottom'\n      ], prop => remove$6(element, prop));\n      reset$2(element);\n      posState.clear(placee.uid);\n    };\n\n    var PositionApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        position: position$1,\n        positionWithin: positionWithin,\n        positionWithinBounds: positionWithinBounds,\n        getMode: getMode,\n        reset: reset$1\n    });\n\n    const init$g = () => {\n      let state = {};\n      const set = (id, data) => {\n        state[id] = data;\n      };\n      const get = id => get$g(state, id);\n      const clear = id => {\n        if (isNonNullable(id)) {\n          delete state[id];\n        } else {\n          state = {};\n        }\n      };\n      return nu$8({\n        readState: () => state,\n        clear,\n        set,\n        get\n      });\n    };\n\n    var PositioningState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$g\n    });\n\n    const Positioning = create$3({\n      fields: PositionSchema,\n      name: 'positioning',\n      active: ActivePosition,\n      apis: PositionApis,\n      state: PositioningState\n    });\n\n    const isConnected = comp => comp.getSystem().isConnected();\n    const fireDetaching = component => {\n      emit(component, detachedFromDom());\n      const children = component.components();\n      each$1(children, fireDetaching);\n    };\n    const fireAttaching = component => {\n      const children = component.components();\n      each$1(children, fireAttaching);\n      emit(component, attachedToDom());\n    };\n    const virtualAttach = (parent, child) => {\n      parent.getSystem().addToWorld(child);\n      if (inBody(parent.element)) {\n        fireAttaching(child);\n      }\n    };\n    const virtualDetach = comp => {\n      fireDetaching(comp);\n      comp.getSystem().removeFromWorld(comp);\n    };\n    const attach$1 = (parent, child) => {\n      append$2(parent.element, child.element);\n    };\n    const detachChildren$1 = component => {\n      each$1(component.components(), childComp => remove$5(childComp.element));\n      empty(component.element);\n      component.syncComponents();\n    };\n    const replaceChildren = (component, newSpecs, buildNewChildren) => {\n      const subs = component.components();\n      detachChildren$1(component);\n      const newChildren = buildNewChildren(newSpecs);\n      const deleted = difference(subs, newChildren);\n      each$1(deleted, comp => {\n        fireDetaching(comp);\n        component.getSystem().removeFromWorld(comp);\n      });\n      each$1(newChildren, childComp => {\n        if (!isConnected(childComp)) {\n          component.getSystem().addToWorld(childComp);\n          attach$1(component, childComp);\n          if (inBody(component.element)) {\n            fireAttaching(childComp);\n          }\n        } else {\n          attach$1(component, childComp);\n        }\n      });\n      component.syncComponents();\n    };\n    const virtualReplaceChildren = (component, newSpecs, buildNewChildren) => {\n      const subs = component.components();\n      const existingComps = bind$3(newSpecs, spec => getPremade(spec).toArray());\n      each$1(subs, childComp => {\n        if (!contains$2(existingComps, childComp)) {\n          virtualDetach(childComp);\n        }\n      });\n      const newChildren = buildNewChildren(newSpecs);\n      const deleted = difference(subs, newChildren);\n      each$1(deleted, deletedComp => {\n        if (isConnected(deletedComp)) {\n          virtualDetach(deletedComp);\n        }\n      });\n      each$1(newChildren, childComp => {\n        if (!isConnected(childComp)) {\n          virtualAttach(component, childComp);\n        }\n      });\n      component.syncComponents();\n    };\n\n    const attach = (parent, child) => {\n      attachWith(parent, child, append$2);\n    };\n    const attachWith = (parent, child, insertion) => {\n      parent.getSystem().addToWorld(child);\n      insertion(parent.element, child.element);\n      if (inBody(parent.element)) {\n        fireAttaching(child);\n      }\n      parent.syncComponents();\n    };\n    const doDetach = component => {\n      fireDetaching(component);\n      remove$5(component.element);\n      component.getSystem().removeFromWorld(component);\n    };\n    const detach = component => {\n      const parent$1 = parent(component.element).bind(p => component.getSystem().getByDom(p).toOptional());\n      doDetach(component);\n      parent$1.each(p => {\n        p.syncComponents();\n      });\n    };\n    const detachChildren = component => {\n      const subs = component.components();\n      each$1(subs, doDetach);\n      empty(component.element);\n      component.syncComponents();\n    };\n    const attachSystem = (element, guiSystem) => {\n      attachSystemWith(element, guiSystem, append$2);\n    };\n    const attachSystemAfter = (element, guiSystem) => {\n      attachSystemWith(element, guiSystem, after$2);\n    };\n    const attachSystemWith = (element, guiSystem, inserter) => {\n      inserter(element, guiSystem.element);\n      const children$1 = children(guiSystem.element);\n      each$1(children$1, child => {\n        guiSystem.getByDom(child).each(fireAttaching);\n      });\n    };\n    const detachSystem = guiSystem => {\n      const children$1 = children(guiSystem.element);\n      each$1(children$1, child => {\n        guiSystem.getByDom(child).each(fireDetaching);\n      });\n      remove$5(guiSystem.element);\n    };\n\n    const rebuild = (sandbox, sConfig, sState, data) => {\n      sState.get().each(_data => {\n        detachChildren(sandbox);\n      });\n      const point = sConfig.getAttachPoint(sandbox);\n      attach(point, sandbox);\n      const built = sandbox.getSystem().build(data);\n      attach(sandbox, built);\n      sState.set(built);\n      return built;\n    };\n    const open$1 = (sandbox, sConfig, sState, data) => {\n      const newState = rebuild(sandbox, sConfig, sState, data);\n      sConfig.onOpen(sandbox, newState);\n      return newState;\n    };\n    const setContent = (sandbox, sConfig, sState, data) => sState.get().map(() => rebuild(sandbox, sConfig, sState, data));\n    const openWhileCloaked = (sandbox, sConfig, sState, data, transaction) => {\n      cloak(sandbox, sConfig);\n      open$1(sandbox, sConfig, sState, data);\n      transaction();\n      decloak(sandbox, sConfig);\n    };\n    const close$1 = (sandbox, sConfig, sState) => {\n      sState.get().each(data => {\n        detachChildren(sandbox);\n        detach(sandbox);\n        sConfig.onClose(sandbox, data);\n        sState.clear();\n      });\n    };\n    const isOpen$1 = (_sandbox, _sConfig, sState) => sState.isOpen();\n    const isPartOf = (sandbox, sConfig, sState, queryElem) => isOpen$1(sandbox, sConfig, sState) && sState.get().exists(data => sConfig.isPartOf(sandbox, data, queryElem));\n    const getState$2 = (_sandbox, _sConfig, sState) => sState.get();\n    const store = (sandbox, cssKey, attr, newValue) => {\n      getRaw(sandbox.element, cssKey).fold(() => {\n        remove$7(sandbox.element, attr);\n      }, v => {\n        set$9(sandbox.element, attr, v);\n      });\n      set$8(sandbox.element, cssKey, newValue);\n    };\n    const restore = (sandbox, cssKey, attr) => {\n      getOpt(sandbox.element, attr).fold(() => remove$6(sandbox.element, cssKey), oldValue => set$8(sandbox.element, cssKey, oldValue));\n    };\n    const cloak = (sandbox, sConfig, _sState) => {\n      const sink = sConfig.getAttachPoint(sandbox);\n      set$8(sandbox.element, 'position', Positioning.getMode(sink));\n      store(sandbox, 'visibility', sConfig.cloakVisibilityAttr, 'hidden');\n    };\n    const hasPosition = element => exists([\n      'top',\n      'left',\n      'right',\n      'bottom'\n    ], pos => getRaw(element, pos).isSome());\n    const decloak = (sandbox, sConfig, _sState) => {\n      if (!hasPosition(sandbox.element)) {\n        remove$6(sandbox.element, 'position');\n      }\n      restore(sandbox, 'visibility', sConfig.cloakVisibilityAttr);\n    };\n\n    var SandboxApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        cloak: cloak,\n        decloak: decloak,\n        open: open$1,\n        openWhileCloaked: openWhileCloaked,\n        close: close$1,\n        isOpen: isOpen$1,\n        isPartOf: isPartOf,\n        getState: getState$2,\n        setContent: setContent\n    });\n\n    const events$g = (sandboxConfig, sandboxState) => derive$2([run$1(sandboxClose(), (sandbox, _simulatedEvent) => {\n        close$1(sandbox, sandboxConfig, sandboxState);\n      })]);\n\n    var ActiveSandbox = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$g\n    });\n\n    var SandboxSchema = [\n      onHandler('onOpen'),\n      onHandler('onClose'),\n      required$1('isPartOf'),\n      required$1('getAttachPoint'),\n      defaulted('cloakVisibilityAttr', 'data-precloak-visibility')\n    ];\n\n    const init$f = () => {\n      const contents = value$2();\n      const readState = constant$1('not-implemented');\n      return nu$8({\n        readState,\n        isOpen: contents.isSet,\n        clear: contents.clear,\n        set: contents.set,\n        get: contents.get\n      });\n    };\n\n    var SandboxState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$f\n    });\n\n    const Sandboxing = create$3({\n      fields: SandboxSchema,\n      name: 'sandboxing',\n      active: ActiveSandbox,\n      apis: SandboxApis,\n      state: SandboxState\n    });\n\n    const dismissPopups = constant$1('dismiss.popups');\n    const repositionPopups = constant$1('reposition.popups');\n    const mouseReleased = constant$1('mouse.released');\n\n    const schema$x = objOfOnly([\n      defaulted('isExtraPart', never),\n      optionObjOf('fireEventInstead', [defaulted('event', dismissRequested())])\n    ]);\n    const receivingChannel$1 = rawSpec => {\n      const detail = asRawOrDie$1('Dismissal', schema$x, rawSpec);\n      return {\n        [dismissPopups()]: {\n          schema: objOfOnly([required$1('target')]),\n          onReceive: (sandbox, data) => {\n            if (Sandboxing.isOpen(sandbox)) {\n              const isPart = Sandboxing.isPartOf(sandbox, data.target) || detail.isExtraPart(sandbox, data.target);\n              if (!isPart) {\n                detail.fireEventInstead.fold(() => Sandboxing.close(sandbox), fe => emit(sandbox, fe.event));\n              }\n            }\n          }\n        }\n      };\n    };\n\n    const schema$w = objOfOnly([\n      optionObjOf('fireEventInstead', [defaulted('event', repositionRequested())]),\n      requiredFunction('doReposition')\n    ]);\n    const receivingChannel = rawSpec => {\n      const detail = asRawOrDie$1('Reposition', schema$w, rawSpec);\n      return {\n        [repositionPopups()]: {\n          onReceive: sandbox => {\n            if (Sandboxing.isOpen(sandbox)) {\n              detail.fireEventInstead.fold(() => detail.doReposition(sandbox), fe => emit(sandbox, fe.event));\n            }\n          }\n        }\n      };\n    };\n\n    const onLoad$5 = (component, repConfig, repState) => {\n      repConfig.store.manager.onLoad(component, repConfig, repState);\n    };\n    const onUnload$2 = (component, repConfig, repState) => {\n      repConfig.store.manager.onUnload(component, repConfig, repState);\n    };\n    const setValue$3 = (component, repConfig, repState, data) => {\n      repConfig.store.manager.setValue(component, repConfig, repState, data);\n    };\n    const getValue$3 = (component, repConfig, repState) => repConfig.store.manager.getValue(component, repConfig, repState);\n    const getState$1 = (component, repConfig, repState) => repState;\n\n    var RepresentApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        onLoad: onLoad$5,\n        onUnload: onUnload$2,\n        setValue: setValue$3,\n        getValue: getValue$3,\n        getState: getState$1\n    });\n\n    const events$f = (repConfig, repState) => {\n      const es = repConfig.resetOnDom ? [\n        runOnAttached((comp, _se) => {\n          onLoad$5(comp, repConfig, repState);\n        }),\n        runOnDetached((comp, _se) => {\n          onUnload$2(comp, repConfig, repState);\n        })\n      ] : [loadEvent(repConfig, repState, onLoad$5)];\n      return derive$2(es);\n    };\n\n    var ActiveRepresenting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$f\n    });\n\n    const memory$1 = () => {\n      const data = Cell(null);\n      const readState = () => ({\n        mode: 'memory',\n        value: data.get()\n      });\n      const isNotSet = () => data.get() === null;\n      const clear = () => {\n        data.set(null);\n      };\n      return nu$8({\n        set: data.set,\n        get: data.get,\n        isNotSet,\n        clear,\n        readState\n      });\n    };\n    const manual = () => {\n      const readState = noop;\n      return nu$8({ readState });\n    };\n    const dataset = () => {\n      const dataByValue = Cell({});\n      const dataByText = Cell({});\n      const readState = () => ({\n        mode: 'dataset',\n        dataByValue: dataByValue.get(),\n        dataByText: dataByText.get()\n      });\n      const clear = () => {\n        dataByValue.set({});\n        dataByText.set({});\n      };\n      const lookup = itemString => get$g(dataByValue.get(), itemString).orThunk(() => get$g(dataByText.get(), itemString));\n      const update = items => {\n        const currentDataByValue = dataByValue.get();\n        const currentDataByText = dataByText.get();\n        const newDataByValue = {};\n        const newDataByText = {};\n        each$1(items, item => {\n          newDataByValue[item.value] = item;\n          get$g(item, 'meta').each(meta => {\n            get$g(meta, 'text').each(text => {\n              newDataByText[text] = item;\n            });\n          });\n        });\n        dataByValue.set({\n          ...currentDataByValue,\n          ...newDataByValue\n        });\n        dataByText.set({\n          ...currentDataByText,\n          ...newDataByText\n        });\n      };\n      return nu$8({\n        readState,\n        lookup,\n        update,\n        clear\n      });\n    };\n    const init$e = spec => spec.store.manager.state(spec);\n\n    var RepresentState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        memory: memory$1,\n        dataset: dataset,\n        manual: manual,\n        init: init$e\n    });\n\n    const setValue$2 = (component, repConfig, repState, data) => {\n      const store = repConfig.store;\n      repState.update([data]);\n      store.setValue(component, data);\n      repConfig.onSetValue(component, data);\n    };\n    const getValue$2 = (component, repConfig, repState) => {\n      const store = repConfig.store;\n      const key = store.getDataKey(component);\n      return repState.lookup(key).getOrThunk(() => store.getFallbackEntry(key));\n    };\n    const onLoad$4 = (component, repConfig, repState) => {\n      const store = repConfig.store;\n      store.initialValue.each(data => {\n        setValue$2(component, repConfig, repState, data);\n      });\n    };\n    const onUnload$1 = (component, repConfig, repState) => {\n      repState.clear();\n    };\n    var DatasetStore = [\n      option$3('initialValue'),\n      required$1('getFallbackEntry'),\n      required$1('getDataKey'),\n      required$1('setValue'),\n      output$1('manager', {\n        setValue: setValue$2,\n        getValue: getValue$2,\n        onLoad: onLoad$4,\n        onUnload: onUnload$1,\n        state: dataset\n      })\n    ];\n\n    const getValue$1 = (component, repConfig, _repState) => repConfig.store.getValue(component);\n    const setValue$1 = (component, repConfig, _repState, data) => {\n      repConfig.store.setValue(component, data);\n      repConfig.onSetValue(component, data);\n    };\n    const onLoad$3 = (component, repConfig, _repState) => {\n      repConfig.store.initialValue.each(data => {\n        repConfig.store.setValue(component, data);\n      });\n    };\n    var ManualStore = [\n      required$1('getValue'),\n      defaulted('setValue', noop),\n      option$3('initialValue'),\n      output$1('manager', {\n        setValue: setValue$1,\n        getValue: getValue$1,\n        onLoad: onLoad$3,\n        onUnload: noop,\n        state: NoState.init\n      })\n    ];\n\n    const setValue = (component, repConfig, repState, data) => {\n      repState.set(data);\n      repConfig.onSetValue(component, data);\n    };\n    const getValue = (component, repConfig, repState) => repState.get();\n    const onLoad$2 = (component, repConfig, repState) => {\n      repConfig.store.initialValue.each(initVal => {\n        if (repState.isNotSet()) {\n          repState.set(initVal);\n        }\n      });\n    };\n    const onUnload = (component, repConfig, repState) => {\n      repState.clear();\n    };\n    var MemoryStore = [\n      option$3('initialValue'),\n      output$1('manager', {\n        setValue,\n        getValue,\n        onLoad: onLoad$2,\n        onUnload,\n        state: memory$1\n      })\n    ];\n\n    var RepresentSchema = [\n      defaultedOf('store', { mode: 'memory' }, choose$1('mode', {\n        memory: MemoryStore,\n        manual: ManualStore,\n        dataset: DatasetStore\n      })),\n      onHandler('onSetValue'),\n      defaulted('resetOnDom', false)\n    ];\n\n    const Representing = create$3({\n      fields: RepresentSchema,\n      name: 'representing',\n      active: ActiveRepresenting,\n      apis: RepresentApis,\n      extra: {\n        setValueFrom: (component, source) => {\n          const value = Representing.getValue(source);\n          Representing.setValue(component, value);\n        }\n      },\n      state: RepresentState\n    });\n\n    const field = (name, forbidden) => defaultedObjOf(name, {}, map$2(forbidden, f => forbid(f.name(), 'Cannot configure ' + f.name() + ' for ' + name)).concat([customField('dump', identity)]));\n    const get$3 = data => data.dump;\n    const augment = (data, original) => ({\n      ...derive$1(original),\n      ...data.dump\n    });\n    const SketchBehaviours = {\n      field,\n      augment,\n      get: get$3\n    };\n\n    const _placeholder = 'placeholder';\n    const adt$3 = Adt.generate([\n      {\n        single: [\n          'required',\n          'valueThunk'\n        ]\n      },\n      {\n        multiple: [\n          'required',\n          'valueThunks'\n        ]\n      }\n    ]);\n    const isSubstituted = spec => has$2(spec, 'uiType');\n    const subPlaceholder = (owner, detail, compSpec, placeholders) => {\n      if (owner.exists(o => o !== compSpec.owner)) {\n        return adt$3.single(true, constant$1(compSpec));\n      }\n      return get$g(placeholders, compSpec.name).fold(() => {\n        throw new Error('Unknown placeholder component: ' + compSpec.name + '\\nKnown: [' + keys(placeholders) + ']\\nNamespace: ' + owner.getOr('none') + '\\nSpec: ' + JSON.stringify(compSpec, null, 2));\n      }, newSpec => newSpec.replace());\n    };\n    const scan = (owner, detail, compSpec, placeholders) => {\n      if (isSubstituted(compSpec) && compSpec.uiType === _placeholder) {\n        return subPlaceholder(owner, detail, compSpec, placeholders);\n      } else {\n        return adt$3.single(false, constant$1(compSpec));\n      }\n    };\n    const substitute = (owner, detail, compSpec, placeholders) => {\n      const base = scan(owner, detail, compSpec, placeholders);\n      return base.fold((req, valueThunk) => {\n        const value = isSubstituted(compSpec) ? valueThunk(detail, compSpec.config, compSpec.validated) : valueThunk(detail);\n        const childSpecs = get$g(value, 'components').getOr([]);\n        const substituted = bind$3(childSpecs, c => substitute(owner, detail, c, placeholders));\n        return [{\n            ...value,\n            components: substituted\n          }];\n      }, (req, valuesThunk) => {\n        if (isSubstituted(compSpec)) {\n          const values = valuesThunk(detail, compSpec.config, compSpec.validated);\n          const preprocessor = compSpec.validated.preprocess.getOr(identity);\n          return preprocessor(values);\n        } else {\n          return valuesThunk(detail);\n        }\n      });\n    };\n    const substituteAll = (owner, detail, components, placeholders) => bind$3(components, c => substitute(owner, detail, c, placeholders));\n    const oneReplace = (label, replacements) => {\n      let called = false;\n      const used = () => called;\n      const replace = () => {\n        if (called) {\n          throw new Error('Trying to use the same placeholder more than once: ' + label);\n        }\n        called = true;\n        return replacements;\n      };\n      const required = () => replacements.fold((req, _) => req, (req, _) => req);\n      return {\n        name: constant$1(label),\n        required,\n        used,\n        replace\n      };\n    };\n    const substitutePlaces = (owner, detail, components, placeholders) => {\n      const ps = map$1(placeholders, (ph, name) => oneReplace(name, ph));\n      const outcome = substituteAll(owner, detail, components, ps);\n      each(ps, p => {\n        if (p.used() === false && p.required()) {\n          throw new Error('Placeholder: ' + p.name() + ' was not found in components list\\nNamespace: ' + owner.getOr('none') + '\\nComponents: ' + JSON.stringify(detail.components, null, 2));\n        }\n      });\n      return outcome;\n    };\n    const single$2 = adt$3.single;\n    const multiple = adt$3.multiple;\n    const placeholder = constant$1(_placeholder);\n\n    const adt$2 = Adt.generate([\n      { required: ['data'] },\n      { external: ['data'] },\n      { optional: ['data'] },\n      { group: ['data'] }\n    ]);\n    const fFactory = defaulted('factory', { sketch: identity });\n    const fSchema = defaulted('schema', []);\n    const fName = required$1('name');\n    const fPname = field$1('pname', 'pname', defaultedThunk(typeSpec => '<alloy.' + generate$6(typeSpec.name) + '>'), anyValue());\n    const fGroupSchema = customField('schema', () => [option$3('preprocess')]);\n    const fDefaults = defaulted('defaults', constant$1({}));\n    const fOverrides = defaulted('overrides', constant$1({}));\n    const requiredSpec = objOf([\n      fFactory,\n      fSchema,\n      fName,\n      fPname,\n      fDefaults,\n      fOverrides\n    ]);\n    const externalSpec = objOf([\n      fFactory,\n      fSchema,\n      fName,\n      fDefaults,\n      fOverrides\n    ]);\n    const optionalSpec = objOf([\n      fFactory,\n      fSchema,\n      fName,\n      fPname,\n      fDefaults,\n      fOverrides\n    ]);\n    const groupSpec = objOf([\n      fFactory,\n      fGroupSchema,\n      fName,\n      required$1('unit'),\n      fPname,\n      fDefaults,\n      fOverrides\n    ]);\n    const asNamedPart = part => {\n      return part.fold(Optional.some, Optional.none, Optional.some, Optional.some);\n    };\n    const name$2 = part => {\n      const get = data => data.name;\n      return part.fold(get, get, get, get);\n    };\n    const asCommon = part => {\n      return part.fold(identity, identity, identity, identity);\n    };\n    const convert = (adtConstructor, partSchema) => spec => {\n      const data = asRawOrDie$1('Converting part type', partSchema, spec);\n      return adtConstructor(data);\n    };\n    const required = convert(adt$2.required, requiredSpec);\n    const external = convert(adt$2.external, externalSpec);\n    const optional = convert(adt$2.optional, optionalSpec);\n    const group = convert(adt$2.group, groupSpec);\n    const original = constant$1('entirety');\n\n    var PartType = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        required: required,\n        external: external,\n        optional: optional,\n        group: group,\n        asNamedPart: asNamedPart,\n        name: name$2,\n        asCommon: asCommon,\n        original: original\n    });\n\n    const combine = (detail, data, partSpec, partValidated) => deepMerge(data.defaults(detail, partSpec, partValidated), partSpec, { uid: detail.partUids[data.name] }, data.overrides(detail, partSpec, partValidated));\n    const subs = (owner, detail, parts) => {\n      const internals = {};\n      const externals = {};\n      each$1(parts, part => {\n        part.fold(data => {\n          internals[data.pname] = single$2(true, (detail, partSpec, partValidated) => data.factory.sketch(combine(detail, data, partSpec, partValidated)));\n        }, data => {\n          const partSpec = detail.parts[data.name];\n          externals[data.name] = constant$1(data.factory.sketch(combine(detail, data, partSpec[original()]), partSpec));\n        }, data => {\n          internals[data.pname] = single$2(false, (detail, partSpec, partValidated) => data.factory.sketch(combine(detail, data, partSpec, partValidated)));\n        }, data => {\n          internals[data.pname] = multiple(true, (detail, _partSpec, _partValidated) => {\n            const units = detail[data.name];\n            return map$2(units, u => data.factory.sketch(deepMerge(data.defaults(detail, u, _partValidated), u, data.overrides(detail, u))));\n          });\n        });\n      });\n      return {\n        internals: constant$1(internals),\n        externals: constant$1(externals)\n      };\n    };\n\n    const generate$3 = (owner, parts) => {\n      const r = {};\n      each$1(parts, part => {\n        asNamedPart(part).each(np => {\n          const g = doGenerateOne(owner, np.pname);\n          r[np.name] = config => {\n            const validated = asRawOrDie$1('Part: ' + np.name + ' in ' + owner, objOf(np.schema), config);\n            return {\n              ...g,\n              config,\n              validated\n            };\n          };\n        });\n      });\n      return r;\n    };\n    const doGenerateOne = (owner, pname) => ({\n      uiType: placeholder(),\n      owner,\n      name: pname\n    });\n    const generateOne$1 = (owner, pname, config) => ({\n      uiType: placeholder(),\n      owner,\n      name: pname,\n      config,\n      validated: {}\n    });\n    const schemas = parts => bind$3(parts, part => part.fold(Optional.none, Optional.some, Optional.none, Optional.none).map(data => requiredObjOf(data.name, data.schema.concat([snapshot(original())]))).toArray());\n    const names = parts => map$2(parts, name$2);\n    const substitutes = (owner, detail, parts) => subs(owner, detail, parts);\n    const components$1 = (owner, detail, internals) => substitutePlaces(Optional.some(owner), detail, detail.components, internals);\n    const getPart = (component, detail, partKey) => {\n      const uid = detail.partUids[partKey];\n      return component.getSystem().getByUid(uid).toOptional();\n    };\n    const getPartOrDie = (component, detail, partKey) => getPart(component, detail, partKey).getOrDie('Could not find part: ' + partKey);\n    const getParts = (component, detail, partKeys) => {\n      const r = {};\n      const uids = detail.partUids;\n      const system = component.getSystem();\n      each$1(partKeys, pk => {\n        r[pk] = constant$1(system.getByUid(uids[pk]));\n      });\n      return r;\n    };\n    const getAllParts = (component, detail) => {\n      const system = component.getSystem();\n      return map$1(detail.partUids, (pUid, _k) => constant$1(system.getByUid(pUid)));\n    };\n    const getAllPartNames = detail => keys(detail.partUids);\n    const getPartsOrDie = (component, detail, partKeys) => {\n      const r = {};\n      const uids = detail.partUids;\n      const system = component.getSystem();\n      each$1(partKeys, pk => {\n        r[pk] = constant$1(system.getByUid(uids[pk]).getOrDie());\n      });\n      return r;\n    };\n    const defaultUids = (baseUid, partTypes) => {\n      const partNames = names(partTypes);\n      return wrapAll(map$2(partNames, pn => ({\n        key: pn,\n        value: baseUid + '-' + pn\n      })));\n    };\n    const defaultUidsSchema = partTypes => field$1('partUids', 'partUids', mergeWithThunk(spec => defaultUids(spec.uid, partTypes)), anyValue());\n\n    var AlloyParts = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        generate: generate$3,\n        generateOne: generateOne$1,\n        schemas: schemas,\n        names: names,\n        substitutes: substitutes,\n        components: components$1,\n        defaultUids: defaultUids,\n        defaultUidsSchema: defaultUidsSchema,\n        getAllParts: getAllParts,\n        getAllPartNames: getAllPartNames,\n        getPart: getPart,\n        getPartOrDie: getPartOrDie,\n        getParts: getParts,\n        getPartsOrDie: getPartsOrDie\n    });\n\n    const base = (partSchemas, partUidsSchemas) => {\n      const ps = partSchemas.length > 0 ? [requiredObjOf('parts', partSchemas)] : [];\n      return ps.concat([\n        required$1('uid'),\n        defaulted('dom', {}),\n        defaulted('components', []),\n        snapshot('originalSpec'),\n        defaulted('debug.sketcher', {})\n      ]).concat(partUidsSchemas);\n    };\n    const asRawOrDie = (label, schema, spec, partSchemas, partUidsSchemas) => {\n      const baseS = base(partSchemas, partUidsSchemas);\n      return asRawOrDie$1(label + ' [SpecSchema]', objOfOnly(baseS.concat(schema)), spec);\n    };\n\n    const single$1 = (owner, schema, factory, spec) => {\n      const specWithUid = supplyUid(spec);\n      const detail = asRawOrDie(owner, schema, specWithUid, [], []);\n      return factory(detail, specWithUid);\n    };\n    const composite$1 = (owner, schema, partTypes, factory, spec) => {\n      const specWithUid = supplyUid(spec);\n      const partSchemas = schemas(partTypes);\n      const partUidsSchema = defaultUidsSchema(partTypes);\n      const detail = asRawOrDie(owner, schema, specWithUid, partSchemas, [partUidsSchema]);\n      const subs = substitutes(owner, detail, partTypes);\n      const components = components$1(owner, detail, subs.internals());\n      return factory(detail, components, specWithUid, subs.externals());\n    };\n    const hasUid = spec => has$2(spec, 'uid');\n    const supplyUid = spec => {\n      return hasUid(spec) ? spec : {\n        ...spec,\n        uid: generate$5('uid')\n      };\n    };\n\n    const isSketchSpec = spec => {\n      return spec.uid !== undefined;\n    };\n    const singleSchema = objOfOnly([\n      required$1('name'),\n      required$1('factory'),\n      required$1('configFields'),\n      defaulted('apis', {}),\n      defaulted('extraApis', {})\n    ]);\n    const compositeSchema = objOfOnly([\n      required$1('name'),\n      required$1('factory'),\n      required$1('configFields'),\n      required$1('partFields'),\n      defaulted('apis', {}),\n      defaulted('extraApis', {})\n    ]);\n    const single = rawConfig => {\n      const config = asRawOrDie$1('Sketcher for ' + rawConfig.name, singleSchema, rawConfig);\n      const sketch = spec => single$1(config.name, config.configFields, config.factory, spec);\n      const apis = map$1(config.apis, makeApi);\n      const extraApis = map$1(config.extraApis, (f, k) => markAsExtraApi(f, k));\n      return {\n        name: config.name,\n        configFields: config.configFields,\n        sketch,\n        ...apis,\n        ...extraApis\n      };\n    };\n    const composite = rawConfig => {\n      const config = asRawOrDie$1('Sketcher for ' + rawConfig.name, compositeSchema, rawConfig);\n      const sketch = spec => composite$1(config.name, config.configFields, config.partFields, config.factory, spec);\n      const parts = generate$3(config.name, config.partFields);\n      const apis = map$1(config.apis, makeApi);\n      const extraApis = map$1(config.extraApis, (f, k) => markAsExtraApi(f, k));\n      return {\n        name: config.name,\n        partFields: config.partFields,\n        configFields: config.configFields,\n        sketch,\n        parts,\n        ...apis,\n        ...extraApis\n      };\n    };\n\n    const inside = target => isTag('input')(target) && get$f(target, 'type') !== 'radio' || isTag('textarea')(target);\n\n    const getCurrent = (component, composeConfig, _composeState) => composeConfig.find(component);\n\n    var ComposeApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getCurrent: getCurrent\n    });\n\n    const ComposeSchema = [required$1('find')];\n\n    const Composing = create$3({\n      fields: ComposeSchema,\n      name: 'composing',\n      apis: ComposeApis\n    });\n\n    const nativeDisabled = [\n      'input',\n      'button',\n      'textarea',\n      'select'\n    ];\n    const onLoad$1 = (component, disableConfig, disableState) => {\n      const f = disableConfig.disabled() ? disable : enable;\n      f(component, disableConfig);\n    };\n    const hasNative = (component, config) => config.useNative === true && contains$2(nativeDisabled, name$3(component.element));\n    const nativeIsDisabled = component => has$1(component.element, 'disabled');\n    const nativeDisable = component => {\n      set$9(component.element, 'disabled', 'disabled');\n    };\n    const nativeEnable = component => {\n      remove$7(component.element, 'disabled');\n    };\n    const ariaIsDisabled = component => get$f(component.element, 'aria-disabled') === 'true';\n    const ariaDisable = component => {\n      set$9(component.element, 'aria-disabled', 'true');\n    };\n    const ariaEnable = component => {\n      set$9(component.element, 'aria-disabled', 'false');\n    };\n    const disable = (component, disableConfig, _disableState) => {\n      disableConfig.disableClass.each(disableClass => {\n        add$2(component.element, disableClass);\n      });\n      const f = hasNative(component, disableConfig) ? nativeDisable : ariaDisable;\n      f(component);\n      disableConfig.onDisabled(component);\n    };\n    const enable = (component, disableConfig, _disableState) => {\n      disableConfig.disableClass.each(disableClass => {\n        remove$2(component.element, disableClass);\n      });\n      const f = hasNative(component, disableConfig) ? nativeEnable : ariaEnable;\n      f(component);\n      disableConfig.onEnabled(component);\n    };\n    const isDisabled = (component, disableConfig) => hasNative(component, disableConfig) ? nativeIsDisabled(component) : ariaIsDisabled(component);\n    const set$4 = (component, disableConfig, disableState, disabled) => {\n      const f = disabled ? disable : enable;\n      f(component, disableConfig);\n    };\n\n    var DisableApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        enable: enable,\n        disable: disable,\n        isDisabled: isDisabled,\n        onLoad: onLoad$1,\n        set: set$4\n    });\n\n    const exhibit$5 = (base, disableConfig) => nu$7({ classes: disableConfig.disabled() ? disableConfig.disableClass.toArray() : [] });\n    const events$e = (disableConfig, disableState) => derive$2([\n      abort(execute$5(), (component, _simulatedEvent) => isDisabled(component, disableConfig)),\n      loadEvent(disableConfig, disableState, onLoad$1)\n    ]);\n\n    var ActiveDisable = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$5,\n        events: events$e\n    });\n\n    var DisableSchema = [\n      defaultedFunction('disabled', never),\n      defaulted('useNative', true),\n      option$3('disableClass'),\n      onHandler('onDisabled'),\n      onHandler('onEnabled')\n    ];\n\n    const Disabling = create$3({\n      fields: DisableSchema,\n      name: 'disabling',\n      active: ActiveDisable,\n      apis: DisableApis\n    });\n\n    const dehighlightAllExcept = (component, hConfig, hState, skip) => {\n      const highlighted = descendants(component.element, '.' + hConfig.highlightClass);\n      each$1(highlighted, h => {\n        const shouldSkip = exists(skip, skipComp => eq(skipComp.element, h));\n        if (!shouldSkip) {\n          remove$2(h, hConfig.highlightClass);\n          component.getSystem().getByDom(h).each(target => {\n            hConfig.onDehighlight(component, target);\n            emit(target, dehighlight$1());\n          });\n        }\n      });\n    };\n    const dehighlightAll = (component, hConfig, hState) => dehighlightAllExcept(component, hConfig, hState, []);\n    const dehighlight = (component, hConfig, hState, target) => {\n      if (isHighlighted(component, hConfig, hState, target)) {\n        remove$2(target.element, hConfig.highlightClass);\n        hConfig.onDehighlight(component, target);\n        emit(target, dehighlight$1());\n      }\n    };\n    const highlight = (component, hConfig, hState, target) => {\n      dehighlightAllExcept(component, hConfig, hState, [target]);\n      if (!isHighlighted(component, hConfig, hState, target)) {\n        add$2(target.element, hConfig.highlightClass);\n        hConfig.onHighlight(component, target);\n        emit(target, highlight$1());\n      }\n    };\n    const highlightFirst = (component, hConfig, hState) => {\n      getFirst(component, hConfig).each(firstComp => {\n        highlight(component, hConfig, hState, firstComp);\n      });\n    };\n    const highlightLast = (component, hConfig, hState) => {\n      getLast(component, hConfig).each(lastComp => {\n        highlight(component, hConfig, hState, lastComp);\n      });\n    };\n    const highlightAt = (component, hConfig, hState, index) => {\n      getByIndex(component, hConfig, hState, index).fold(err => {\n        throw err;\n      }, firstComp => {\n        highlight(component, hConfig, hState, firstComp);\n      });\n    };\n    const highlightBy = (component, hConfig, hState, predicate) => {\n      const candidates = getCandidates(component, hConfig);\n      const targetComp = find$5(candidates, predicate);\n      targetComp.each(c => {\n        highlight(component, hConfig, hState, c);\n      });\n    };\n    const isHighlighted = (component, hConfig, hState, queryTarget) => has(queryTarget.element, hConfig.highlightClass);\n    const getHighlighted = (component, hConfig, _hState) => descendant(component.element, '.' + hConfig.highlightClass).bind(e => component.getSystem().getByDom(e).toOptional());\n    const getByIndex = (component, hConfig, hState, index) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      return Optional.from(items[index]).fold(() => Result.error(new Error('No element found with index ' + index)), component.getSystem().getByDom);\n    };\n    const getFirst = (component, hConfig, _hState) => descendant(component.element, '.' + hConfig.itemClass).bind(e => component.getSystem().getByDom(e).toOptional());\n    const getLast = (component, hConfig, _hState) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      const last = items.length > 0 ? Optional.some(items[items.length - 1]) : Optional.none();\n      return last.bind(c => component.getSystem().getByDom(c).toOptional());\n    };\n    const getDelta$2 = (component, hConfig, hState, delta) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      const current = findIndex$1(items, item => has(item, hConfig.highlightClass));\n      return current.bind(selected => {\n        const dest = cycleBy(selected, delta, 0, items.length - 1);\n        return component.getSystem().getByDom(items[dest]).toOptional();\n      });\n    };\n    const getPrevious = (component, hConfig, hState) => getDelta$2(component, hConfig, hState, -1);\n    const getNext = (component, hConfig, hState) => getDelta$2(component, hConfig, hState, +1);\n    const getCandidates = (component, hConfig, _hState) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      return cat(map$2(items, i => component.getSystem().getByDom(i).toOptional()));\n    };\n\n    var HighlightApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        dehighlightAll: dehighlightAll,\n        dehighlight: dehighlight,\n        highlight: highlight,\n        highlightFirst: highlightFirst,\n        highlightLast: highlightLast,\n        highlightAt: highlightAt,\n        highlightBy: highlightBy,\n        isHighlighted: isHighlighted,\n        getHighlighted: getHighlighted,\n        getFirst: getFirst,\n        getLast: getLast,\n        getPrevious: getPrevious,\n        getNext: getNext,\n        getCandidates: getCandidates\n    });\n\n    var HighlightSchema = [\n      required$1('highlightClass'),\n      required$1('itemClass'),\n      onHandler('onHighlight'),\n      onHandler('onDehighlight')\n    ];\n\n    const Highlighting = create$3({\n      fields: HighlightSchema,\n      name: 'highlighting',\n      apis: HighlightApis\n    });\n\n    const BACKSPACE = [8];\n    const TAB = [9];\n    const ENTER = [13];\n    const ESCAPE = [27];\n    const SPACE = [32];\n    const LEFT = [37];\n    const UP = [38];\n    const RIGHT = [39];\n    const DOWN = [40];\n\n    const cyclePrev = (values, index, predicate) => {\n      const before = reverse(values.slice(0, index));\n      const after = reverse(values.slice(index + 1));\n      return find$5(before.concat(after), predicate);\n    };\n    const tryPrev = (values, index, predicate) => {\n      const before = reverse(values.slice(0, index));\n      return find$5(before, predicate);\n    };\n    const cycleNext = (values, index, predicate) => {\n      const before = values.slice(0, index);\n      const after = values.slice(index + 1);\n      return find$5(after.concat(before), predicate);\n    };\n    const tryNext = (values, index, predicate) => {\n      const after = values.slice(index + 1);\n      return find$5(after, predicate);\n    };\n\n    const inSet = keys => event => {\n      const raw = event.raw;\n      return contains$2(keys, raw.which);\n    };\n    const and = preds => event => forall(preds, pred => pred(event));\n    const isShift = event => {\n      const raw = event.raw;\n      return raw.shiftKey === true;\n    };\n    const isControl = event => {\n      const raw = event.raw;\n      return raw.ctrlKey === true;\n    };\n    const isNotShift = not(isShift);\n\n    const rule = (matches, action) => ({\n      matches,\n      classification: action\n    });\n    const choose = (transitions, event) => {\n      const transition = find$5(transitions, t => t.matches(event));\n      return transition.map(t => t.classification);\n    };\n\n    const reportFocusShifting = (component, prevFocus, newFocus) => {\n      const noChange = prevFocus.exists(p => newFocus.exists(n => eq(n, p)));\n      if (!noChange) {\n        emitWith(component, focusShifted(), {\n          prevFocus,\n          newFocus\n        });\n      }\n    };\n    const dom$2 = () => {\n      const get = component => search(component.element);\n      const set = (component, focusee) => {\n        const prevFocus = get(component);\n        component.getSystem().triggerFocus(focusee, component.element);\n        const newFocus = get(component);\n        reportFocusShifting(component, prevFocus, newFocus);\n      };\n      return {\n        get,\n        set\n      };\n    };\n    const highlights = () => {\n      const get = component => Highlighting.getHighlighted(component).map(item => item.element);\n      const set = (component, element) => {\n        const prevFocus = get(component);\n        component.getSystem().getByDom(element).fold(noop, item => {\n          Highlighting.highlight(component, item);\n        });\n        const newFocus = get(component);\n        reportFocusShifting(component, prevFocus, newFocus);\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var FocusInsideModes;\n    (function (FocusInsideModes) {\n      FocusInsideModes['OnFocusMode'] = 'onFocus';\n      FocusInsideModes['OnEnterOrSpaceMode'] = 'onEnterOrSpace';\n      FocusInsideModes['OnApiMode'] = 'onApi';\n    }(FocusInsideModes || (FocusInsideModes = {})));\n\n    const typical = (infoSchema, stateInit, getKeydownRules, getKeyupRules, optFocusIn) => {\n      const schema = () => infoSchema.concat([\n        defaulted('focusManager', dom$2()),\n        defaultedOf('focusInside', 'onFocus', valueOf(val => contains$2([\n          'onFocus',\n          'onEnterOrSpace',\n          'onApi'\n        ], val) ? Result.value(val) : Result.error('Invalid value for focusInside'))),\n        output$1('handler', me),\n        output$1('state', stateInit),\n        output$1('sendFocusIn', optFocusIn)\n      ]);\n      const processKey = (component, simulatedEvent, getRules, keyingConfig, keyingState) => {\n        const rules = getRules(component, simulatedEvent, keyingConfig, keyingState);\n        return choose(rules, simulatedEvent.event).bind(rule => rule(component, simulatedEvent, keyingConfig, keyingState));\n      };\n      const toEvents = (keyingConfig, keyingState) => {\n        const onFocusHandler = keyingConfig.focusInside !== FocusInsideModes.OnFocusMode ? Optional.none() : optFocusIn(keyingConfig).map(focusIn => run$1(focus$4(), (component, simulatedEvent) => {\n          focusIn(component, keyingConfig, keyingState);\n          simulatedEvent.stop();\n        }));\n        const tryGoInsideComponent = (component, simulatedEvent) => {\n          const isEnterOrSpace = inSet(SPACE.concat(ENTER))(simulatedEvent.event);\n          if (keyingConfig.focusInside === FocusInsideModes.OnEnterOrSpaceMode && isEnterOrSpace && isSource(component, simulatedEvent)) {\n            optFocusIn(keyingConfig).each(focusIn => {\n              focusIn(component, keyingConfig, keyingState);\n              simulatedEvent.stop();\n            });\n          }\n        };\n        const keyboardEvents = [\n          run$1(keydown(), (component, simulatedEvent) => {\n            processKey(component, simulatedEvent, getKeydownRules, keyingConfig, keyingState).fold(() => {\n              tryGoInsideComponent(component, simulatedEvent);\n            }, _ => {\n              simulatedEvent.stop();\n            });\n          }),\n          run$1(keyup(), (component, simulatedEvent) => {\n            processKey(component, simulatedEvent, getKeyupRules, keyingConfig, keyingState).each(_ => {\n              simulatedEvent.stop();\n            });\n          })\n        ];\n        return derive$2(onFocusHandler.toArray().concat(keyboardEvents));\n      };\n      const me = {\n        schema,\n        processKey,\n        toEvents\n      };\n      return me;\n    };\n\n    const create$1 = cyclicField => {\n      const schema = [\n        option$3('onEscape'),\n        option$3('onEnter'),\n        defaulted('selector', '[data-alloy-tabstop=\"true\"]:not(:disabled)'),\n        defaulted('firstTabstop', 0),\n        defaulted('useTabstopAt', always),\n        option$3('visibilitySelector')\n      ].concat([cyclicField]);\n      const isVisible = (tabbingConfig, element) => {\n        const target = tabbingConfig.visibilitySelector.bind(sel => closest$1(element, sel)).getOr(element);\n        return get$d(target) > 0;\n      };\n      const findInitial = (component, tabbingConfig) => {\n        const tabstops = descendants(component.element, tabbingConfig.selector);\n        const visibles = filter$2(tabstops, elem => isVisible(tabbingConfig, elem));\n        return Optional.from(visibles[tabbingConfig.firstTabstop]);\n      };\n      const findCurrent = (component, tabbingConfig) => tabbingConfig.focusManager.get(component).bind(elem => closest$1(elem, tabbingConfig.selector));\n      const isTabstop = (tabbingConfig, element) => isVisible(tabbingConfig, element) && tabbingConfig.useTabstopAt(element);\n      const focusIn = (component, tabbingConfig, _tabbingState) => {\n        findInitial(component, tabbingConfig).each(target => {\n          tabbingConfig.focusManager.set(component, target);\n        });\n      };\n      const goFromTabstop = (component, tabstops, stopIndex, tabbingConfig, cycle) => cycle(tabstops, stopIndex, elem => isTabstop(tabbingConfig, elem)).fold(() => tabbingConfig.cyclic ? Optional.some(true) : Optional.none(), target => {\n        tabbingConfig.focusManager.set(component, target);\n        return Optional.some(true);\n      });\n      const go = (component, _simulatedEvent, tabbingConfig, cycle) => {\n        const tabstops = descendants(component.element, tabbingConfig.selector);\n        return findCurrent(component, tabbingConfig).bind(tabstop => {\n          const optStopIndex = findIndex$1(tabstops, curry(eq, tabstop));\n          return optStopIndex.bind(stopIndex => goFromTabstop(component, tabstops, stopIndex, tabbingConfig, cycle));\n        });\n      };\n      const goBackwards = (component, simulatedEvent, tabbingConfig) => {\n        const navigate = tabbingConfig.cyclic ? cyclePrev : tryPrev;\n        return go(component, simulatedEvent, tabbingConfig, navigate);\n      };\n      const goForwards = (component, simulatedEvent, tabbingConfig) => {\n        const navigate = tabbingConfig.cyclic ? cycleNext : tryNext;\n        return go(component, simulatedEvent, tabbingConfig, navigate);\n      };\n      const execute = (component, simulatedEvent, tabbingConfig) => tabbingConfig.onEnter.bind(f => f(component, simulatedEvent));\n      const exit = (component, simulatedEvent, tabbingConfig) => tabbingConfig.onEscape.bind(f => f(component, simulatedEvent));\n      const getKeydownRules = constant$1([\n        rule(and([\n          isShift,\n          inSet(TAB)\n        ]), goBackwards),\n        rule(inSet(TAB), goForwards),\n        rule(and([\n          isNotShift,\n          inSet(ENTER)\n        ]), execute)\n      ]);\n      const getKeyupRules = constant$1([rule(inSet(ESCAPE), exit)]);\n      return typical(schema, NoState.init, getKeydownRules, getKeyupRules, () => Optional.some(focusIn));\n    };\n\n    var AcyclicType = create$1(customField('cyclic', never));\n\n    var CyclicType = create$1(customField('cyclic', always));\n\n    const doDefaultExecute = (component, _simulatedEvent, focused) => {\n      dispatch(component, focused, execute$5());\n      return Optional.some(true);\n    };\n    const defaultExecute = (component, simulatedEvent, focused) => {\n      const isComplex = inside(focused) && inSet(SPACE)(simulatedEvent.event);\n      return isComplex ? Optional.none() : doDefaultExecute(component, simulatedEvent, focused);\n    };\n    const stopEventForFirefox = (_component, _simulatedEvent) => Optional.some(true);\n\n    const schema$v = [\n      defaulted('execute', defaultExecute),\n      defaulted('useSpace', false),\n      defaulted('useEnter', true),\n      defaulted('useControlEnter', false),\n      defaulted('useDown', false)\n    ];\n    const execute$4 = (component, simulatedEvent, executeConfig) => executeConfig.execute(component, simulatedEvent, component.element);\n    const getKeydownRules$5 = (component, _simulatedEvent, executeConfig, _executeState) => {\n      const spaceExec = executeConfig.useSpace && !inside(component.element) ? SPACE : [];\n      const enterExec = executeConfig.useEnter ? ENTER : [];\n      const downExec = executeConfig.useDown ? DOWN : [];\n      const execKeys = spaceExec.concat(enterExec).concat(downExec);\n      return [rule(inSet(execKeys), execute$4)].concat(executeConfig.useControlEnter ? [rule(and([\n          isControl,\n          inSet(ENTER)\n        ]), execute$4)] : []);\n    };\n    const getKeyupRules$5 = (component, _simulatedEvent, executeConfig, _executeState) => executeConfig.useSpace && !inside(component.element) ? [rule(inSet(SPACE), stopEventForFirefox)] : [];\n    var ExecutionType = typical(schema$v, NoState.init, getKeydownRules$5, getKeyupRules$5, () => Optional.none());\n\n    const flatgrid$1 = () => {\n      const dimensions = value$2();\n      const setGridSize = (numRows, numColumns) => {\n        dimensions.set({\n          numRows,\n          numColumns\n        });\n      };\n      const getNumRows = () => dimensions.get().map(d => d.numRows);\n      const getNumColumns = () => dimensions.get().map(d => d.numColumns);\n      return nu$8({\n        readState: () => dimensions.get().map(d => ({\n          numRows: String(d.numRows),\n          numColumns: String(d.numColumns)\n        })).getOr({\n          numRows: '?',\n          numColumns: '?'\n        }),\n        setGridSize,\n        getNumRows,\n        getNumColumns\n      });\n    };\n    const init$d = spec => spec.state(spec);\n\n    var KeyingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        flatgrid: flatgrid$1,\n        init: init$d\n    });\n\n    const useH = movement => (component, simulatedEvent, config, state) => {\n      const move = movement(component.element);\n      return use(move, component, simulatedEvent, config, state);\n    };\n    const west$1 = (moveLeft, moveRight) => {\n      const movement = onDirection(moveLeft, moveRight);\n      return useH(movement);\n    };\n    const east$1 = (moveLeft, moveRight) => {\n      const movement = onDirection(moveRight, moveLeft);\n      return useH(movement);\n    };\n    const useV = move => (component, simulatedEvent, config, state) => use(move, component, simulatedEvent, config, state);\n    const use = (move, component, simulatedEvent, config, state) => {\n      const outcome = config.focusManager.get(component).bind(focused => move(component.element, focused, config, state));\n      return outcome.map(newFocus => {\n        config.focusManager.set(component, newFocus);\n        return true;\n      });\n    };\n    const north$1 = useV;\n    const south$1 = useV;\n    const move$1 = useV;\n\n    const isHidden$1 = dom => dom.offsetWidth <= 0 && dom.offsetHeight <= 0;\n    const isVisible = element => !isHidden$1(element.dom);\n\n    const locate = (candidates, predicate) => findIndex$1(candidates, predicate).map(index => ({\n      index,\n      candidates\n    }));\n\n    const locateVisible = (container, current, selector) => {\n      const predicate = x => eq(x, current);\n      const candidates = descendants(container, selector);\n      const visible = filter$2(candidates, isVisible);\n      return locate(visible, predicate);\n    };\n    const findIndex = (elements, target) => findIndex$1(elements, elem => eq(target, elem));\n\n    const withGrid = (values, index, numCols, f) => {\n      const oldRow = Math.floor(index / numCols);\n      const oldColumn = index % numCols;\n      return f(oldRow, oldColumn).bind(address => {\n        const newIndex = address.row * numCols + address.column;\n        return newIndex >= 0 && newIndex < values.length ? Optional.some(values[newIndex]) : Optional.none();\n      });\n    };\n    const cycleHorizontal$1 = (values, index, numRows, numCols, delta) => withGrid(values, index, numCols, (oldRow, oldColumn) => {\n      const onLastRow = oldRow === numRows - 1;\n      const colsInRow = onLastRow ? values.length - oldRow * numCols : numCols;\n      const newColumn = cycleBy(oldColumn, delta, 0, colsInRow - 1);\n      return Optional.some({\n        row: oldRow,\n        column: newColumn\n      });\n    });\n    const cycleVertical$1 = (values, index, numRows, numCols, delta) => withGrid(values, index, numCols, (oldRow, oldColumn) => {\n      const newRow = cycleBy(oldRow, delta, 0, numRows - 1);\n      const onLastRow = newRow === numRows - 1;\n      const colsInRow = onLastRow ? values.length - newRow * numCols : numCols;\n      const newCol = clamp(oldColumn, 0, colsInRow - 1);\n      return Optional.some({\n        row: newRow,\n        column: newCol\n      });\n    });\n    const cycleRight$1 = (values, index, numRows, numCols) => cycleHorizontal$1(values, index, numRows, numCols, +1);\n    const cycleLeft$1 = (values, index, numRows, numCols) => cycleHorizontal$1(values, index, numRows, numCols, -1);\n    const cycleUp$1 = (values, index, numRows, numCols) => cycleVertical$1(values, index, numRows, numCols, -1);\n    const cycleDown$1 = (values, index, numRows, numCols) => cycleVertical$1(values, index, numRows, numCols, +1);\n\n    const schema$u = [\n      required$1('selector'),\n      defaulted('execute', defaultExecute),\n      onKeyboardHandler('onEscape'),\n      defaulted('captureTab', false),\n      initSize()\n    ];\n    const focusIn$3 = (component, gridConfig, _gridState) => {\n      descendant(component.element, gridConfig.selector).each(first => {\n        gridConfig.focusManager.set(component, first);\n      });\n    };\n    const findCurrent$1 = (component, gridConfig) => gridConfig.focusManager.get(component).bind(elem => closest$1(elem, gridConfig.selector));\n    const execute$3 = (component, simulatedEvent, gridConfig, _gridState) => findCurrent$1(component, gridConfig).bind(focused => gridConfig.execute(component, simulatedEvent, focused));\n    const doMove$2 = cycle => (element, focused, gridConfig, gridState) => locateVisible(element, focused, gridConfig.selector).bind(identified => cycle(identified.candidates, identified.index, gridState.getNumRows().getOr(gridConfig.initSize.numRows), gridState.getNumColumns().getOr(gridConfig.initSize.numColumns)));\n    const handleTab = (_component, _simulatedEvent, gridConfig) => gridConfig.captureTab ? Optional.some(true) : Optional.none();\n    const doEscape$1 = (component, simulatedEvent, gridConfig) => gridConfig.onEscape(component, simulatedEvent);\n    const moveLeft$3 = doMove$2(cycleLeft$1);\n    const moveRight$3 = doMove$2(cycleRight$1);\n    const moveNorth$1 = doMove$2(cycleUp$1);\n    const moveSouth$1 = doMove$2(cycleDown$1);\n    const getKeydownRules$4 = constant$1([\n      rule(inSet(LEFT), west$1(moveLeft$3, moveRight$3)),\n      rule(inSet(RIGHT), east$1(moveLeft$3, moveRight$3)),\n      rule(inSet(UP), north$1(moveNorth$1)),\n      rule(inSet(DOWN), south$1(moveSouth$1)),\n      rule(and([\n        isShift,\n        inSet(TAB)\n      ]), handleTab),\n      rule(and([\n        isNotShift,\n        inSet(TAB)\n      ]), handleTab),\n      rule(inSet(SPACE.concat(ENTER)), execute$3)\n    ]);\n    const getKeyupRules$4 = constant$1([\n      rule(inSet(ESCAPE), doEscape$1),\n      rule(inSet(SPACE), stopEventForFirefox)\n    ]);\n    var FlatgridType = typical(schema$u, flatgrid$1, getKeydownRules$4, getKeyupRules$4, () => Optional.some(focusIn$3));\n\n    const horizontal = (container, selector, current, delta) => {\n      const isDisabledButton = candidate => name$3(candidate) === 'button' && get$f(candidate, 'disabled') === 'disabled';\n      const tryCycle = (initial, index, candidates) => {\n        const newIndex = cycleBy(index, delta, 0, candidates.length - 1);\n        if (newIndex === initial) {\n          return Optional.none();\n        } else {\n          return isDisabledButton(candidates[newIndex]) ? tryCycle(initial, newIndex, candidates) : Optional.from(candidates[newIndex]);\n        }\n      };\n      return locateVisible(container, current, selector).bind(identified => {\n        const index = identified.index;\n        const candidates = identified.candidates;\n        return tryCycle(index, index, candidates);\n      });\n    };\n\n    const schema$t = [\n      required$1('selector'),\n      defaulted('getInitial', Optional.none),\n      defaulted('execute', defaultExecute),\n      onKeyboardHandler('onEscape'),\n      defaulted('executeOnMove', false),\n      defaulted('allowVertical', true)\n    ];\n    const findCurrent = (component, flowConfig) => flowConfig.focusManager.get(component).bind(elem => closest$1(elem, flowConfig.selector));\n    const execute$2 = (component, simulatedEvent, flowConfig) => findCurrent(component, flowConfig).bind(focused => flowConfig.execute(component, simulatedEvent, focused));\n    const focusIn$2 = (component, flowConfig, _state) => {\n      flowConfig.getInitial(component).orThunk(() => descendant(component.element, flowConfig.selector)).each(first => {\n        flowConfig.focusManager.set(component, first);\n      });\n    };\n    const moveLeft$2 = (element, focused, info) => horizontal(element, info.selector, focused, -1);\n    const moveRight$2 = (element, focused, info) => horizontal(element, info.selector, focused, +1);\n    const doMove$1 = movement => (component, simulatedEvent, flowConfig, flowState) => movement(component, simulatedEvent, flowConfig, flowState).bind(() => flowConfig.executeOnMove ? execute$2(component, simulatedEvent, flowConfig) : Optional.some(true));\n    const doEscape = (component, simulatedEvent, flowConfig) => flowConfig.onEscape(component, simulatedEvent);\n    const getKeydownRules$3 = (_component, _se, flowConfig, _flowState) => {\n      const westMovers = LEFT.concat(flowConfig.allowVertical ? UP : []);\n      const eastMovers = RIGHT.concat(flowConfig.allowVertical ? DOWN : []);\n      return [\n        rule(inSet(westMovers), doMove$1(west$1(moveLeft$2, moveRight$2))),\n        rule(inSet(eastMovers), doMove$1(east$1(moveLeft$2, moveRight$2))),\n        rule(inSet(ENTER), execute$2),\n        rule(inSet(SPACE), execute$2)\n      ];\n    };\n    const getKeyupRules$3 = constant$1([\n      rule(inSet(SPACE), stopEventForFirefox),\n      rule(inSet(ESCAPE), doEscape)\n    ]);\n    var FlowType = typical(schema$t, NoState.init, getKeydownRules$3, getKeyupRules$3, () => Optional.some(focusIn$2));\n\n    const toCell = (matrix, rowIndex, columnIndex) => Optional.from(matrix[rowIndex]).bind(row => Optional.from(row[columnIndex]).map(cell => ({\n      rowIndex,\n      columnIndex,\n      cell\n    })));\n    const cycleHorizontal = (matrix, rowIndex, startCol, deltaCol) => {\n      const row = matrix[rowIndex];\n      const colsInRow = row.length;\n      const newColIndex = cycleBy(startCol, deltaCol, 0, colsInRow - 1);\n      return toCell(matrix, rowIndex, newColIndex);\n    };\n    const cycleVertical = (matrix, colIndex, startRow, deltaRow) => {\n      const nextRowIndex = cycleBy(startRow, deltaRow, 0, matrix.length - 1);\n      const colsInNextRow = matrix[nextRowIndex].length;\n      const nextColIndex = clamp(colIndex, 0, colsInNextRow - 1);\n      return toCell(matrix, nextRowIndex, nextColIndex);\n    };\n    const moveHorizontal = (matrix, rowIndex, startCol, deltaCol) => {\n      const row = matrix[rowIndex];\n      const colsInRow = row.length;\n      const newColIndex = clamp(startCol + deltaCol, 0, colsInRow - 1);\n      return toCell(matrix, rowIndex, newColIndex);\n    };\n    const moveVertical = (matrix, colIndex, startRow, deltaRow) => {\n      const nextRowIndex = clamp(startRow + deltaRow, 0, matrix.length - 1);\n      const colsInNextRow = matrix[nextRowIndex].length;\n      const nextColIndex = clamp(colIndex, 0, colsInNextRow - 1);\n      return toCell(matrix, nextRowIndex, nextColIndex);\n    };\n    const cycleRight = (matrix, startRow, startCol) => cycleHorizontal(matrix, startRow, startCol, +1);\n    const cycleLeft = (matrix, startRow, startCol) => cycleHorizontal(matrix, startRow, startCol, -1);\n    const cycleUp = (matrix, startRow, startCol) => cycleVertical(matrix, startCol, startRow, -1);\n    const cycleDown = (matrix, startRow, startCol) => cycleVertical(matrix, startCol, startRow, +1);\n    const moveLeft$1 = (matrix, startRow, startCol) => moveHorizontal(matrix, startRow, startCol, -1);\n    const moveRight$1 = (matrix, startRow, startCol) => moveHorizontal(matrix, startRow, startCol, +1);\n    const moveUp$1 = (matrix, startRow, startCol) => moveVertical(matrix, startCol, startRow, -1);\n    const moveDown$1 = (matrix, startRow, startCol) => moveVertical(matrix, startCol, startRow, +1);\n\n    const schema$s = [\n      requiredObjOf('selectors', [\n        required$1('row'),\n        required$1('cell')\n      ]),\n      defaulted('cycles', true),\n      defaulted('previousSelector', Optional.none),\n      defaulted('execute', defaultExecute)\n    ];\n    const focusIn$1 = (component, matrixConfig, _state) => {\n      const focused = matrixConfig.previousSelector(component).orThunk(() => {\n        const selectors = matrixConfig.selectors;\n        return descendant(component.element, selectors.cell);\n      });\n      focused.each(cell => {\n        matrixConfig.focusManager.set(component, cell);\n      });\n    };\n    const execute$1 = (component, simulatedEvent, matrixConfig) => search(component.element).bind(focused => matrixConfig.execute(component, simulatedEvent, focused));\n    const toMatrix = (rows, matrixConfig) => map$2(rows, row => descendants(row, matrixConfig.selectors.cell));\n    const doMove = (ifCycle, ifMove) => (element, focused, matrixConfig) => {\n      const move = matrixConfig.cycles ? ifCycle : ifMove;\n      return closest$1(focused, matrixConfig.selectors.row).bind(inRow => {\n        const cellsInRow = descendants(inRow, matrixConfig.selectors.cell);\n        return findIndex(cellsInRow, focused).bind(colIndex => {\n          const allRows = descendants(element, matrixConfig.selectors.row);\n          return findIndex(allRows, inRow).bind(rowIndex => {\n            const matrix = toMatrix(allRows, matrixConfig);\n            return move(matrix, rowIndex, colIndex).map(next => next.cell);\n          });\n        });\n      });\n    };\n    const moveLeft = doMove(cycleLeft, moveLeft$1);\n    const moveRight = doMove(cycleRight, moveRight$1);\n    const moveNorth = doMove(cycleUp, moveUp$1);\n    const moveSouth = doMove(cycleDown, moveDown$1);\n    const getKeydownRules$2 = constant$1([\n      rule(inSet(LEFT), west$1(moveLeft, moveRight)),\n      rule(inSet(RIGHT), east$1(moveLeft, moveRight)),\n      rule(inSet(UP), north$1(moveNorth)),\n      rule(inSet(DOWN), south$1(moveSouth)),\n      rule(inSet(SPACE.concat(ENTER)), execute$1)\n    ]);\n    const getKeyupRules$2 = constant$1([rule(inSet(SPACE), stopEventForFirefox)]);\n    var MatrixType = typical(schema$s, NoState.init, getKeydownRules$2, getKeyupRules$2, () => Optional.some(focusIn$1));\n\n    const schema$r = [\n      required$1('selector'),\n      defaulted('execute', defaultExecute),\n      defaulted('moveOnTab', false)\n    ];\n    const execute = (component, simulatedEvent, menuConfig) => menuConfig.focusManager.get(component).bind(focused => menuConfig.execute(component, simulatedEvent, focused));\n    const focusIn = (component, menuConfig, _state) => {\n      descendant(component.element, menuConfig.selector).each(first => {\n        menuConfig.focusManager.set(component, first);\n      });\n    };\n    const moveUp = (element, focused, info) => horizontal(element, info.selector, focused, -1);\n    const moveDown = (element, focused, info) => horizontal(element, info.selector, focused, +1);\n    const fireShiftTab = (component, simulatedEvent, menuConfig, menuState) => menuConfig.moveOnTab ? move$1(moveUp)(component, simulatedEvent, menuConfig, menuState) : Optional.none();\n    const fireTab = (component, simulatedEvent, menuConfig, menuState) => menuConfig.moveOnTab ? move$1(moveDown)(component, simulatedEvent, menuConfig, menuState) : Optional.none();\n    const getKeydownRules$1 = constant$1([\n      rule(inSet(UP), move$1(moveUp)),\n      rule(inSet(DOWN), move$1(moveDown)),\n      rule(and([\n        isShift,\n        inSet(TAB)\n      ]), fireShiftTab),\n      rule(and([\n        isNotShift,\n        inSet(TAB)\n      ]), fireTab),\n      rule(inSet(ENTER), execute),\n      rule(inSet(SPACE), execute)\n    ]);\n    const getKeyupRules$1 = constant$1([rule(inSet(SPACE), stopEventForFirefox)]);\n    var MenuType = typical(schema$r, NoState.init, getKeydownRules$1, getKeyupRules$1, () => Optional.some(focusIn));\n\n    const schema$q = [\n      onKeyboardHandler('onSpace'),\n      onKeyboardHandler('onEnter'),\n      onKeyboardHandler('onShiftEnter'),\n      onKeyboardHandler('onLeft'),\n      onKeyboardHandler('onRight'),\n      onKeyboardHandler('onTab'),\n      onKeyboardHandler('onShiftTab'),\n      onKeyboardHandler('onUp'),\n      onKeyboardHandler('onDown'),\n      onKeyboardHandler('onEscape'),\n      defaulted('stopSpaceKeyup', false),\n      option$3('focusIn')\n    ];\n    const getKeydownRules = (component, simulatedEvent, specialInfo) => [\n      rule(inSet(SPACE), specialInfo.onSpace),\n      rule(and([\n        isNotShift,\n        inSet(ENTER)\n      ]), specialInfo.onEnter),\n      rule(and([\n        isShift,\n        inSet(ENTER)\n      ]), specialInfo.onShiftEnter),\n      rule(and([\n        isShift,\n        inSet(TAB)\n      ]), specialInfo.onShiftTab),\n      rule(and([\n        isNotShift,\n        inSet(TAB)\n      ]), specialInfo.onTab),\n      rule(inSet(UP), specialInfo.onUp),\n      rule(inSet(DOWN), specialInfo.onDown),\n      rule(inSet(LEFT), specialInfo.onLeft),\n      rule(inSet(RIGHT), specialInfo.onRight),\n      rule(inSet(SPACE), specialInfo.onSpace)\n    ];\n    const getKeyupRules = (component, simulatedEvent, specialInfo) => [\n      ...specialInfo.stopSpaceKeyup ? [rule(inSet(SPACE), stopEventForFirefox)] : [],\n      rule(inSet(ESCAPE), specialInfo.onEscape)\n    ];\n    var SpecialType = typical(schema$q, NoState.init, getKeydownRules, getKeyupRules, specialInfo => specialInfo.focusIn);\n\n    const acyclic = AcyclicType.schema();\n    const cyclic = CyclicType.schema();\n    const flow = FlowType.schema();\n    const flatgrid = FlatgridType.schema();\n    const matrix = MatrixType.schema();\n    const execution = ExecutionType.schema();\n    const menu = MenuType.schema();\n    const special = SpecialType.schema();\n\n    var KeyboardBranches = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        acyclic: acyclic,\n        cyclic: cyclic,\n        flow: flow,\n        flatgrid: flatgrid,\n        matrix: matrix,\n        execution: execution,\n        menu: menu,\n        special: special\n    });\n\n    const isFlatgridState = keyState => hasNonNullableKey(keyState, 'setGridSize');\n    const Keying = createModes({\n      branchKey: 'mode',\n      branches: KeyboardBranches,\n      name: 'keying',\n      active: {\n        events: (keyingConfig, keyingState) => {\n          const handler = keyingConfig.handler;\n          return handler.toEvents(keyingConfig, keyingState);\n        }\n      },\n      apis: {\n        focusIn: (component, keyConfig, keyState) => {\n          keyConfig.sendFocusIn(keyConfig).fold(() => {\n            component.getSystem().triggerFocus(component.element, component.element);\n          }, sendFocusIn => {\n            sendFocusIn(component, keyConfig, keyState);\n          });\n        },\n        setGridSize: (component, keyConfig, keyState, numRows, numColumns) => {\n          if (!isFlatgridState(keyState)) {\n            console.error('Layout does not support setGridSize');\n          } else {\n            keyState.setGridSize(numRows, numColumns);\n          }\n        }\n      },\n      state: KeyingState\n    });\n\n    const withoutReuse = (parent, data) => {\n      preserve$1(() => {\n        replaceChildren(parent, data, () => map$2(data, parent.getSystem().build));\n      }, parent.element);\n    };\n    const withReuse = (parent, data) => {\n      preserve$1(() => {\n        virtualReplaceChildren(parent, data, () => {\n          return patchSpecChildren(parent.element, data, parent.getSystem().buildOrPatch);\n        });\n      }, parent.element);\n    };\n\n    const virtualReplace = (component, replacee, replaceeIndex, childSpec) => {\n      virtualDetach(replacee);\n      const child = patchSpecChild(component.element, replaceeIndex, childSpec, component.getSystem().buildOrPatch);\n      virtualAttach(component, child);\n      component.syncComponents();\n    };\n    const insert = (component, insertion, childSpec) => {\n      const child = component.getSystem().build(childSpec);\n      attachWith(component, child, insertion);\n    };\n    const replace = (component, replacee, replaceeIndex, childSpec) => {\n      detach(replacee);\n      insert(component, (p, c) => appendAt(p, c, replaceeIndex), childSpec);\n    };\n    const set$3 = (component, replaceConfig, replaceState, data) => {\n      const replacer = replaceConfig.reuseDom ? withReuse : withoutReuse;\n      return replacer(component, data);\n    };\n    const append = (component, replaceConfig, replaceState, appendee) => {\n      insert(component, append$2, appendee);\n    };\n    const prepend = (component, replaceConfig, replaceState, prependee) => {\n      insert(component, prepend$1, prependee);\n    };\n    const remove = (component, replaceConfig, replaceState, removee) => {\n      const children = contents(component);\n      const foundChild = find$5(children, child => eq(removee.element, child.element));\n      foundChild.each(detach);\n    };\n    const contents = (component, _replaceConfig) => component.components();\n    const replaceAt = (component, replaceConfig, replaceState, replaceeIndex, replacer) => {\n      const children = contents(component);\n      return Optional.from(children[replaceeIndex]).map(replacee => {\n        replacer.fold(() => detach(replacee), r => {\n          const replacer = replaceConfig.reuseDom ? virtualReplace : replace;\n          replacer(component, replacee, replaceeIndex, r);\n        });\n        return replacee;\n      });\n    };\n    const replaceBy = (component, replaceConfig, replaceState, replaceePred, replacer) => {\n      const children = contents(component);\n      return findIndex$1(children, replaceePred).bind(replaceeIndex => replaceAt(component, replaceConfig, replaceState, replaceeIndex, replacer));\n    };\n\n    var ReplaceApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        append: append,\n        prepend: prepend,\n        remove: remove,\n        replaceAt: replaceAt,\n        replaceBy: replaceBy,\n        set: set$3,\n        contents: contents\n    });\n\n    const Replacing = create$3({\n      fields: [defaultedBoolean('reuseDom', true)],\n      name: 'replacing',\n      apis: ReplaceApis\n    });\n\n    const events$d = (name, eventHandlers) => {\n      const events = derive$2(eventHandlers);\n      return create$3({\n        fields: [required$1('enabled')],\n        name,\n        active: { events: constant$1(events) }\n      });\n    };\n    const config = (name, eventHandlers) => {\n      const me = events$d(name, eventHandlers);\n      return {\n        key: name,\n        value: {\n          config: {},\n          me,\n          configAsRaw: constant$1({}),\n          initialConfig: {},\n          state: NoState\n        }\n      };\n    };\n\n    const focus$2 = (component, focusConfig) => {\n      if (!focusConfig.ignore) {\n        focus$3(component.element);\n        focusConfig.onFocus(component);\n      }\n    };\n    const blur = (component, focusConfig) => {\n      if (!focusConfig.ignore) {\n        blur$1(component.element);\n      }\n    };\n    const isFocused = component => hasFocus(component.element);\n\n    var FocusApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        focus: focus$2,\n        blur: blur,\n        isFocused: isFocused\n    });\n\n    const exhibit$4 = (base, focusConfig) => {\n      const mod = focusConfig.ignore ? {} : { attributes: { tabindex: '-1' } };\n      return nu$7(mod);\n    };\n    const events$c = focusConfig => derive$2([run$1(focus$4(), (component, simulatedEvent) => {\n        focus$2(component, focusConfig);\n        simulatedEvent.stop();\n      })].concat(focusConfig.stopMousedown ? [run$1(mousedown(), (_, simulatedEvent) => {\n        simulatedEvent.event.prevent();\n      })] : []));\n\n    var ActiveFocus = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$4,\n        events: events$c\n    });\n\n    var FocusSchema = [\n      onHandler('onFocus'),\n      defaulted('stopMousedown', false),\n      defaulted('ignore', false)\n    ];\n\n    const Focusing = create$3({\n      fields: FocusSchema,\n      name: 'focusing',\n      active: ActiveFocus,\n      apis: FocusApis\n    });\n\n    const SetupBehaviourCellState = initialState => {\n      const init = () => {\n        const cell = Cell(initialState);\n        const get = () => cell.get();\n        const set = newState => cell.set(newState);\n        const clear = () => cell.set(initialState);\n        const readState = () => cell.get();\n        return {\n          get,\n          set,\n          clear,\n          readState\n        };\n      };\n      return { init };\n    };\n\n    const updateAriaState = (component, toggleConfig, toggleState) => {\n      const ariaInfo = toggleConfig.aria;\n      ariaInfo.update(component, ariaInfo, toggleState.get());\n    };\n    const updateClass = (component, toggleConfig, toggleState) => {\n      toggleConfig.toggleClass.each(toggleClass => {\n        if (toggleState.get()) {\n          add$2(component.element, toggleClass);\n        } else {\n          remove$2(component.element, toggleClass);\n        }\n      });\n    };\n    const set$2 = (component, toggleConfig, toggleState, state) => {\n      const initialState = toggleState.get();\n      toggleState.set(state);\n      updateClass(component, toggleConfig, toggleState);\n      updateAriaState(component, toggleConfig, toggleState);\n      if (initialState !== state) {\n        toggleConfig.onToggled(component, state);\n      }\n    };\n    const toggle$2 = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, !toggleState.get());\n    };\n    const on = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, true);\n    };\n    const off = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, false);\n    };\n    const isOn = (component, toggleConfig, toggleState) => toggleState.get();\n    const onLoad = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, toggleConfig.selected);\n    };\n\n    var ToggleApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        onLoad: onLoad,\n        toggle: toggle$2,\n        isOn: isOn,\n        on: on,\n        off: off,\n        set: set$2\n    });\n\n    const exhibit$3 = () => nu$7({});\n    const events$b = (toggleConfig, toggleState) => {\n      const execute = executeEvent(toggleConfig, toggleState, toggle$2);\n      const load = loadEvent(toggleConfig, toggleState, onLoad);\n      return derive$2(flatten([\n        toggleConfig.toggleOnExecute ? [execute] : [],\n        [load]\n      ]));\n    };\n\n    var ActiveToggle = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$3,\n        events: events$b\n    });\n\n    const updatePressed = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-pressed', status);\n      if (ariaInfo.syncWithExpanded) {\n        updateExpanded(component, ariaInfo, status);\n      }\n    };\n    const updateSelected = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-selected', status);\n    };\n    const updateChecked = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-checked', status);\n    };\n    const updateExpanded = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-expanded', status);\n    };\n\n    var ToggleSchema = [\n      defaulted('selected', false),\n      option$3('toggleClass'),\n      defaulted('toggleOnExecute', true),\n      onHandler('onToggled'),\n      defaultedOf('aria', { mode: 'none' }, choose$1('mode', {\n        pressed: [\n          defaulted('syncWithExpanded', false),\n          output$1('update', updatePressed)\n        ],\n        checked: [output$1('update', updateChecked)],\n        expanded: [output$1('update', updateExpanded)],\n        selected: [output$1('update', updateSelected)],\n        none: [output$1('update', noop)]\n      }))\n    ];\n\n    const Toggling = create$3({\n      fields: ToggleSchema,\n      name: 'toggling',\n      active: ActiveToggle,\n      apis: ToggleApis,\n      state: SetupBehaviourCellState(false)\n    });\n\n    const pointerEvents = () => {\n      const onClick = (component, simulatedEvent) => {\n        simulatedEvent.stop();\n        emitExecute(component);\n      };\n      return [\n        run$1(click(), onClick),\n        run$1(tap(), onClick),\n        cutter(touchstart()),\n        cutter(mousedown())\n      ];\n    };\n    const events$a = optAction => {\n      const executeHandler = action => runOnExecute$1((component, simulatedEvent) => {\n        action(component);\n        simulatedEvent.stop();\n      });\n      return derive$2(flatten([\n        optAction.map(executeHandler).toArray(),\n        pointerEvents()\n      ]));\n    };\n\n    const hoverEvent = 'alloy.item-hover';\n    const focusEvent = 'alloy.item-focus';\n    const toggledEvent = 'alloy.item-toggled';\n    const onHover = item => {\n      if (search(item.element).isNone() || Focusing.isFocused(item)) {\n        if (!Focusing.isFocused(item)) {\n          Focusing.focus(item);\n        }\n        emitWith(item, hoverEvent, { item });\n      }\n    };\n    const onFocus$1 = item => {\n      emitWith(item, focusEvent, { item });\n    };\n    const onToggled = (item, state) => {\n      emitWith(item, toggledEvent, {\n        item,\n        state\n      });\n    };\n    const hover = constant$1(hoverEvent);\n    const focus$1 = constant$1(focusEvent);\n    const toggled = constant$1(toggledEvent);\n\n    const getItemRole = detail => detail.toggling.map(toggling => toggling.exclusive ? 'menuitemradio' : 'menuitemcheckbox').getOr('menuitem');\n    const getTogglingSpec = tConfig => ({\n      aria: { mode: 'checked' },\n      ...filter$1(tConfig, (_value, name) => name !== 'exclusive'),\n      onToggled: (component, state) => {\n        if (isFunction(tConfig.onToggled)) {\n          tConfig.onToggled(component, state);\n        }\n        onToggled(component, state);\n      }\n    });\n    const builder$2 = detail => ({\n      dom: detail.dom,\n      domModification: {\n        ...detail.domModification,\n        attributes: {\n          'role': getItemRole(detail),\n          ...detail.domModification.attributes,\n          'aria-haspopup': detail.hasSubmenu,\n          ...detail.hasSubmenu ? { 'aria-expanded': false } : {}\n        }\n      },\n      behaviours: SketchBehaviours.augment(detail.itemBehaviours, [\n        detail.toggling.fold(Toggling.revoke, tConfig => Toggling.config(getTogglingSpec(tConfig))),\n        Focusing.config({\n          ignore: detail.ignoreFocus,\n          stopMousedown: detail.ignoreFocus,\n          onFocus: component => {\n            onFocus$1(component);\n          }\n        }),\n        Keying.config({ mode: 'execution' }),\n        Representing.config({\n          store: {\n            mode: 'memory',\n            initialValue: detail.data\n          }\n        }),\n        config('item-type-events', [\n          ...pointerEvents(),\n          run$1(mouseover(), onHover),\n          run$1(focusItem(), Focusing.focus)\n        ])\n      ]),\n      components: detail.components,\n      eventOrder: detail.eventOrder\n    });\n    const schema$p = [\n      required$1('data'),\n      required$1('components'),\n      required$1('dom'),\n      defaulted('hasSubmenu', false),\n      option$3('toggling'),\n      SketchBehaviours.field('itemBehaviours', [\n        Toggling,\n        Focusing,\n        Keying,\n        Representing\n      ]),\n      defaulted('ignoreFocus', false),\n      defaulted('domModification', {}),\n      output$1('builder', builder$2),\n      defaulted('eventOrder', {})\n    ];\n\n    const builder$1 = detail => ({\n      dom: detail.dom,\n      components: detail.components,\n      events: derive$2([stopper(focusItem())])\n    });\n    const schema$o = [\n      required$1('dom'),\n      required$1('components'),\n      output$1('builder', builder$1)\n    ];\n\n    const owner$2 = constant$1('item-widget');\n    const parts$h = constant$1([required({\n        name: 'widget',\n        overrides: detail => {\n          return {\n            behaviours: derive$1([Representing.config({\n                store: {\n                  mode: 'manual',\n                  getValue: _component => {\n                    return detail.data;\n                  },\n                  setValue: noop\n                }\n              })])\n          };\n        }\n      })]);\n\n    const builder = detail => {\n      const subs = substitutes(owner$2(), detail, parts$h());\n      const components = components$1(owner$2(), detail, subs.internals());\n      const focusWidget = component => getPart(component, detail, 'widget').map(widget => {\n        Keying.focusIn(widget);\n        return widget;\n      });\n      const onHorizontalArrow = (component, simulatedEvent) => inside(simulatedEvent.event.target) ? Optional.none() : (() => {\n        if (detail.autofocus) {\n          simulatedEvent.setSource(component.element);\n          return Optional.none();\n        } else {\n          return Optional.none();\n        }\n      })();\n      return {\n        dom: detail.dom,\n        components,\n        domModification: detail.domModification,\n        events: derive$2([\n          runOnExecute$1((component, simulatedEvent) => {\n            focusWidget(component).each(_widget => {\n              simulatedEvent.stop();\n            });\n          }),\n          run$1(mouseover(), onHover),\n          run$1(focusItem(), (component, _simulatedEvent) => {\n            if (detail.autofocus) {\n              focusWidget(component);\n            } else {\n              Focusing.focus(component);\n            }\n          })\n        ]),\n        behaviours: SketchBehaviours.augment(detail.widgetBehaviours, [\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: detail.data\n            }\n          }),\n          Focusing.config({\n            ignore: detail.ignoreFocus,\n            onFocus: component => {\n              onFocus$1(component);\n            }\n          }),\n          Keying.config({\n            mode: 'special',\n            focusIn: detail.autofocus ? component => {\n              focusWidget(component);\n            } : revoke(),\n            onLeft: onHorizontalArrow,\n            onRight: onHorizontalArrow,\n            onEscape: (component, simulatedEvent) => {\n              if (!Focusing.isFocused(component) && !detail.autofocus) {\n                Focusing.focus(component);\n                return Optional.some(true);\n              } else if (detail.autofocus) {\n                simulatedEvent.setSource(component.element);\n                return Optional.none();\n              } else {\n                return Optional.none();\n              }\n            }\n          })\n        ])\n      };\n    };\n    const schema$n = [\n      required$1('uid'),\n      required$1('data'),\n      required$1('components'),\n      required$1('dom'),\n      defaulted('autofocus', false),\n      defaulted('ignoreFocus', false),\n      SketchBehaviours.field('widgetBehaviours', [\n        Representing,\n        Focusing,\n        Keying\n      ]),\n      defaulted('domModification', {}),\n      defaultUidsSchema(parts$h()),\n      output$1('builder', builder)\n    ];\n\n    const itemSchema$2 = choose$1('type', {\n      widget: schema$n,\n      item: schema$p,\n      separator: schema$o\n    });\n    const configureGrid = (detail, movementInfo) => ({\n      mode: 'flatgrid',\n      selector: '.' + detail.markers.item,\n      initSize: {\n        numColumns: movementInfo.initSize.numColumns,\n        numRows: movementInfo.initSize.numRows\n      },\n      focusManager: detail.focusManager\n    });\n    const configureMatrix = (detail, movementInfo) => ({\n      mode: 'matrix',\n      selectors: {\n        row: movementInfo.rowSelector,\n        cell: '.' + detail.markers.item\n      },\n      focusManager: detail.focusManager\n    });\n    const configureMenu = (detail, movementInfo) => ({\n      mode: 'menu',\n      selector: '.' + detail.markers.item,\n      moveOnTab: movementInfo.moveOnTab,\n      focusManager: detail.focusManager\n    });\n    const parts$g = constant$1([group({\n        factory: {\n          sketch: spec => {\n            const itemInfo = asRawOrDie$1('menu.spec item', itemSchema$2, spec);\n            return itemInfo.builder(itemInfo);\n          }\n        },\n        name: 'items',\n        unit: 'item',\n        defaults: (detail, u) => {\n          return has$2(u, 'uid') ? u : {\n            ...u,\n            uid: generate$5('item')\n          };\n        },\n        overrides: (detail, u) => {\n          return {\n            type: u.type,\n            ignoreFocus: detail.fakeFocus,\n            domModification: { classes: [detail.markers.item] }\n          };\n        }\n      })]);\n    const schema$m = constant$1([\n      required$1('value'),\n      required$1('items'),\n      required$1('dom'),\n      required$1('components'),\n      defaulted('eventOrder', {}),\n      field('menuBehaviours', [\n        Highlighting,\n        Representing,\n        Composing,\n        Keying\n      ]),\n      defaultedOf('movement', {\n        mode: 'menu',\n        moveOnTab: true\n      }, choose$1('mode', {\n        grid: [\n          initSize(),\n          output$1('config', configureGrid)\n        ],\n        matrix: [\n          output$1('config', configureMatrix),\n          required$1('rowSelector')\n        ],\n        menu: [\n          defaulted('moveOnTab', true),\n          output$1('config', configureMenu)\n        ]\n      })),\n      itemMarkers(),\n      defaulted('fakeFocus', false),\n      defaulted('focusManager', dom$2()),\n      onHandler('onHighlight'),\n      onHandler('onDehighlight')\n    ]);\n\n    const focus = constant$1('alloy.menu-focus');\n\n    const deselectOtherRadioItems = (menu, item) => {\n      const checkedRadioItems = descendants(menu.element, '[role=\"menuitemradio\"][aria-checked=\"true\"]');\n      each$1(checkedRadioItems, ele => {\n        if (!eq(ele, item.element)) {\n          menu.getSystem().getByDom(ele).each(c => {\n            Toggling.off(c);\n          });\n        }\n      });\n    };\n    const make$7 = (detail, components, _spec, _externals) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      markers: detail.markers,\n      behaviours: augment(detail.menuBehaviours, [\n        Highlighting.config({\n          highlightClass: detail.markers.selectedItem,\n          itemClass: detail.markers.item,\n          onHighlight: detail.onHighlight,\n          onDehighlight: detail.onDehighlight\n        }),\n        Representing.config({\n          store: {\n            mode: 'memory',\n            initialValue: detail.value\n          }\n        }),\n        Composing.config({ find: Optional.some }),\n        Keying.config(detail.movement.config(detail, detail.movement))\n      ]),\n      events: derive$2([\n        run$1(focus$1(), (menu, simulatedEvent) => {\n          const event = simulatedEvent.event;\n          menu.getSystem().getByDom(event.target).each(item => {\n            Highlighting.highlight(menu, item);\n            simulatedEvent.stop();\n            emitWith(menu, focus(), {\n              menu,\n              item\n            });\n          });\n        }),\n        run$1(hover(), (menu, simulatedEvent) => {\n          const item = simulatedEvent.event.item;\n          Highlighting.highlight(menu, item);\n        }),\n        run$1(toggled(), (menu, simulatedEvent) => {\n          const {item, state} = simulatedEvent.event;\n          if (state && get$f(item.element, 'role') === 'menuitemradio') {\n            deselectOtherRadioItems(menu, item);\n          }\n        })\n      ]),\n      components,\n      eventOrder: detail.eventOrder,\n      domModification: { attributes: { role: 'menu' } }\n    });\n\n    const Menu = composite({\n      name: 'Menu',\n      configFields: schema$m(),\n      partFields: parts$g(),\n      factory: make$7\n    });\n\n    const transpose$1 = obj => tupleMap(obj, (v, k) => ({\n      k: v,\n      v: k\n    }));\n    const trace = (items, byItem, byMenu, finish) => get$g(byMenu, finish).bind(triggerItem => get$g(items, triggerItem).bind(triggerMenu => {\n      const rest = trace(items, byItem, byMenu, triggerMenu);\n      return Optional.some([triggerMenu].concat(rest));\n    })).getOr([]);\n    const generate$2 = (menus, expansions) => {\n      const items = {};\n      each(menus, (menuItems, menu) => {\n        each$1(menuItems, item => {\n          items[item] = menu;\n        });\n      });\n      const byItem = expansions;\n      const byMenu = transpose$1(expansions);\n      const menuPaths = map$1(byMenu, (_triggerItem, submenu) => [submenu].concat(trace(items, byItem, byMenu, submenu)));\n      return map$1(items, menu => get$g(menuPaths, menu).getOr([menu]));\n    };\n\n    const init$c = () => {\n      const expansions = Cell({});\n      const menus = Cell({});\n      const paths = Cell({});\n      const primary = value$2();\n      const directory = Cell({});\n      const clear = () => {\n        expansions.set({});\n        menus.set({});\n        paths.set({});\n        primary.clear();\n      };\n      const isClear = () => primary.get().isNone();\n      const setMenuBuilt = (menuName, built) => {\n        menus.set({\n          ...menus.get(),\n          [menuName]: {\n            type: 'prepared',\n            menu: built\n          }\n        });\n      };\n      const setContents = (sPrimary, sMenus, sExpansions, dir) => {\n        primary.set(sPrimary);\n        expansions.set(sExpansions);\n        menus.set(sMenus);\n        directory.set(dir);\n        const sPaths = generate$2(dir, sExpansions);\n        paths.set(sPaths);\n      };\n      const getTriggeringItem = menuValue => find$4(expansions.get(), (v, _k) => v === menuValue);\n      const getTriggerData = (menuValue, getItemByValue, path) => getPreparedMenu(menuValue).bind(menu => getTriggeringItem(menuValue).bind(triggeringItemValue => getItemByValue(triggeringItemValue).map(triggeredItem => ({\n        triggeredMenu: menu,\n        triggeringItem: triggeredItem,\n        triggeringPath: path\n      }))));\n      const getTriggeringPath = (itemValue, getItemByValue) => {\n        const extraPath = filter$2(lookupItem(itemValue).toArray(), menuValue => getPreparedMenu(menuValue).isSome());\n        return get$g(paths.get(), itemValue).bind(path => {\n          const revPath = reverse(extraPath.concat(path));\n          const triggers = bind$3(revPath, (menuValue, menuIndex) => getTriggerData(menuValue, getItemByValue, revPath.slice(0, menuIndex + 1)).fold(() => is$1(primary.get(), menuValue) ? [] : [Optional.none()], data => [Optional.some(data)]));\n          return sequence(triggers);\n        });\n      };\n      const expand = itemValue => get$g(expansions.get(), itemValue).map(menu => {\n        const current = get$g(paths.get(), itemValue).getOr([]);\n        return [menu].concat(current);\n      });\n      const collapse = itemValue => get$g(paths.get(), itemValue).bind(path => path.length > 1 ? Optional.some(path.slice(1)) : Optional.none());\n      const refresh = itemValue => get$g(paths.get(), itemValue);\n      const getPreparedMenu = menuValue => lookupMenu(menuValue).bind(extractPreparedMenu);\n      const lookupMenu = menuValue => get$g(menus.get(), menuValue);\n      const lookupItem = itemValue => get$g(expansions.get(), itemValue);\n      const otherMenus = path => {\n        const menuValues = directory.get();\n        return difference(keys(menuValues), path);\n      };\n      const getPrimary = () => primary.get().bind(getPreparedMenu);\n      const getMenus = () => menus.get();\n      return {\n        setMenuBuilt,\n        setContents,\n        expand,\n        refresh,\n        collapse,\n        lookupMenu,\n        lookupItem,\n        otherMenus,\n        getPrimary,\n        getMenus,\n        clear,\n        isClear,\n        getTriggeringPath\n      };\n    };\n    const extractPreparedMenu = prep => prep.type === 'prepared' ? Optional.some(prep.menu) : Optional.none();\n    const LayeredState = {\n      init: init$c,\n      extractPreparedMenu\n    };\n\n    const onMenuItemHighlightedEvent = generate$6('tiered-menu-item-highlight');\n    const onMenuItemDehighlightedEvent = generate$6('tiered-menu-item-dehighlight');\n\n    var HighlightOnOpen;\n    (function (HighlightOnOpen) {\n      HighlightOnOpen[HighlightOnOpen['HighlightMenuAndItem'] = 0] = 'HighlightMenuAndItem';\n      HighlightOnOpen[HighlightOnOpen['HighlightJustMenu'] = 1] = 'HighlightJustMenu';\n      HighlightOnOpen[HighlightOnOpen['HighlightNone'] = 2] = 'HighlightNone';\n    }(HighlightOnOpen || (HighlightOnOpen = {})));\n\n    const make$6 = (detail, _rawUiSpec) => {\n      const submenuParentItems = value$2();\n      const buildMenus = (container, primaryName, menus) => map$1(menus, (spec, name) => {\n        const makeSketch = () => Menu.sketch({\n          ...spec,\n          value: name,\n          markers: detail.markers,\n          fakeFocus: detail.fakeFocus,\n          onHighlight: (menuComp, itemComp) => {\n            const highlightData = {\n              menuComp,\n              itemComp\n            };\n            emitWith(menuComp, onMenuItemHighlightedEvent, highlightData);\n          },\n          onDehighlight: (menuComp, itemComp) => {\n            const dehighlightData = {\n              menuComp,\n              itemComp\n            };\n            emitWith(menuComp, onMenuItemDehighlightedEvent, dehighlightData);\n          },\n          focusManager: detail.fakeFocus ? highlights() : dom$2()\n        });\n        return name === primaryName ? {\n          type: 'prepared',\n          menu: container.getSystem().build(makeSketch())\n        } : {\n          type: 'notbuilt',\n          nbMenu: makeSketch\n        };\n      });\n      const layeredState = LayeredState.init();\n      const setup = container => {\n        const componentMap = buildMenus(container, detail.data.primary, detail.data.menus);\n        const directory = toDirectory();\n        layeredState.setContents(detail.data.primary, componentMap, detail.data.expansions, directory);\n        return layeredState.getPrimary();\n      };\n      const getItemValue = item => Representing.getValue(item).value;\n      const getItemByValue = (_container, menus, itemValue) => findMap(menus, menu => {\n        if (!menu.getSystem().isConnected()) {\n          return Optional.none();\n        }\n        const candidates = Highlighting.getCandidates(menu);\n        return find$5(candidates, c => getItemValue(c) === itemValue);\n      });\n      const toDirectory = _container => map$1(detail.data.menus, (data, _menuName) => bind$3(data.items, item => item.type === 'separator' ? [] : [item.data.value]));\n      const setActiveMenu = Highlighting.highlight;\n      const setActiveMenuAndItem = (container, menu) => {\n        setActiveMenu(container, menu);\n        Highlighting.getHighlighted(menu).orThunk(() => Highlighting.getFirst(menu)).each(item => {\n          if (detail.fakeFocus) {\n            Highlighting.highlight(menu, item);\n          } else {\n            dispatch(container, item.element, focusItem());\n          }\n        });\n      };\n      const getMenus = (state, menuValues) => cat(map$2(menuValues, mv => state.lookupMenu(mv).bind(prep => prep.type === 'prepared' ? Optional.some(prep.menu) : Optional.none())));\n      const closeOthers = (container, state, path) => {\n        const others = getMenus(state, state.otherMenus(path));\n        each$1(others, o => {\n          remove$1(o.element, [detail.markers.backgroundMenu]);\n          if (!detail.stayInDom) {\n            Replacing.remove(container, o);\n          }\n        });\n      };\n      const getSubmenuParents = container => submenuParentItems.get().getOrThunk(() => {\n        const r = {};\n        const items = descendants(container.element, `.${ detail.markers.item }`);\n        const parentItems = filter$2(items, i => get$f(i, 'aria-haspopup') === 'true');\n        each$1(parentItems, i => {\n          container.getSystem().getByDom(i).each(itemComp => {\n            const key = getItemValue(itemComp);\n            r[key] = itemComp;\n          });\n        });\n        submenuParentItems.set(r);\n        return r;\n      });\n      const updateAriaExpansions = (container, path) => {\n        const parentItems = getSubmenuParents(container);\n        each(parentItems, (v, k) => {\n          const expanded = contains$2(path, k);\n          set$9(v.element, 'aria-expanded', expanded);\n        });\n      };\n      const updateMenuPath = (container, state, path) => Optional.from(path[0]).bind(latestMenuName => state.lookupMenu(latestMenuName).bind(menuPrep => {\n        if (menuPrep.type === 'notbuilt') {\n          return Optional.none();\n        } else {\n          const activeMenu = menuPrep.menu;\n          const rest = getMenus(state, path.slice(1));\n          each$1(rest, r => {\n            add$2(r.element, detail.markers.backgroundMenu);\n          });\n          if (!inBody(activeMenu.element)) {\n            Replacing.append(container, premade(activeMenu));\n          }\n          remove$1(activeMenu.element, [detail.markers.backgroundMenu]);\n          setActiveMenuAndItem(container, activeMenu);\n          closeOthers(container, state, path);\n          return Optional.some(activeMenu);\n        }\n      }));\n      let ExpandHighlightDecision;\n      (function (ExpandHighlightDecision) {\n        ExpandHighlightDecision[ExpandHighlightDecision['HighlightSubmenu'] = 0] = 'HighlightSubmenu';\n        ExpandHighlightDecision[ExpandHighlightDecision['HighlightParent'] = 1] = 'HighlightParent';\n      }(ExpandHighlightDecision || (ExpandHighlightDecision = {})));\n      const buildIfRequired = (container, menuName, menuPrep) => {\n        if (menuPrep.type === 'notbuilt') {\n          const menu = container.getSystem().build(menuPrep.nbMenu());\n          layeredState.setMenuBuilt(menuName, menu);\n          return menu;\n        } else {\n          return menuPrep.menu;\n        }\n      };\n      const expandRight = (container, item, decision = ExpandHighlightDecision.HighlightSubmenu) => {\n        if (item.hasConfigured(Disabling) && Disabling.isDisabled(item)) {\n          return Optional.some(item);\n        } else {\n          const value = getItemValue(item);\n          return layeredState.expand(value).bind(path => {\n            updateAriaExpansions(container, path);\n            return Optional.from(path[0]).bind(menuName => layeredState.lookupMenu(menuName).bind(activeMenuPrep => {\n              const activeMenu = buildIfRequired(container, menuName, activeMenuPrep);\n              if (!inBody(activeMenu.element)) {\n                Replacing.append(container, premade(activeMenu));\n              }\n              detail.onOpenSubmenu(container, item, activeMenu, reverse(path));\n              if (decision === ExpandHighlightDecision.HighlightSubmenu) {\n                Highlighting.highlightFirst(activeMenu);\n                return updateMenuPath(container, layeredState, path);\n              } else {\n                Highlighting.dehighlightAll(activeMenu);\n                return Optional.some(item);\n              }\n            }));\n          });\n        }\n      };\n      const collapseLeft = (container, item) => {\n        const value = getItemValue(item);\n        return layeredState.collapse(value).bind(path => {\n          updateAriaExpansions(container, path);\n          return updateMenuPath(container, layeredState, path).map(activeMenu => {\n            detail.onCollapseMenu(container, item, activeMenu);\n            return activeMenu;\n          });\n        });\n      };\n      const updateView = (container, item) => {\n        const value = getItemValue(item);\n        return layeredState.refresh(value).bind(path => {\n          updateAriaExpansions(container, path);\n          return updateMenuPath(container, layeredState, path);\n        });\n      };\n      const onRight = (container, item) => inside(item.element) ? Optional.none() : expandRight(container, item, ExpandHighlightDecision.HighlightSubmenu);\n      const onLeft = (container, item) => inside(item.element) ? Optional.none() : collapseLeft(container, item);\n      const onEscape = (container, item) => collapseLeft(container, item).orThunk(() => detail.onEscape(container, item).map(() => container));\n      const keyOnItem = f => (container, simulatedEvent) => {\n        return closest$1(simulatedEvent.getSource(), `.${ detail.markers.item }`).bind(target => container.getSystem().getByDom(target).toOptional().bind(item => f(container, item).map(always)));\n      };\n      const events = derive$2([\n        run$1(focus(), (tmenu, simulatedEvent) => {\n          const item = simulatedEvent.event.item;\n          layeredState.lookupItem(getItemValue(item)).each(() => {\n            const menu = simulatedEvent.event.menu;\n            Highlighting.highlight(tmenu, menu);\n            const value = getItemValue(simulatedEvent.event.item);\n            layeredState.refresh(value).each(path => closeOthers(tmenu, layeredState, path));\n          });\n        }),\n        runOnExecute$1((component, simulatedEvent) => {\n          const target = simulatedEvent.event.target;\n          component.getSystem().getByDom(target).each(item => {\n            const itemValue = getItemValue(item);\n            if (itemValue.indexOf('collapse-item') === 0) {\n              collapseLeft(component, item);\n            }\n            expandRight(component, item, ExpandHighlightDecision.HighlightSubmenu).fold(() => {\n              detail.onExecute(component, item);\n            }, noop);\n          });\n        }),\n        runOnAttached((container, _simulatedEvent) => {\n          setup(container).each(primary => {\n            Replacing.append(container, premade(primary));\n            detail.onOpenMenu(container, primary);\n            if (detail.highlightOnOpen === HighlightOnOpen.HighlightMenuAndItem) {\n              setActiveMenuAndItem(container, primary);\n            } else if (detail.highlightOnOpen === HighlightOnOpen.HighlightJustMenu) {\n              setActiveMenu(container, primary);\n            }\n          });\n        }),\n        run$1(onMenuItemHighlightedEvent, (tmenuComp, se) => {\n          detail.onHighlightItem(tmenuComp, se.event.menuComp, se.event.itemComp);\n        }),\n        run$1(onMenuItemDehighlightedEvent, (tmenuComp, se) => {\n          detail.onDehighlightItem(tmenuComp, se.event.menuComp, se.event.itemComp);\n        }),\n        ...detail.navigateOnHover ? [run$1(hover(), (tmenu, simulatedEvent) => {\n            const item = simulatedEvent.event.item;\n            updateView(tmenu, item);\n            expandRight(tmenu, item, ExpandHighlightDecision.HighlightParent);\n            detail.onHover(tmenu, item);\n          })] : []\n      ]);\n      const getActiveItem = container => Highlighting.getHighlighted(container).bind(Highlighting.getHighlighted);\n      const collapseMenuApi = container => {\n        getActiveItem(container).each(currentItem => {\n          collapseLeft(container, currentItem);\n        });\n      };\n      const highlightPrimary = container => {\n        layeredState.getPrimary().each(primary => {\n          setActiveMenuAndItem(container, primary);\n        });\n      };\n      const extractMenuFromContainer = container => Optional.from(container.components()[0]).filter(comp => get$f(comp.element, 'role') === 'menu');\n      const repositionMenus = container => {\n        const maybeActivePrimary = layeredState.getPrimary().bind(primary => getActiveItem(container).bind(currentItem => {\n          const itemValue = getItemValue(currentItem);\n          const allMenus = values(layeredState.getMenus());\n          const preparedMenus = cat(map$2(allMenus, LayeredState.extractPreparedMenu));\n          return layeredState.getTriggeringPath(itemValue, v => getItemByValue(container, preparedMenus, v));\n        }).map(triggeringPath => ({\n          primary,\n          triggeringPath\n        })));\n        maybeActivePrimary.fold(() => {\n          extractMenuFromContainer(container).each(primaryMenu => {\n            detail.onRepositionMenu(container, primaryMenu, []);\n          });\n        }, ({primary, triggeringPath}) => {\n          detail.onRepositionMenu(container, primary, triggeringPath);\n        });\n      };\n      const apis = {\n        collapseMenu: collapseMenuApi,\n        highlightPrimary,\n        repositionMenus\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        markers: detail.markers,\n        behaviours: augment(detail.tmenuBehaviours, [\n          Keying.config({\n            mode: 'special',\n            onRight: keyOnItem(onRight),\n            onLeft: keyOnItem(onLeft),\n            onEscape: keyOnItem(onEscape),\n            focusIn: (container, _keyInfo) => {\n              layeredState.getPrimary().each(primary => {\n                dispatch(container, primary.element, focusItem());\n              });\n            }\n          }),\n          Highlighting.config({\n            highlightClass: detail.markers.selectedMenu,\n            itemClass: detail.markers.menu\n          }),\n          Composing.config({\n            find: container => {\n              return Highlighting.getHighlighted(container);\n            }\n          }),\n          Replacing.config({})\n        ]),\n        eventOrder: detail.eventOrder,\n        apis,\n        events\n      };\n    };\n    const collapseItem$1 = constant$1('collapse-item');\n\n    const tieredData = (primary, menus, expansions) => ({\n      primary,\n      menus,\n      expansions\n    });\n    const singleData = (name, menu) => ({\n      primary: name,\n      menus: wrap$1(name, menu),\n      expansions: {}\n    });\n    const collapseItem = text => ({\n      value: generate$6(collapseItem$1()),\n      meta: { text }\n    });\n    const tieredMenu = single({\n      name: 'TieredMenu',\n      configFields: [\n        onStrictKeyboardHandler('onExecute'),\n        onStrictKeyboardHandler('onEscape'),\n        onStrictHandler('onOpenMenu'),\n        onStrictHandler('onOpenSubmenu'),\n        onHandler('onRepositionMenu'),\n        onHandler('onCollapseMenu'),\n        defaulted('highlightOnOpen', HighlightOnOpen.HighlightMenuAndItem),\n        requiredObjOf('data', [\n          required$1('primary'),\n          required$1('menus'),\n          required$1('expansions')\n        ]),\n        defaulted('fakeFocus', false),\n        onHandler('onHighlightItem'),\n        onHandler('onDehighlightItem'),\n        onHandler('onHover'),\n        tieredMenuMarkers(),\n        required$1('dom'),\n        defaulted('navigateOnHover', true),\n        defaulted('stayInDom', false),\n        field('tmenuBehaviours', [\n          Keying,\n          Highlighting,\n          Composing,\n          Replacing\n        ]),\n        defaulted('eventOrder', {})\n      ],\n      apis: {\n        collapseMenu: (apis, tmenu) => {\n          apis.collapseMenu(tmenu);\n        },\n        highlightPrimary: (apis, tmenu) => {\n          apis.highlightPrimary(tmenu);\n        },\n        repositionMenus: (apis, tmenu) => {\n          apis.repositionMenus(tmenu);\n        }\n      },\n      factory: make$6,\n      extraApis: {\n        tieredData,\n        singleData,\n        collapseItem\n      }\n    });\n\n    const makeMenu = (detail, menuSandbox, placementSpec, menuSpec, getBounds) => {\n      const lazySink = () => detail.lazySink(menuSandbox);\n      const layouts = menuSpec.type === 'horizontal' ? {\n        layouts: {\n          onLtr: () => belowOrAbove(),\n          onRtl: () => belowOrAboveRtl()\n        }\n      } : {};\n      const isFirstTierSubmenu = triggeringPaths => triggeringPaths.length === 2;\n      const getSubmenuLayouts = triggeringPaths => isFirstTierSubmenu(triggeringPaths) ? layouts : {};\n      return tieredMenu.sketch({\n        dom: { tag: 'div' },\n        data: menuSpec.data,\n        markers: menuSpec.menu.markers,\n        highlightOnOpen: menuSpec.menu.highlightOnOpen,\n        fakeFocus: menuSpec.menu.fakeFocus,\n        onEscape: () => {\n          Sandboxing.close(menuSandbox);\n          detail.onEscape.map(handler => handler(menuSandbox));\n          return Optional.some(true);\n        },\n        onExecute: () => {\n          return Optional.some(true);\n        },\n        onOpenMenu: (tmenu, menu) => {\n          Positioning.positionWithinBounds(lazySink().getOrDie(), menu, placementSpec, getBounds());\n        },\n        onOpenSubmenu: (tmenu, item, submenu, triggeringPaths) => {\n          const sink = lazySink().getOrDie();\n          Positioning.position(sink, submenu, {\n            anchor: {\n              type: 'submenu',\n              item,\n              ...getSubmenuLayouts(triggeringPaths)\n            }\n          });\n        },\n        onRepositionMenu: (tmenu, primaryMenu, submenuTriggers) => {\n          const sink = lazySink().getOrDie();\n          Positioning.positionWithinBounds(sink, primaryMenu, placementSpec, getBounds());\n          each$1(submenuTriggers, st => {\n            const submenuLayouts = getSubmenuLayouts(st.triggeringPath);\n            Positioning.position(sink, st.triggeredMenu, {\n              anchor: {\n                type: 'submenu',\n                item: st.triggeringItem,\n                ...submenuLayouts\n              }\n            });\n          });\n        }\n      });\n    };\n    const factory$m = (detail, spec) => {\n      const isPartOfRelated = (sandbox, queryElem) => {\n        const related = detail.getRelated(sandbox);\n        return related.exists(rel => isPartOf$1(rel, queryElem));\n      };\n      const setContent = (sandbox, thing) => {\n        Sandboxing.setContent(sandbox, thing);\n      };\n      const showAt = (sandbox, thing, placementSpec) => {\n        showWithin(sandbox, thing, placementSpec, Optional.none());\n      };\n      const showWithin = (sandbox, thing, placementSpec, boxElement) => {\n        showWithinBounds(sandbox, thing, placementSpec, () => boxElement.map(elem => box$1(elem)));\n      };\n      const showWithinBounds = (sandbox, thing, placementSpec, getBounds) => {\n        const sink = detail.lazySink(sandbox).getOrDie();\n        Sandboxing.openWhileCloaked(sandbox, thing, () => Positioning.positionWithinBounds(sink, sandbox, placementSpec, getBounds()));\n        Representing.setValue(sandbox, Optional.some({\n          mode: 'position',\n          config: placementSpec,\n          getBounds\n        }));\n      };\n      const showMenuAt = (sandbox, placementSpec, menuSpec) => {\n        showMenuWithinBounds(sandbox, placementSpec, menuSpec, Optional.none);\n      };\n      const showMenuWithinBounds = (sandbox, placementSpec, menuSpec, getBounds) => {\n        const menu = makeMenu(detail, sandbox, placementSpec, menuSpec, getBounds);\n        Sandboxing.open(sandbox, menu);\n        Representing.setValue(sandbox, Optional.some({\n          mode: 'menu',\n          menu\n        }));\n      };\n      const hide = sandbox => {\n        if (Sandboxing.isOpen(sandbox)) {\n          Representing.setValue(sandbox, Optional.none());\n          Sandboxing.close(sandbox);\n        }\n      };\n      const getContent = sandbox => Sandboxing.getState(sandbox);\n      const reposition = sandbox => {\n        if (Sandboxing.isOpen(sandbox)) {\n          Representing.getValue(sandbox).each(state => {\n            switch (state.mode) {\n            case 'menu':\n              Sandboxing.getState(sandbox).each(tieredMenu.repositionMenus);\n              break;\n            case 'position':\n              const sink = detail.lazySink(sandbox).getOrDie();\n              Positioning.positionWithinBounds(sink, sandbox, state.config, state.getBounds());\n              break;\n            }\n          });\n        }\n      };\n      const apis = {\n        setContent,\n        showAt,\n        showWithin,\n        showWithinBounds,\n        showMenuAt,\n        showMenuWithinBounds,\n        hide,\n        getContent,\n        reposition,\n        isOpen: Sandboxing.isOpen\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        behaviours: augment(detail.inlineBehaviours, [\n          Sandboxing.config({\n            isPartOf: (sandbox, data, queryElem) => {\n              return isPartOf$1(data, queryElem) || isPartOfRelated(sandbox, queryElem);\n            },\n            getAttachPoint: sandbox => {\n              return detail.lazySink(sandbox).getOrDie();\n            },\n            onOpen: sandbox => {\n              detail.onShow(sandbox);\n            },\n            onClose: sandbox => {\n              detail.onHide(sandbox);\n            }\n          }),\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: Optional.none()\n            }\n          }),\n          Receiving.config({\n            channels: {\n              ...receivingChannel$1({\n                isExtraPart: spec.isExtraPart,\n                ...detail.fireDismissalEventInstead.map(fe => ({ fireEventInstead: { event: fe.event } })).getOr({})\n              }),\n              ...receivingChannel({\n                ...detail.fireRepositionEventInstead.map(fe => ({ fireEventInstead: { event: fe.event } })).getOr({}),\n                doReposition: reposition\n              })\n            }\n          })\n        ]),\n        eventOrder: detail.eventOrder,\n        apis\n      };\n    };\n    const InlineView = single({\n      name: 'InlineView',\n      configFields: [\n        required$1('lazySink'),\n        onHandler('onShow'),\n        onHandler('onHide'),\n        optionFunction('onEscape'),\n        field('inlineBehaviours', [\n          Sandboxing,\n          Representing,\n          Receiving\n        ]),\n        optionObjOf('fireDismissalEventInstead', [defaulted('event', dismissRequested())]),\n        optionObjOf('fireRepositionEventInstead', [defaulted('event', repositionRequested())]),\n        defaulted('getRelated', Optional.none),\n        defaulted('isExtraPart', never),\n        defaulted('eventOrder', Optional.none)\n      ],\n      factory: factory$m,\n      apis: {\n        showAt: (apis, component, anchor, thing) => {\n          apis.showAt(component, anchor, thing);\n        },\n        showWithin: (apis, component, anchor, thing, boxElement) => {\n          apis.showWithin(component, anchor, thing, boxElement);\n        },\n        showWithinBounds: (apis, component, anchor, thing, bounds) => {\n          apis.showWithinBounds(component, anchor, thing, bounds);\n        },\n        showMenuAt: (apis, component, anchor, menuSpec) => {\n          apis.showMenuAt(component, anchor, menuSpec);\n        },\n        showMenuWithinBounds: (apis, component, anchor, menuSpec, bounds) => {\n          apis.showMenuWithinBounds(component, anchor, menuSpec, bounds);\n        },\n        hide: (apis, component) => {\n          apis.hide(component);\n        },\n        isOpen: (apis, component) => apis.isOpen(component),\n        getContent: (apis, component) => apis.getContent(component),\n        setContent: (apis, component, thing) => {\n          apis.setContent(component, thing);\n        },\n        reposition: (apis, component) => {\n          apis.reposition(component);\n        }\n      }\n    });\n\n    var global$9 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    const factory$l = detail => {\n      const events = events$a(detail.action);\n      const tag = detail.dom.tag;\n      const lookupAttr = attr => get$g(detail.dom, 'attributes').bind(attrs => get$g(attrs, attr));\n      const getModAttributes = () => {\n        if (tag === 'button') {\n          const type = lookupAttr('type').getOr('button');\n          const roleAttrs = lookupAttr('role').map(role => ({ role })).getOr({});\n          return {\n            type,\n            ...roleAttrs\n          };\n        } else {\n          const role = lookupAttr('role').getOr('button');\n          return { role };\n        }\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: detail.components,\n        events,\n        behaviours: SketchBehaviours.augment(detail.buttonBehaviours, [\n          Focusing.config({}),\n          Keying.config({\n            mode: 'execution',\n            useSpace: true,\n            useEnter: true\n          })\n        ]),\n        domModification: { attributes: getModAttributes() },\n        eventOrder: detail.eventOrder\n      };\n    };\n    const Button = single({\n      name: 'Button',\n      factory: factory$l,\n      configFields: [\n        defaulted('uid', undefined),\n        required$1('dom'),\n        defaulted('components', []),\n        SketchBehaviours.field('buttonBehaviours', [\n          Focusing,\n          Keying\n        ]),\n        option$3('action'),\n        option$3('role'),\n        defaulted('eventOrder', {})\n      ]\n    });\n\n    const record = spec => {\n      const uid = isSketchSpec(spec) && hasNonNullableKey(spec, 'uid') ? spec.uid : generate$5('memento');\n      const get = anyInSystem => anyInSystem.getSystem().getByUid(uid).getOrDie();\n      const getOpt = anyInSystem => anyInSystem.getSystem().getByUid(uid).toOptional();\n      const asSpec = () => ({\n        ...spec,\n        uid\n      });\n      return {\n        get,\n        getOpt,\n        asSpec\n      };\n    };\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    const rtlTransform = {\n      'indent': true,\n      'outdent': true,\n      'table-insert-column-after': true,\n      'table-insert-column-before': true,\n      'paste-column-after': true,\n      'paste-column-before': true,\n      'unordered-list': true,\n      'list-bull-circle': true,\n      'list-bull-default': true,\n      'list-bull-square': true\n    };\n    const defaultIconName = 'temporary-placeholder';\n    const defaultIcon = icons => () => get$g(icons, defaultIconName).getOr('!not found!');\n    const getIconName = (name, icons) => {\n      const lcName = name.toLowerCase();\n      if (global$8.isRtl()) {\n        const rtlName = ensureTrailing(lcName, '-rtl');\n        return has$2(icons, rtlName) ? rtlName : lcName;\n      } else {\n        return lcName;\n      }\n    };\n    const lookupIcon = (name, icons) => get$g(icons, getIconName(name, icons));\n    const get$2 = (name, iconProvider) => {\n      const icons = iconProvider();\n      return lookupIcon(name, icons).getOrThunk(defaultIcon(icons));\n    };\n    const getOr = (name, iconProvider, fallbackIcon) => {\n      const icons = iconProvider();\n      return lookupIcon(name, icons).or(fallbackIcon).getOrThunk(defaultIcon(icons));\n    };\n    const needsRtlTransform = iconName => global$8.isRtl() ? has$2(rtlTransform, iconName) : false;\n    const addFocusableBehaviour = () => config('add-focusable', [runOnAttached(comp => {\n        child(comp.element, 'svg').each(svg => set$9(svg, 'focusable', 'false'));\n      })]);\n    const renderIcon$2 = (spec, iconName, icons, fallbackIcon) => {\n      var _a, _b;\n      const rtlIconClasses = needsRtlTransform(iconName) ? ['tox-icon--flip'] : [];\n      const iconHtml = get$g(icons, getIconName(iconName, icons)).or(fallbackIcon).getOrThunk(defaultIcon(icons));\n      return {\n        dom: {\n          tag: spec.tag,\n          attributes: (_a = spec.attributes) !== null && _a !== void 0 ? _a : {},\n          classes: spec.classes.concat(rtlIconClasses),\n          innerHtml: iconHtml\n        },\n        behaviours: derive$1([\n          ...(_b = spec.behaviours) !== null && _b !== void 0 ? _b : [],\n          addFocusableBehaviour()\n        ])\n      };\n    };\n    const render$3 = (iconName, spec, iconProvider, fallbackIcon = Optional.none()) => renderIcon$2(spec, iconName, iconProvider(), fallbackIcon);\n    const renderFirst = (iconNames, spec, iconProvider) => {\n      const icons = iconProvider();\n      const iconName = find$5(iconNames, name => has$2(icons, getIconName(name, icons)));\n      return renderIcon$2(spec, iconName.getOr(defaultIconName), icons, Optional.none());\n    };\n\n    const notificationIconMap = {\n      success: 'checkmark',\n      error: 'warning',\n      err: 'error',\n      warning: 'warning',\n      warn: 'warning',\n      info: 'info'\n    };\n    const factory$k = detail => {\n      const memBannerText = record({\n        dom: {\n          tag: 'p',\n          innerHtml: detail.translationProvider(detail.text)\n        },\n        behaviours: derive$1([Replacing.config({})])\n      });\n      const renderPercentBar = percent => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-bar'],\n          styles: { width: `${ percent }%` }\n        }\n      });\n      const renderPercentText = percent => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-text'],\n          innerHtml: `${ percent }%`\n        }\n      });\n      const memBannerProgress = record({\n        dom: {\n          tag: 'div',\n          classes: detail.progress ? [\n            'tox-progress-bar',\n            'tox-progress-indicator'\n          ] : ['tox-progress-bar']\n        },\n        components: [\n          {\n            dom: {\n              tag: 'div',\n              classes: ['tox-bar-container']\n            },\n            components: [renderPercentBar(0)]\n          },\n          renderPercentText(0)\n        ],\n        behaviours: derive$1([Replacing.config({})])\n      });\n      const updateProgress = (comp, percent) => {\n        if (comp.getSystem().isConnected()) {\n          memBannerProgress.getOpt(comp).each(progress => {\n            Replacing.set(progress, [\n              {\n                dom: {\n                  tag: 'div',\n                  classes: ['tox-bar-container']\n                },\n                components: [renderPercentBar(percent)]\n              },\n              renderPercentText(percent)\n            ]);\n          });\n        }\n      };\n      const updateText = (comp, text) => {\n        if (comp.getSystem().isConnected()) {\n          const banner = memBannerText.get(comp);\n          Replacing.set(banner, [text$1(text)]);\n        }\n      };\n      const apis = {\n        updateProgress,\n        updateText\n      };\n      const iconChoices = flatten([\n        detail.icon.toArray(),\n        detail.level.toArray(),\n        detail.level.bind(level => Optional.from(notificationIconMap[level])).toArray()\n      ]);\n      const memButton = record(Button.sketch({\n        dom: {\n          tag: 'button',\n          classes: [\n            'tox-notification__dismiss',\n            'tox-button',\n            'tox-button--naked',\n            'tox-button--icon'\n          ]\n        },\n        components: [render$3('close', {\n            tag: 'div',\n            classes: ['tox-icon'],\n            attributes: { 'aria-label': detail.translationProvider('Close') }\n          }, detail.iconProvider)],\n        action: comp => {\n          detail.onAction(comp);\n        }\n      }));\n      const notificationIconSpec = renderFirst(iconChoices, {\n        tag: 'div',\n        classes: ['tox-notification__icon']\n      }, detail.iconProvider);\n      const notificationBodySpec = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-notification__body']\n        },\n        components: [memBannerText.asSpec()],\n        behaviours: derive$1([Replacing.config({})])\n      };\n      const components = [\n        notificationIconSpec,\n        notificationBodySpec\n      ];\n      return {\n        uid: detail.uid,\n        dom: {\n          tag: 'div',\n          attributes: { role: 'alert' },\n          classes: detail.level.map(level => [\n            'tox-notification',\n            'tox-notification--in',\n            `tox-notification--${ level }`\n          ]).getOr([\n            'tox-notification',\n            'tox-notification--in'\n          ])\n        },\n        behaviours: derive$1([\n          Focusing.config({}),\n          config('notification-events', [run$1(focusin(), comp => {\n              memButton.getOpt(comp).each(Focusing.focus);\n            })])\n        ]),\n        components: components.concat(detail.progress ? [memBannerProgress.asSpec()] : []).concat(!detail.closeButton ? [] : [memButton.asSpec()]),\n        apis\n      };\n    };\n    const Notification = single({\n      name: 'Notification',\n      factory: factory$k,\n      configFields: [\n        option$3('level'),\n        required$1('progress'),\n        option$3('icon'),\n        required$1('onAction'),\n        required$1('text'),\n        required$1('iconProvider'),\n        required$1('translationProvider'),\n        defaultedBoolean('closeButton', true)\n      ],\n      apis: {\n        updateProgress: (apis, comp, percent) => {\n          apis.updateProgress(comp, percent);\n        },\n        updateText: (apis, comp, text) => {\n          apis.updateText(comp, text);\n        }\n      }\n    });\n\n    var NotificationManagerImpl = (editor, extras, uiMothership) => {\n      const sharedBackstage = extras.backstage.shared;\n      const getBounds = () => {\n        const contentArea = box$1(SugarElement.fromDom(editor.getContentAreaContainer()));\n        const win$1 = win();\n        const x = clamp(win$1.x, contentArea.x, contentArea.right);\n        const y = clamp(win$1.y, contentArea.y, contentArea.bottom);\n        const right = Math.max(contentArea.right, win$1.right);\n        const bottom = Math.max(contentArea.bottom, win$1.bottom);\n        return Optional.some(bounds(x, y, right - x, bottom - y));\n      };\n      const open = (settings, closeCallback) => {\n        const close = () => {\n          closeCallback();\n          InlineView.hide(notificationWrapper);\n        };\n        const notification = build$1(Notification.sketch({\n          text: settings.text,\n          level: contains$2([\n            'success',\n            'error',\n            'warning',\n            'warn',\n            'info'\n          ], settings.type) ? settings.type : undefined,\n          progress: settings.progressBar === true,\n          icon: settings.icon,\n          closeButton: settings.closeButton,\n          onAction: close,\n          iconProvider: sharedBackstage.providers.icons,\n          translationProvider: sharedBackstage.providers.translate\n        }));\n        const notificationWrapper = build$1(InlineView.sketch({\n          dom: {\n            tag: 'div',\n            classes: ['tox-notifications-container']\n          },\n          lazySink: sharedBackstage.getSink,\n          fireDismissalEventInstead: {},\n          ...sharedBackstage.header.isPositionedAtTop() ? {} : { fireRepositionEventInstead: {} }\n        }));\n        uiMothership.add(notificationWrapper);\n        if (isNumber(settings.timeout) && settings.timeout > 0) {\n          global$9.setEditorTimeout(editor, () => {\n            close();\n          }, settings.timeout);\n        }\n        const reposition = () => {\n          const notificationSpec = premade(notification);\n          const anchorOverrides = { maxHeightFunction: expandable$1() };\n          const allNotifications = editor.notificationManager.getNotifications();\n          if (allNotifications[0] === thisNotification) {\n            const anchor = {\n              ...sharedBackstage.anchors.banner(),\n              overrides: anchorOverrides\n            };\n            InlineView.showWithinBounds(notificationWrapper, notificationSpec, { anchor }, getBounds);\n          } else {\n            indexOf(allNotifications, thisNotification).each(idx => {\n              const previousNotification = allNotifications[idx - 1].getEl();\n              const nodeAnchor = {\n                type: 'node',\n                root: body(),\n                node: Optional.some(SugarElement.fromDom(previousNotification)),\n                overrides: anchorOverrides,\n                layouts: {\n                  onRtl: () => [south$2],\n                  onLtr: () => [south$2]\n                }\n              };\n              InlineView.showWithinBounds(notificationWrapper, notificationSpec, { anchor: nodeAnchor }, getBounds);\n            });\n          }\n        };\n        const thisNotification = {\n          close,\n          reposition,\n          text: nuText => {\n            Notification.updateText(notification, nuText);\n          },\n          settings,\n          getEl: () => notification.element.dom,\n          progressBar: {\n            value: percent => {\n              Notification.updateProgress(notification, percent);\n            }\n          }\n        };\n        return thisNotification;\n      };\n      const close = notification => {\n        notification.close();\n      };\n      const getArgs = notification => {\n        return notification.settings;\n      };\n      return {\n        open,\n        close,\n        getArgs\n      };\n    };\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var ToolbarMode$1;\n    (function (ToolbarMode) {\n      ToolbarMode['default'] = 'wrap';\n      ToolbarMode['floating'] = 'floating';\n      ToolbarMode['sliding'] = 'sliding';\n      ToolbarMode['scrolling'] = 'scrolling';\n    }(ToolbarMode$1 || (ToolbarMode$1 = {})));\n    var ToolbarLocation$1;\n    (function (ToolbarLocation) {\n      ToolbarLocation['auto'] = 'auto';\n      ToolbarLocation['top'] = 'top';\n      ToolbarLocation['bottom'] = 'bottom';\n    }(ToolbarLocation$1 || (ToolbarLocation$1 = {})));\n    const option$2 = name => editor => editor.options.get(name);\n    const wrapOptional = fn => editor => Optional.from(fn(editor));\n    const register$e = editor => {\n      const isPhone = global$5.deviceType.isPhone();\n      const isMobile = global$5.deviceType.isTablet() || isPhone;\n      const registerOption = editor.options.register;\n      const stringOrFalseProcessor = value => isString(value) || value === false;\n      const stringOrNumberProcessor = value => isString(value) || isNumber(value);\n      registerOption('skin', {\n        processor: value => isString(value) || value === false,\n        default: 'oxide'\n      });\n      registerOption('skin_url', { processor: 'string' });\n      registerOption('height', {\n        processor: stringOrNumberProcessor,\n        default: Math.max(editor.getElement().offsetHeight, 400)\n      });\n      registerOption('width', {\n        processor: stringOrNumberProcessor,\n        default: global$7.DOM.getStyle(editor.getElement(), 'width')\n      });\n      registerOption('min_height', {\n        processor: 'number',\n        default: 100\n      });\n      registerOption('min_width', { processor: 'number' });\n      registerOption('max_height', { processor: 'number' });\n      registerOption('max_width', { processor: 'number' });\n      registerOption('style_formats', { processor: 'object[]' });\n      registerOption('style_formats_merge', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('style_formats_autohide', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('line_height_formats', {\n        processor: 'string',\n        default: '1 1.1 1.2 1.3 1.4 1.5 2'\n      });\n      registerOption('font_family_formats', {\n        processor: 'string',\n        default: 'Andale Mono=andale mono,monospace;' + 'Arial=arial,helvetica,sans-serif;' + 'Arial Black=arial black,sans-serif;' + 'Book Antiqua=book antiqua,palatino,serif;' + 'Comic Sans MS=comic sans ms,sans-serif;' + 'Courier New=courier new,courier,monospace;' + 'Georgia=georgia,palatino,serif;' + 'Helvetica=helvetica,arial,sans-serif;' + 'Impact=impact,sans-serif;' + 'Symbol=symbol;' + 'Tahoma=tahoma,arial,helvetica,sans-serif;' + 'Terminal=terminal,monaco,monospace;' + 'Times New Roman=times new roman,times,serif;' + 'Trebuchet MS=trebuchet ms,geneva,sans-serif;' + 'Verdana=verdana,geneva,sans-serif;' + 'Webdings=webdings;' + 'Wingdings=wingdings,zapf dingbats'\n      });\n      registerOption('font_size_formats', {\n        processor: 'string',\n        default: '8pt 10pt 12pt 14pt 18pt 24pt 36pt'\n      });\n      registerOption('block_formats', {\n        processor: 'string',\n        default: 'Paragraph=p;' + 'Heading 1=h1;' + 'Heading 2=h2;' + 'Heading 3=h3;' + 'Heading 4=h4;' + 'Heading 5=h5;' + 'Heading 6=h6;' + 'Preformatted=pre'\n      });\n      registerOption('content_langs', { processor: 'object[]' });\n      registerOption('removed_menuitems', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('menubar', {\n        processor: value => isString(value) || isBoolean(value),\n        default: !isPhone\n      });\n      registerOption('menu', {\n        processor: 'object',\n        default: {}\n      });\n      registerOption('toolbar', {\n        processor: value => {\n          if (isBoolean(value) || isString(value) || isArray(value)) {\n            return {\n              value,\n              valid: true\n            };\n          } else {\n            return {\n              valid: false,\n              message: 'Must be a boolean, string or array.'\n            };\n          }\n        },\n        default: true\n      });\n      range$2(9, num => {\n        registerOption('toolbar' + (num + 1), { processor: 'string' });\n      });\n      registerOption('toolbar_mode', {\n        processor: 'string',\n        default: isMobile ? 'scrolling' : 'floating'\n      });\n      registerOption('toolbar_groups', {\n        processor: 'object',\n        default: {}\n      });\n      registerOption('toolbar_location', {\n        processor: 'string',\n        default: ToolbarLocation$1.auto\n      });\n      registerOption('toolbar_persist', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('toolbar_sticky', {\n        processor: 'boolean',\n        default: editor.inline\n      });\n      registerOption('toolbar_sticky_offset', {\n        processor: 'number',\n        default: 0\n      });\n      registerOption('fixed_toolbar_container', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('fixed_toolbar_container_target', { processor: 'object' });\n      registerOption('file_picker_callback', { processor: 'function' });\n      registerOption('file_picker_validator_handler', { processor: 'function' });\n      registerOption('file_picker_types', { processor: 'string' });\n      registerOption('typeahead_urls', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('anchor_top', {\n        processor: stringOrFalseProcessor,\n        default: '#top'\n      });\n      registerOption('anchor_bottom', {\n        processor: stringOrFalseProcessor,\n        default: '#bottom'\n      });\n      registerOption('draggable_modal', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('statusbar', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('elementpath', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('branding', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('promotion', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('resize', {\n        processor: value => value === 'both' || isBoolean(value),\n        default: !global$5.deviceType.isTouch()\n      });\n      registerOption('sidebar_show', { processor: 'string' });\n    };\n    const isReadOnly = option$2('readonly');\n    const getHeightOption = option$2('height');\n    const getWidthOption = option$2('width');\n    const getMinWidthOption = wrapOptional(option$2('min_width'));\n    const getMinHeightOption = wrapOptional(option$2('min_height'));\n    const getMaxWidthOption = wrapOptional(option$2('max_width'));\n    const getMaxHeightOption = wrapOptional(option$2('max_height'));\n    const getUserStyleFormats = wrapOptional(option$2('style_formats'));\n    const shouldMergeStyleFormats = option$2('style_formats_merge');\n    const shouldAutoHideStyleFormats = option$2('style_formats_autohide');\n    const getContentLanguages = option$2('content_langs');\n    const getRemovedMenuItems = option$2('removed_menuitems');\n    const getToolbarMode = option$2('toolbar_mode');\n    const getToolbarGroups = option$2('toolbar_groups');\n    const getToolbarLocation = option$2('toolbar_location');\n    const fixedContainerSelector = option$2('fixed_toolbar_container');\n    const fixedToolbarContainerTarget = option$2('fixed_toolbar_container_target');\n    const isToolbarPersist = option$2('toolbar_persist');\n    const getStickyToolbarOffset = option$2('toolbar_sticky_offset');\n    const getMenubar = option$2('menubar');\n    const getToolbar = option$2('toolbar');\n    const getFilePickerCallback = option$2('file_picker_callback');\n    const getFilePickerValidatorHandler = option$2('file_picker_validator_handler');\n    const getFilePickerTypes = option$2('file_picker_types');\n    const useTypeaheadUrls = option$2('typeahead_urls');\n    const getAnchorTop = option$2('anchor_top');\n    const getAnchorBottom = option$2('anchor_bottom');\n    const isDraggableModal$1 = option$2('draggable_modal');\n    const useStatusBar = option$2('statusbar');\n    const useElementPath = option$2('elementpath');\n    const useBranding = option$2('branding');\n    const getResize = option$2('resize');\n    const getPasteAsText = option$2('paste_as_text');\n    const getSidebarShow = option$2('sidebar_show');\n    const promotionEnabled = option$2('promotion');\n    const isSkinDisabled = editor => editor.options.get('skin') === false;\n    const isMenubarEnabled = editor => editor.options.get('menubar') !== false;\n    const getSkinUrl = editor => {\n      const skinUrl = editor.options.get('skin_url');\n      if (isSkinDisabled(editor)) {\n        return skinUrl;\n      } else {\n        if (skinUrl) {\n          return editor.documentBaseURI.toAbsolute(skinUrl);\n        } else {\n          const skin = editor.options.get('skin');\n          return global$6.baseURL + '/skins/ui/' + skin;\n        }\n      }\n    };\n    const getLineHeightFormats = editor => editor.options.get('line_height_formats').split(' ');\n    const isToolbarEnabled = editor => {\n      const toolbar = getToolbar(editor);\n      const isToolbarString = isString(toolbar);\n      const isToolbarObjectArray = isArray(toolbar) && toolbar.length > 0;\n      return !isMultipleToolbars(editor) && (isToolbarObjectArray || isToolbarString || toolbar === true);\n    };\n    const getMultipleToolbarsOption = editor => {\n      const toolbars = range$2(9, num => editor.options.get('toolbar' + (num + 1)));\n      const toolbarArray = filter$2(toolbars, isString);\n      return someIf(toolbarArray.length > 0, toolbarArray);\n    };\n    const isMultipleToolbars = editor => getMultipleToolbarsOption(editor).fold(() => {\n      const toolbar = getToolbar(editor);\n      return isArrayOf(toolbar, isString) && toolbar.length > 0;\n    }, always);\n    const isToolbarLocationBottom = editor => getToolbarLocation(editor) === ToolbarLocation$1.bottom;\n    const fixedContainerTarget = editor => {\n      var _a;\n      if (!editor.inline) {\n        return Optional.none();\n      }\n      const selector = (_a = fixedContainerSelector(editor)) !== null && _a !== void 0 ? _a : '';\n      if (selector.length > 0) {\n        return descendant(body(), selector);\n      }\n      const element = fixedToolbarContainerTarget(editor);\n      if (isNonNullable(element)) {\n        return Optional.some(SugarElement.fromDom(element));\n      }\n      return Optional.none();\n    };\n    const useFixedContainer = editor => editor.inline && fixedContainerTarget(editor).isSome();\n    const getUiContainer = editor => {\n      const fixedContainer = fixedContainerTarget(editor);\n      return fixedContainer.getOrThunk(() => getContentContainer(getRootNode(SugarElement.fromDom(editor.getElement()))));\n    };\n    const isDistractionFree = editor => editor.inline && !isMenubarEnabled(editor) && !isToolbarEnabled(editor) && !isMultipleToolbars(editor);\n    const isStickyToolbar = editor => {\n      const isStickyToolbar = editor.options.get('toolbar_sticky');\n      return (isStickyToolbar || editor.inline) && !useFixedContainer(editor) && !isDistractionFree(editor);\n    };\n    const getMenus = editor => {\n      const menu = editor.options.get('menu');\n      return map$1(menu, menu => ({\n        ...menu,\n        items: menu.items\n      }));\n    };\n\n    var Options = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        get ToolbarMode () { return ToolbarMode$1; },\n        get ToolbarLocation () { return ToolbarLocation$1; },\n        register: register$e,\n        getSkinUrl: getSkinUrl,\n        isReadOnly: isReadOnly,\n        isSkinDisabled: isSkinDisabled,\n        getHeightOption: getHeightOption,\n        getWidthOption: getWidthOption,\n        getMinWidthOption: getMinWidthOption,\n        getMinHeightOption: getMinHeightOption,\n        getMaxWidthOption: getMaxWidthOption,\n        getMaxHeightOption: getMaxHeightOption,\n        getUserStyleFormats: getUserStyleFormats,\n        shouldMergeStyleFormats: shouldMergeStyleFormats,\n        shouldAutoHideStyleFormats: shouldAutoHideStyleFormats,\n        getLineHeightFormats: getLineHeightFormats,\n        getContentLanguages: getContentLanguages,\n        getRemovedMenuItems: getRemovedMenuItems,\n        isMenubarEnabled: isMenubarEnabled,\n        isMultipleToolbars: isMultipleToolbars,\n        isToolbarEnabled: isToolbarEnabled,\n        isToolbarPersist: isToolbarPersist,\n        getMultipleToolbarsOption: getMultipleToolbarsOption,\n        getUiContainer: getUiContainer,\n        useFixedContainer: useFixedContainer,\n        getToolbarMode: getToolbarMode,\n        isDraggableModal: isDraggableModal$1,\n        isDistractionFree: isDistractionFree,\n        isStickyToolbar: isStickyToolbar,\n        getStickyToolbarOffset: getStickyToolbarOffset,\n        getToolbarLocation: getToolbarLocation,\n        isToolbarLocationBottom: isToolbarLocationBottom,\n        getToolbarGroups: getToolbarGroups,\n        getMenus: getMenus,\n        getMenubar: getMenubar,\n        getToolbar: getToolbar,\n        getFilePickerCallback: getFilePickerCallback,\n        getFilePickerTypes: getFilePickerTypes,\n        useTypeaheadUrls: useTypeaheadUrls,\n        getAnchorTop: getAnchorTop,\n        getAnchorBottom: getAnchorBottom,\n        getFilePickerValidatorHandler: getFilePickerValidatorHandler,\n        useStatusBar: useStatusBar,\n        useElementPath: useElementPath,\n        promotionEnabled: promotionEnabled,\n        useBranding: useBranding,\n        getResize: getResize,\n        getPasteAsText: getPasteAsText,\n        getSidebarShow: getSidebarShow\n    });\n\n    const autocompleteSelector = '[data-mce-autocompleter]';\n    const detect = elm => closest$1(elm, autocompleteSelector);\n    const findIn = elm => descendant(elm, autocompleteSelector);\n\n    const setup$e = (api, editor) => {\n      const redirectKeyToItem = (item, e) => {\n        emitWith(item, keydown(), { raw: e });\n      };\n      const getItem = () => api.getMenu().bind(Highlighting.getHighlighted);\n      editor.on('keydown', e => {\n        const keyCode = e.which;\n        if (!api.isActive()) {\n          return;\n        }\n        if (api.isMenuOpen()) {\n          if (keyCode === 13) {\n            getItem().each(emitExecute);\n            e.preventDefault();\n          } else if (keyCode === 40) {\n            getItem().fold(() => {\n              api.getMenu().each(Highlighting.highlightFirst);\n            }, item => {\n              redirectKeyToItem(item, e);\n            });\n            e.preventDefault();\n            e.stopImmediatePropagation();\n          } else if (keyCode === 37 || keyCode === 38 || keyCode === 39) {\n            getItem().each(item => {\n              redirectKeyToItem(item, e);\n              e.preventDefault();\n              e.stopImmediatePropagation();\n            });\n          }\n        } else {\n          if (keyCode === 13 || keyCode === 38 || keyCode === 40) {\n            api.cancelIfNecessary();\n          }\n        }\n      });\n      editor.on('NodeChange', e => {\n        if (api.isActive() && !api.isProcessingAction() && detect(SugarElement.fromDom(e.element)).isNone()) {\n          api.cancelIfNecessary();\n        }\n      });\n    };\n    const AutocompleterEditorEvents = { setup: setup$e };\n\n    var ItemResponse;\n    (function (ItemResponse) {\n      ItemResponse[ItemResponse['CLOSE_ON_EXECUTE'] = 0] = 'CLOSE_ON_EXECUTE';\n      ItemResponse[ItemResponse['BUBBLE_TO_SANDBOX'] = 1] = 'BUBBLE_TO_SANDBOX';\n    }(ItemResponse || (ItemResponse = {})));\n    var ItemResponse$1 = ItemResponse;\n\n    const navClass = 'tox-menu-nav__js';\n    const selectableClass = 'tox-collection__item';\n    const colorClass = 'tox-swatch';\n    const presetClasses = {\n      normal: navClass,\n      color: colorClass\n    };\n    const tickedClass = 'tox-collection__item--enabled';\n    const groupHeadingClass = 'tox-collection__group-heading';\n    const iconClass = 'tox-collection__item-icon';\n    const textClass = 'tox-collection__item-label';\n    const accessoryClass = 'tox-collection__item-accessory';\n    const caretClass = 'tox-collection__item-caret';\n    const checkmarkClass = 'tox-collection__item-checkmark';\n    const activeClass = 'tox-collection__item--active';\n    const containerClass = 'tox-collection__item-container';\n    const containerColumnClass = 'tox-collection__item-container--column';\n    const containerRowClass = 'tox-collection__item-container--row';\n    const containerAlignRightClass = 'tox-collection__item-container--align-right';\n    const containerAlignLeftClass = 'tox-collection__item-container--align-left';\n    const containerValignTopClass = 'tox-collection__item-container--valign-top';\n    const containerValignMiddleClass = 'tox-collection__item-container--valign-middle';\n    const containerValignBottomClass = 'tox-collection__item-container--valign-bottom';\n    const classForPreset = presets => get$g(presetClasses, presets).getOr(navClass);\n\n    const forMenu = presets => {\n      if (presets === 'color') {\n        return 'tox-swatches';\n      } else {\n        return 'tox-menu';\n      }\n    };\n    const classes = presets => ({\n      backgroundMenu: 'tox-background-menu',\n      selectedMenu: 'tox-selected-menu',\n      selectedItem: 'tox-collection__item--active',\n      hasIcons: 'tox-menu--has-icons',\n      menu: forMenu(presets),\n      tieredMenu: 'tox-tiered-menu'\n    });\n\n    const markers = presets => {\n      const menuClasses = classes(presets);\n      return {\n        backgroundMenu: menuClasses.backgroundMenu,\n        selectedMenu: menuClasses.selectedMenu,\n        menu: menuClasses.menu,\n        selectedItem: menuClasses.selectedItem,\n        item: classForPreset(presets)\n      };\n    };\n    const dom$1 = (hasIcons, columns, presets) => {\n      const menuClasses = classes(presets);\n      return {\n        tag: 'div',\n        classes: flatten([\n          [\n            menuClasses.menu,\n            `tox-menu-${ columns }-column`\n          ],\n          hasIcons ? [menuClasses.hasIcons] : []\n        ])\n      };\n    };\n    const components = [Menu.parts.items({})];\n    const part = (hasIcons, columns, presets) => {\n      const menuClasses = classes(presets);\n      const d = {\n        tag: 'div',\n        classes: flatten([[menuClasses.tieredMenu]])\n      };\n      return {\n        dom: d,\n        markers: markers(presets)\n      };\n    };\n\n    const schema$l = constant$1([\n      option$3('data'),\n      defaulted('inputAttributes', {}),\n      defaulted('inputStyles', {}),\n      defaulted('tag', 'input'),\n      defaulted('inputClasses', []),\n      onHandler('onSetValue'),\n      defaulted('styles', {}),\n      defaulted('eventOrder', {}),\n      field('inputBehaviours', [\n        Representing,\n        Focusing\n      ]),\n      defaulted('selectOnFocus', true)\n    ]);\n    const focusBehaviours = detail => derive$1([Focusing.config({\n        onFocus: !detail.selectOnFocus ? noop : component => {\n          const input = component.element;\n          const value = get$6(input);\n          input.dom.setSelectionRange(0, value.length);\n        }\n      })]);\n    const behaviours = detail => ({\n      ...focusBehaviours(detail),\n      ...augment(detail.inputBehaviours, [Representing.config({\n          store: {\n            mode: 'manual',\n            ...detail.data.map(data => ({ initialValue: data })).getOr({}),\n            getValue: input => {\n              return get$6(input.element);\n            },\n            setValue: (input, data) => {\n              const current = get$6(input.element);\n              if (current !== data) {\n                set$5(input.element, data);\n              }\n            }\n          },\n          onSetValue: detail.onSetValue\n        })])\n    });\n    const dom = detail => ({\n      tag: detail.tag,\n      attributes: {\n        type: 'text',\n        ...detail.inputAttributes\n      },\n      styles: detail.inputStyles,\n      classes: detail.inputClasses\n    });\n\n    const factory$j = (detail, _spec) => ({\n      uid: detail.uid,\n      dom: dom(detail),\n      components: [],\n      behaviours: behaviours(detail),\n      eventOrder: detail.eventOrder\n    });\n    const Input = single({\n      name: 'Input',\n      configFields: schema$l(),\n      factory: factory$j\n    });\n\n    const refetchTriggerEvent = generate$6('refetch-trigger-event');\n    const redirectMenuItemInteractionEvent = generate$6('redirect-menu-item-interaction');\n\n    const menuSearcherClass = 'tox-menu__searcher';\n    const findWithinSandbox = sandboxComp => {\n      return descendant(sandboxComp.element, `.${ menuSearcherClass }`).bind(inputElem => sandboxComp.getSystem().getByDom(inputElem).toOptional());\n    };\n    const findWithinMenu = findWithinSandbox;\n    const restoreState = (inputComp, searcherState) => {\n      Representing.setValue(inputComp, searcherState.fetchPattern);\n      inputComp.element.dom.selectionStart = searcherState.selectionStart;\n      inputComp.element.dom.selectionEnd = searcherState.selectionEnd;\n    };\n    const saveState = inputComp => {\n      const fetchPattern = Representing.getValue(inputComp);\n      const selectionStart = inputComp.element.dom.selectionStart;\n      const selectionEnd = inputComp.element.dom.selectionEnd;\n      return {\n        fetchPattern,\n        selectionStart,\n        selectionEnd\n      };\n    };\n    const setActiveDescendant = (inputComp, active) => {\n      getOpt(active.element, 'id').each(id => set$9(inputComp.element, 'aria-activedescendant', id));\n    };\n    const renderMenuSearcher = spec => {\n      const handleByBrowser = (comp, se) => {\n        se.cut();\n        return Optional.none();\n      };\n      const handleByHighlightedItem = (comp, se) => {\n        const eventData = {\n          interactionEvent: se.event,\n          eventType: se.event.raw.type\n        };\n        emitWith(comp, redirectMenuItemInteractionEvent, eventData);\n        return Optional.some(true);\n      };\n      const customSearcherEventsName = 'searcher-events';\n      return {\n        dom: {\n          tag: 'div',\n          classes: [selectableClass]\n        },\n        components: [Input.sketch({\n            inputClasses: [\n              menuSearcherClass,\n              'tox-textfield'\n            ],\n            inputAttributes: {\n              ...spec.placeholder.map(placeholder => ({ placeholder: spec.i18n(placeholder) })).getOr({}),\n              'type': 'search',\n              'aria-autocomplete': 'list'\n            },\n            inputBehaviours: derive$1([\n              config(customSearcherEventsName, [\n                run$1(input(), inputComp => {\n                  emit(inputComp, refetchTriggerEvent);\n                }),\n                run$1(keydown(), (inputComp, se) => {\n                  if (se.event.raw.key === 'Escape') {\n                    se.stop();\n                  }\n                })\n              ]),\n              Keying.config({\n                mode: 'special',\n                onLeft: handleByBrowser,\n                onRight: handleByBrowser,\n                onSpace: handleByBrowser,\n                onEnter: handleByHighlightedItem,\n                onEscape: handleByHighlightedItem,\n                onUp: handleByHighlightedItem,\n                onDown: handleByHighlightedItem\n              })\n            ]),\n            eventOrder: {\n              keydown: [\n                customSearcherEventsName,\n                Keying.name()\n              ]\n            }\n          })]\n      };\n    };\n\n    const searchResultsClass = 'tox-collection--results__js';\n    const augmentWithAria = item => {\n      var _a;\n      if (item.dom) {\n        return {\n          ...item,\n          dom: {\n            ...item.dom,\n            attributes: {\n              ...(_a = item.dom.attributes) !== null && _a !== void 0 ? _a : {},\n              'id': generate$6('aria-item-search-result-id'),\n              'aria-selected': 'false'\n            }\n          }\n        };\n      } else {\n        return item;\n      }\n    };\n\n    const chunk = (rowDom, numColumns) => items => {\n      const chunks = chunk$1(items, numColumns);\n      return map$2(chunks, c => ({\n        dom: rowDom,\n        components: c\n      }));\n    };\n    const forSwatch = columns => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-menu',\n          'tox-swatches-menu'\n        ]\n      },\n      components: [{\n          dom: {\n            tag: 'div',\n            classes: ['tox-swatches']\n          },\n          components: [Menu.parts.items({\n              preprocess: columns !== 'auto' ? chunk({\n                tag: 'div',\n                classes: ['tox-swatches__row']\n              }, columns) : identity\n            })]\n        }]\n    });\n    const forToolbar = columns => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-menu',\n          'tox-collection',\n          'tox-collection--toolbar',\n          'tox-collection--toolbar-lg'\n        ]\n      },\n      components: [Menu.parts.items({\n          preprocess: chunk({\n            tag: 'div',\n            classes: ['tox-collection__group']\n          }, columns)\n        })]\n    });\n    const preprocessCollection = (items, isSeparator) => {\n      const allSplits = [];\n      let currentSplit = [];\n      each$1(items, (item, i) => {\n        if (isSeparator(item, i)) {\n          if (currentSplit.length > 0) {\n            allSplits.push(currentSplit);\n          }\n          currentSplit = [];\n          if (has$2(item.dom, 'innerHtml') || item.components && item.components.length > 0) {\n            currentSplit.push(item);\n          }\n        } else {\n          currentSplit.push(item);\n        }\n      });\n      if (currentSplit.length > 0) {\n        allSplits.push(currentSplit);\n      }\n      return map$2(allSplits, s => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-collection__group']\n        },\n        components: s\n      }));\n    };\n    const insertItemsPlaceholder = (columns, initItems, onItem) => {\n      return Menu.parts.items({\n        preprocess: rawItems => {\n          const enrichedItems = map$2(rawItems, onItem);\n          if (columns !== 'auto' && columns > 1) {\n            return chunk({\n              tag: 'div',\n              classes: ['tox-collection__group']\n            }, columns)(enrichedItems);\n          } else {\n            return preprocessCollection(enrichedItems, (_item, i) => initItems[i].type === 'separator');\n          }\n        }\n      });\n    };\n    const forCollection = (columns, initItems, _hasIcons = true) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-menu',\n          'tox-collection'\n        ].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'])\n      },\n      components: [insertItemsPlaceholder(columns, initItems, identity)]\n    });\n    const forCollectionWithSearchResults = (columns, initItems, _hasIcons = true) => {\n      const ariaControlsSearchResults = generate$6('aria-controls-search-results');\n      return {\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-menu',\n            'tox-collection',\n            searchResultsClass\n          ].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid']),\n          attributes: { id: ariaControlsSearchResults }\n        },\n        components: [insertItemsPlaceholder(columns, initItems, augmentWithAria)]\n      };\n    };\n    const forCollectionWithSearchField = (columns, initItems, searchField) => {\n      const ariaControlsSearchResults = generate$6('aria-controls-search-results');\n      return {\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-menu',\n            'tox-collection'\n          ].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'])\n        },\n        components: [\n          renderMenuSearcher({\n            i18n: global$8.translate,\n            placeholder: searchField.placeholder\n          }),\n          {\n            dom: {\n              tag: 'div',\n              classes: [\n                ...columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'],\n                searchResultsClass\n              ],\n              attributes: { id: ariaControlsSearchResults }\n            },\n            components: [insertItemsPlaceholder(columns, initItems, augmentWithAria)]\n          }\n        ]\n      };\n    };\n    const forHorizontalCollection = (initItems, _hasIcons = true) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-collection',\n          'tox-collection--horizontal'\n        ]\n      },\n      components: [Menu.parts.items({ preprocess: items => preprocessCollection(items, (_item, i) => initItems[i].type === 'separator') })]\n    });\n\n    const menuHasIcons = xs => exists(xs, item => 'icon' in item && item.icon !== undefined);\n    const handleError = error => {\n      console.error(formatError(error));\n      console.log(error);\n      return Optional.none();\n    };\n    const createHorizontalPartialMenuWithAlloyItems = (value, _hasIcons, items, _columns, _menuLayout) => {\n      const structure = forHorizontalCollection(items);\n      return {\n        value,\n        dom: structure.dom,\n        components: structure.components,\n        items\n      };\n    };\n    const createPartialMenuWithAlloyItems = (value, hasIcons, items, columns, menuLayout) => {\n      const getNormalStructure = () => {\n        if (menuLayout.menuType !== 'searchable') {\n          return forCollection(columns, items);\n        } else {\n          return menuLayout.searchMode.searchMode === 'search-with-field' ? forCollectionWithSearchField(columns, items, menuLayout.searchMode) : forCollectionWithSearchResults(columns, items);\n        }\n      };\n      if (menuLayout.menuType === 'color') {\n        const structure = forSwatch(columns);\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else if (menuLayout.menuType === 'normal' && columns === 'auto') {\n        const structure = forCollection(columns, items);\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else if (menuLayout.menuType === 'normal' || menuLayout.menuType === 'searchable') {\n        const structure = getNormalStructure();\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else if (menuLayout.menuType === 'listpreview' && columns !== 'auto') {\n        const structure = forToolbar(columns);\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else {\n        return {\n          value,\n          dom: dom$1(hasIcons, columns, menuLayout.menuType),\n          components: components,\n          items\n        };\n      }\n    };\n\n    const type = requiredString('type');\n    const name$1 = requiredString('name');\n    const label = requiredString('label');\n    const text = requiredString('text');\n    const title = requiredString('title');\n    const icon = requiredString('icon');\n    const value$1 = requiredString('value');\n    const fetch$1 = requiredFunction('fetch');\n    const getSubmenuItems = requiredFunction('getSubmenuItems');\n    const onAction = requiredFunction('onAction');\n    const onItemAction = requiredFunction('onItemAction');\n    const onSetup = defaultedFunction('onSetup', () => noop);\n    const optionalName = optionString('name');\n    const optionalText = optionString('text');\n    const optionalIcon = optionString('icon');\n    const optionalTooltip = optionString('tooltip');\n    const optionalLabel = optionString('label');\n    const optionalShortcut = optionString('shortcut');\n    const optionalSelect = optionFunction('select');\n    const active = defaultedBoolean('active', false);\n    const borderless = defaultedBoolean('borderless', false);\n    const enabled = defaultedBoolean('enabled', true);\n    const primary = defaultedBoolean('primary', false);\n    const defaultedColumns = num => defaulted('columns', num);\n    const defaultedMeta = defaulted('meta', {});\n    const defaultedOnAction = defaultedFunction('onAction', noop);\n    const defaultedType = type => defaultedString('type', type);\n    const generatedName = namePrefix => field$1('name', 'name', defaultedThunk(() => generate$6(`${ namePrefix }-name`)), string);\n    const generatedValue = valuePrefix => field$1('value', 'value', defaultedThunk(() => generate$6(`${ valuePrefix }-value`)), anyValue());\n\n    const separatorMenuItemSchema = objOf([\n      type,\n      optionalText\n    ]);\n    const createSeparatorMenuItem = spec => asRaw('separatormenuitem', separatorMenuItemSchema, spec);\n\n    const autocompleterItemSchema = objOf([\n      defaultedType('autocompleteitem'),\n      active,\n      enabled,\n      defaultedMeta,\n      value$1,\n      optionalText,\n      optionalIcon\n    ]);\n    const createSeparatorItem = spec => asRaw('Autocompleter.Separator', separatorMenuItemSchema, spec);\n    const createAutocompleterItem = spec => asRaw('Autocompleter.Item', autocompleterItemSchema, spec);\n\n    const baseToolbarButtonFields = [\n      enabled,\n      optionalTooltip,\n      optionalIcon,\n      optionalText,\n      onSetup\n    ];\n    const toolbarButtonSchema = objOf([\n      type,\n      onAction\n    ].concat(baseToolbarButtonFields));\n    const createToolbarButton = spec => asRaw('toolbarbutton', toolbarButtonSchema, spec);\n\n    const baseToolbarToggleButtonFields = [active].concat(baseToolbarButtonFields);\n    const toggleButtonSchema = objOf(baseToolbarToggleButtonFields.concat([\n      type,\n      onAction\n    ]));\n    const createToggleButton = spec => asRaw('ToggleButton', toggleButtonSchema, spec);\n\n    const contextBarFields = [\n      defaultedFunction('predicate', never),\n      defaultedStringEnum('scope', 'node', [\n        'node',\n        'editor'\n      ]),\n      defaultedStringEnum('position', 'selection', [\n        'node',\n        'selection',\n        'line'\n      ])\n    ];\n\n    const contextButtonFields = baseToolbarButtonFields.concat([\n      defaultedType('contextformbutton'),\n      primary,\n      onAction,\n      customField('original', identity)\n    ]);\n    const contextToggleButtonFields = baseToolbarToggleButtonFields.concat([\n      defaultedType('contextformbutton'),\n      primary,\n      onAction,\n      customField('original', identity)\n    ]);\n    const launchButtonFields = baseToolbarButtonFields.concat([defaultedType('contextformbutton')]);\n    const launchToggleButtonFields = baseToolbarToggleButtonFields.concat([defaultedType('contextformtogglebutton')]);\n    const toggleOrNormal = choose$1('type', {\n      contextformbutton: contextButtonFields,\n      contextformtogglebutton: contextToggleButtonFields\n    });\n    const contextFormSchema = objOf([\n      defaultedType('contextform'),\n      defaultedFunction('initValue', constant$1('')),\n      optionalLabel,\n      requiredArrayOf('commands', toggleOrNormal),\n      optionOf('launch', choose$1('type', {\n        contextformbutton: launchButtonFields,\n        contextformtogglebutton: launchToggleButtonFields\n      }))\n    ].concat(contextBarFields));\n    const createContextForm = spec => asRaw('ContextForm', contextFormSchema, spec);\n\n    const contextToolbarSchema = objOf([\n      defaultedType('contexttoolbar'),\n      requiredString('items')\n    ].concat(contextBarFields));\n    const createContextToolbar = spec => asRaw('ContextToolbar', contextToolbarSchema, spec);\n\n    const cardImageFields = [\n      type,\n      requiredString('src'),\n      optionString('alt'),\n      defaultedArrayOf('classes', [], string)\n    ];\n    const cardImageSchema = objOf(cardImageFields);\n\n    const cardTextFields = [\n      type,\n      text,\n      optionalName,\n      defaultedArrayOf('classes', ['tox-collection__item-label'], string)\n    ];\n    const cardTextSchema = objOf(cardTextFields);\n\n    const itemSchema$1 = valueThunk(() => choose$2('type', {\n      cardimage: cardImageSchema,\n      cardtext: cardTextSchema,\n      cardcontainer: cardContainerSchema\n    }));\n    const cardContainerSchema = objOf([\n      type,\n      defaultedString('direction', 'horizontal'),\n      defaultedString('align', 'left'),\n      defaultedString('valign', 'middle'),\n      requiredArrayOf('items', itemSchema$1)\n    ]);\n\n    const commonMenuItemFields = [\n      enabled,\n      optionalText,\n      optionalShortcut,\n      generatedValue('menuitem'),\n      defaultedMeta\n    ];\n\n    const cardMenuItemSchema = objOf([\n      type,\n      optionalLabel,\n      requiredArrayOf('items', itemSchema$1),\n      onSetup,\n      defaultedOnAction\n    ].concat(commonMenuItemFields));\n    const createCardMenuItem = spec => asRaw('cardmenuitem', cardMenuItemSchema, spec);\n\n    const choiceMenuItemSchema = objOf([\n      type,\n      active,\n      optionalIcon\n    ].concat(commonMenuItemFields));\n    const createChoiceMenuItem = spec => asRaw('choicemenuitem', choiceMenuItemSchema, spec);\n\n    const baseFields = [\n      type,\n      requiredString('fancytype'),\n      defaultedOnAction\n    ];\n    const insertTableFields = [defaulted('initData', {})].concat(baseFields);\n    const colorSwatchFields = [defaultedObjOf('initData', {}, [\n        defaultedBoolean('allowCustomColors', true),\n        optionArrayOf('colors', anyValue())\n      ])].concat(baseFields);\n    const fancyMenuItemSchema = choose$1('fancytype', {\n      inserttable: insertTableFields,\n      colorswatch: colorSwatchFields\n    });\n    const createFancyMenuItem = spec => asRaw('fancymenuitem', fancyMenuItemSchema, spec);\n\n    const menuItemSchema = objOf([\n      type,\n      onSetup,\n      defaultedOnAction,\n      optionalIcon\n    ].concat(commonMenuItemFields));\n    const createMenuItem = spec => asRaw('menuitem', menuItemSchema, spec);\n\n    const nestedMenuItemSchema = objOf([\n      type,\n      getSubmenuItems,\n      onSetup,\n      optionalIcon\n    ].concat(commonMenuItemFields));\n    const createNestedMenuItem = spec => asRaw('nestedmenuitem', nestedMenuItemSchema, spec);\n\n    const toggleMenuItemSchema = objOf([\n      type,\n      optionalIcon,\n      active,\n      onSetup,\n      onAction\n    ].concat(commonMenuItemFields));\n    const createToggleMenuItem = spec => asRaw('togglemenuitem', toggleMenuItemSchema, spec);\n\n    const detectSize = (comp, margin, selectorClass) => {\n      const descendants$1 = descendants(comp.element, '.' + selectorClass);\n      if (descendants$1.length > 0) {\n        const columnLength = findIndex$1(descendants$1, c => {\n          const thisTop = c.dom.getBoundingClientRect().top;\n          const cTop = descendants$1[0].dom.getBoundingClientRect().top;\n          return Math.abs(thisTop - cTop) > margin;\n        }).getOr(descendants$1.length);\n        return Optional.some({\n          numColumns: columnLength,\n          numRows: Math.ceil(descendants$1.length / columnLength)\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n\n    const namedEvents = (name, handlers) => derive$1([config(name, handlers)]);\n    const unnamedEvents = handlers => namedEvents(generate$6('unnamed-events'), handlers);\n    const SimpleBehaviours = {\n      namedEvents,\n      unnamedEvents\n    };\n\n    const ExclusivityChannel = generate$6('tooltip.exclusive');\n    const ShowTooltipEvent = generate$6('tooltip.show');\n    const HideTooltipEvent = generate$6('tooltip.hide');\n\n    const hideAllExclusive = (component, _tConfig, _tState) => {\n      component.getSystem().broadcastOn([ExclusivityChannel], {});\n    };\n    const setComponents = (component, tConfig, tState, specs) => {\n      tState.getTooltip().each(tooltip => {\n        if (tooltip.getSystem().isConnected()) {\n          Replacing.set(tooltip, specs);\n        }\n      });\n    };\n\n    var TooltippingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        hideAllExclusive: hideAllExclusive,\n        setComponents: setComponents\n    });\n\n    const events$9 = (tooltipConfig, state) => {\n      const hide = comp => {\n        state.getTooltip().each(p => {\n          detach(p);\n          tooltipConfig.onHide(comp, p);\n          state.clearTooltip();\n        });\n        state.clearTimer();\n      };\n      const show = comp => {\n        if (!state.isShowing()) {\n          hideAllExclusive(comp);\n          const sink = tooltipConfig.lazySink(comp).getOrDie();\n          const popup = comp.getSystem().build({\n            dom: tooltipConfig.tooltipDom,\n            components: tooltipConfig.tooltipComponents,\n            events: derive$2(tooltipConfig.mode === 'normal' ? [\n              run$1(mouseover(), _ => {\n                emit(comp, ShowTooltipEvent);\n              }),\n              run$1(mouseout(), _ => {\n                emit(comp, HideTooltipEvent);\n              })\n            ] : []),\n            behaviours: derive$1([Replacing.config({})])\n          });\n          state.setTooltip(popup);\n          attach(sink, popup);\n          tooltipConfig.onShow(comp, popup);\n          Positioning.position(sink, popup, { anchor: tooltipConfig.anchor(comp) });\n        }\n      };\n      return derive$2(flatten([\n        [\n          run$1(ShowTooltipEvent, comp => {\n            state.resetTimer(() => {\n              show(comp);\n            }, tooltipConfig.delay);\n          }),\n          run$1(HideTooltipEvent, comp => {\n            state.resetTimer(() => {\n              hide(comp);\n            }, tooltipConfig.delay);\n          }),\n          run$1(receive(), (comp, message) => {\n            const receivingData = message;\n            if (!receivingData.universal) {\n              if (contains$2(receivingData.channels, ExclusivityChannel)) {\n                hide(comp);\n              }\n            }\n          }),\n          runOnDetached(comp => {\n            hide(comp);\n          })\n        ],\n        tooltipConfig.mode === 'normal' ? [\n          run$1(focusin(), comp => {\n            emit(comp, ShowTooltipEvent);\n          }),\n          run$1(postBlur(), comp => {\n            emit(comp, HideTooltipEvent);\n          }),\n          run$1(mouseover(), comp => {\n            emit(comp, ShowTooltipEvent);\n          }),\n          run$1(mouseout(), comp => {\n            emit(comp, HideTooltipEvent);\n          })\n        ] : [\n          run$1(highlight$1(), (comp, _se) => {\n            emit(comp, ShowTooltipEvent);\n          }),\n          run$1(dehighlight$1(), comp => {\n            emit(comp, HideTooltipEvent);\n          })\n        ]\n      ]));\n    };\n\n    var ActiveTooltipping = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$9\n    });\n\n    var TooltippingSchema = [\n      required$1('lazySink'),\n      required$1('tooltipDom'),\n      defaulted('exclusive', true),\n      defaulted('tooltipComponents', []),\n      defaulted('delay', 300),\n      defaultedStringEnum('mode', 'normal', [\n        'normal',\n        'follow-highlight'\n      ]),\n      defaulted('anchor', comp => ({\n        type: 'hotspot',\n        hotspot: comp,\n        layouts: {\n          onLtr: constant$1([\n            south$2,\n            north$2,\n            southeast$2,\n            northeast$2,\n            southwest$2,\n            northwest$2\n          ]),\n          onRtl: constant$1([\n            south$2,\n            north$2,\n            southeast$2,\n            northeast$2,\n            southwest$2,\n            northwest$2\n          ])\n        }\n      })),\n      onHandler('onHide'),\n      onHandler('onShow')\n    ];\n\n    const init$b = () => {\n      const timer = value$2();\n      const popup = value$2();\n      const clearTimer = () => {\n        timer.on(clearTimeout);\n      };\n      const resetTimer = (f, delay) => {\n        clearTimer();\n        timer.set(setTimeout(f, delay));\n      };\n      const readState = constant$1('not-implemented');\n      return nu$8({\n        getTooltip: popup.get,\n        isShowing: popup.isSet,\n        setTooltip: popup.set,\n        clearTooltip: popup.clear,\n        clearTimer,\n        resetTimer,\n        readState\n      });\n    };\n\n    var TooltippingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$b\n    });\n\n    const Tooltipping = create$3({\n      fields: TooltippingSchema,\n      name: 'tooltipping',\n      active: ActiveTooltipping,\n      state: TooltippingState,\n      apis: TooltippingApis\n    });\n\n    const escape = text => text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n    const ReadOnlyChannel = 'silver.readonly';\n    const ReadOnlyDataSchema = objOf([requiredBoolean('readonly')]);\n    const broadcastReadonly = (uiComponents, readonly) => {\n      const outerContainer = uiComponents.outerContainer;\n      const target = outerContainer.element;\n      if (readonly) {\n        uiComponents.mothership.broadcastOn([dismissPopups()], { target });\n        uiComponents.uiMothership.broadcastOn([dismissPopups()], { target });\n      }\n      uiComponents.mothership.broadcastOn([ReadOnlyChannel], { readonly });\n      uiComponents.uiMothership.broadcastOn([ReadOnlyChannel], { readonly });\n    };\n    const setupReadonlyModeSwitch = (editor, uiComponents) => {\n      editor.on('init', () => {\n        if (editor.mode.isReadOnly()) {\n          broadcastReadonly(uiComponents, true);\n        }\n      });\n      editor.on('SwitchMode', () => broadcastReadonly(uiComponents, editor.mode.isReadOnly()));\n      if (isReadOnly(editor)) {\n        editor.mode.set('readonly');\n      }\n    };\n    const receivingConfig = () => Receiving.config({\n      channels: {\n        [ReadOnlyChannel]: {\n          schema: ReadOnlyDataSchema,\n          onReceive: (comp, data) => {\n            Disabling.set(comp, data.readonly);\n          }\n        }\n      }\n    });\n\n    const item = disabled => Disabling.config({\n      disabled,\n      disableClass: 'tox-collection__item--state-disabled'\n    });\n    const button = disabled => Disabling.config({ disabled });\n    const splitButton = disabled => Disabling.config({\n      disabled,\n      disableClass: 'tox-tbtn--disabled'\n    });\n    const toolbarButton = disabled => Disabling.config({\n      disabled,\n      disableClass: 'tox-tbtn--disabled',\n      useNative: false\n    });\n    const DisablingConfigs = {\n      item,\n      button,\n      splitButton,\n      toolbarButton\n    };\n\n    const runWithApi = (info, comp) => {\n      const api = info.getApi(comp);\n      return f => {\n        f(api);\n      };\n    };\n    const onControlAttached = (info, editorOffCell) => runOnAttached(comp => {\n      const run = runWithApi(info, comp);\n      run(api => {\n        const onDestroy = info.onSetup(api);\n        if (isFunction(onDestroy)) {\n          editorOffCell.set(onDestroy);\n        }\n      });\n    });\n    const onControlDetached = (getApi, editorOffCell) => runOnDetached(comp => runWithApi(getApi, comp)(editorOffCell.get()));\n\n    const onMenuItemExecute = (info, itemResponse) => runOnExecute$1((comp, simulatedEvent) => {\n      runWithApi(info, comp)(info.onAction);\n      if (!info.triggersSubmenu && itemResponse === ItemResponse$1.CLOSE_ON_EXECUTE) {\n        if (comp.getSystem().isConnected()) {\n          emit(comp, sandboxClose());\n        }\n        simulatedEvent.stop();\n      }\n    });\n    const menuItemEventOrder = {\n      [execute$5()]: [\n        'disabling',\n        'alloy.base.behaviour',\n        'toggling',\n        'item-events'\n      ]\n    };\n\n    const componentRenderPipeline = cat;\n    const renderCommonItem = (spec, structure, itemResponse, providersBackstage) => {\n      const editorOffCell = Cell(noop);\n      return {\n        type: 'item',\n        dom: structure.dom,\n        components: componentRenderPipeline(structure.optComponents),\n        data: spec.data,\n        eventOrder: menuItemEventOrder,\n        hasSubmenu: spec.triggersSubmenu,\n        itemBehaviours: derive$1([\n          config('item-events', [\n            onMenuItemExecute(spec, itemResponse),\n            onControlAttached(spec, editorOffCell),\n            onControlDetached(spec, editorOffCell)\n          ]),\n          DisablingConfigs.item(() => !spec.enabled || providersBackstage.isDisabled()),\n          receivingConfig(),\n          Replacing.config({})\n        ].concat(spec.itemBehaviours))\n      };\n    };\n    const buildData = source => ({\n      value: source.value,\n      meta: {\n        text: source.text.getOr(''),\n        ...source.meta\n      }\n    });\n\n    const convertText = source => {\n      const isMac = global$5.os.isMacOS() || global$5.os.isiOS();\n      const mac = {\n        alt: '\\u2325',\n        ctrl: '\\u2303',\n        shift: '\\u21E7',\n        meta: '\\u2318',\n        access: '\\u2303\\u2325'\n      };\n      const other = {\n        meta: 'Ctrl',\n        access: 'Shift+Alt'\n      };\n      const replace = isMac ? mac : other;\n      const shortcut = source.split('+');\n      const updated = map$2(shortcut, segment => {\n        const search = segment.toLowerCase().trim();\n        return has$2(replace, search) ? replace[search] : segment;\n      });\n      return isMac ? updated.join('') : updated.join('+');\n    };\n\n    const renderIcon$1 = (name, icons, classes = [iconClass]) => render$3(name, {\n      tag: 'div',\n      classes\n    }, icons);\n    const renderText = text => ({\n      dom: {\n        tag: 'div',\n        classes: [textClass]\n      },\n      components: [text$1(global$8.translate(text))]\n    });\n    const renderHtml = (html, classes) => ({\n      dom: {\n        tag: 'div',\n        classes,\n        innerHtml: html\n      }\n    });\n    const renderStyledText = (style, text) => ({\n      dom: {\n        tag: 'div',\n        classes: [textClass]\n      },\n      components: [{\n          dom: {\n            tag: style.tag,\n            styles: style.styles\n          },\n          components: [text$1(global$8.translate(text))]\n        }]\n    });\n    const renderShortcut = shortcut => ({\n      dom: {\n        tag: 'div',\n        classes: [accessoryClass]\n      },\n      components: [text$1(convertText(shortcut))]\n    });\n    const renderCheckmark = icons => renderIcon$1('checkmark', icons, [checkmarkClass]);\n    const renderSubmenuCaret = icons => renderIcon$1('chevron-right', icons, [caretClass]);\n    const renderDownwardsCaret = icons => renderIcon$1('chevron-down', icons, [caretClass]);\n    const renderContainer = (container, components) => {\n      const directionClass = container.direction === 'vertical' ? containerColumnClass : containerRowClass;\n      const alignClass = container.align === 'left' ? containerAlignLeftClass : containerAlignRightClass;\n      const getValignClass = () => {\n        switch (container.valign) {\n        case 'top':\n          return containerValignTopClass;\n        case 'middle':\n          return containerValignMiddleClass;\n        case 'bottom':\n          return containerValignBottomClass;\n        }\n      };\n      return {\n        dom: {\n          tag: 'div',\n          classes: [\n            containerClass,\n            directionClass,\n            alignClass,\n            getValignClass()\n          ]\n        },\n        components\n      };\n    };\n    const renderImage = (src, classes, alt) => ({\n      dom: {\n        tag: 'img',\n        classes,\n        attributes: {\n          src,\n          alt: alt.getOr('')\n        }\n      }\n    });\n\n    const renderColorStructure = (item, providerBackstage, fallbackIcon) => {\n      const colorPickerCommand = 'custom';\n      const removeColorCommand = 'remove';\n      const itemText = item.ariaLabel;\n      const itemValue = item.value;\n      const iconSvg = item.iconContent.map(name => getOr(name, providerBackstage.icons, fallbackIcon));\n      const getDom = () => {\n        const common = colorClass;\n        const icon = iconSvg.getOr('');\n        const attributes = itemText.map(text => ({ title: providerBackstage.translate(text) })).getOr({});\n        const baseDom = {\n          tag: 'div',\n          attributes,\n          classes: [common]\n        };\n        if (itemValue === colorPickerCommand) {\n          return {\n            ...baseDom,\n            tag: 'button',\n            classes: [\n              ...baseDom.classes,\n              'tox-swatches__picker-btn'\n            ],\n            innerHtml: icon\n          };\n        } else if (itemValue === removeColorCommand) {\n          return {\n            ...baseDom,\n            classes: [\n              ...baseDom.classes,\n              'tox-swatch--remove'\n            ],\n            innerHtml: icon\n          };\n        } else if (isNonNullable(itemValue)) {\n          return {\n            ...baseDom,\n            attributes: {\n              ...baseDom.attributes,\n              'data-mce-color': itemValue\n            },\n            styles: { 'background-color': itemValue }\n          };\n        } else {\n          return baseDom;\n        }\n      };\n      return {\n        dom: getDom(),\n        optComponents: []\n      };\n    };\n    const renderItemDomStructure = ariaLabel => {\n      const domTitle = ariaLabel.map(label => ({ attributes: { title: global$8.translate(label) } })).getOr({});\n      return {\n        tag: 'div',\n        classes: [\n          navClass,\n          selectableClass\n        ],\n        ...domTitle\n      };\n    };\n    const renderNormalItemStructure = (info, providersBackstage, renderIcons, fallbackIcon) => {\n      const iconSpec = {\n        tag: 'div',\n        classes: [iconClass]\n      };\n      const renderIcon = iconName => render$3(iconName, iconSpec, providersBackstage.icons, fallbackIcon);\n      const renderEmptyIcon = () => Optional.some({ dom: iconSpec });\n      const leftIcon = renderIcons ? info.iconContent.map(renderIcon).orThunk(renderEmptyIcon) : Optional.none();\n      const checkmark = info.checkMark;\n      const textRender = Optional.from(info.meta).fold(() => renderText, meta => has$2(meta, 'style') ? curry(renderStyledText, meta.style) : renderText);\n      const content = info.htmlContent.fold(() => info.textContent.map(textRender), html => Optional.some(renderHtml(html, [textClass])));\n      const menuItem = {\n        dom: renderItemDomStructure(info.ariaLabel),\n        optComponents: [\n          leftIcon,\n          content,\n          info.shortcutContent.map(renderShortcut),\n          checkmark,\n          info.caret\n        ]\n      };\n      return menuItem;\n    };\n    const renderItemStructure = (info, providersBackstage, renderIcons, fallbackIcon = Optional.none()) => {\n      if (info.presets === 'color') {\n        return renderColorStructure(info, providersBackstage, fallbackIcon);\n      } else {\n        return renderNormalItemStructure(info, providersBackstage, renderIcons, fallbackIcon);\n      }\n    };\n\n    const tooltipBehaviour = (meta, sharedBackstage) => get$g(meta, 'tooltipWorker').map(tooltipWorker => [Tooltipping.config({\n        lazySink: sharedBackstage.getSink,\n        tooltipDom: {\n          tag: 'div',\n          classes: ['tox-tooltip-worker-container']\n        },\n        tooltipComponents: [],\n        anchor: comp => ({\n          type: 'submenu',\n          item: comp,\n          overrides: { maxHeightFunction: expandable$1 }\n        }),\n        mode: 'follow-highlight',\n        onShow: (component, _tooltip) => {\n          tooltipWorker(elm => {\n            Tooltipping.setComponents(component, [external$1({ element: SugarElement.fromDom(elm) })]);\n          });\n        }\n      })]).getOr([]);\n    const encodeText = text => global$7.DOM.encode(text);\n    const replaceText = (text, matchText) => {\n      const translated = global$8.translate(text);\n      const encoded = encodeText(translated);\n      if (matchText.length > 0) {\n        const escapedMatchRegex = new RegExp(escape(matchText), 'gi');\n        return encoded.replace(escapedMatchRegex, match => `<span class=\"tox-autocompleter-highlight\">${ match }</span>`);\n      } else {\n        return encoded;\n      }\n    };\n    const renderAutocompleteItem = (spec, matchText, useText, presets, onItemValueHandler, itemResponse, sharedBackstage, renderIcons = true) => {\n      const structure = renderItemStructure({\n        presets,\n        textContent: Optional.none(),\n        htmlContent: useText ? spec.text.map(text => replaceText(text, matchText)) : Optional.none(),\n        ariaLabel: spec.text,\n        iconContent: spec.icon,\n        shortcutContent: Optional.none(),\n        checkMark: Optional.none(),\n        caret: Optional.none(),\n        value: spec.value\n      }, sharedBackstage.providers, renderIcons, spec.icon);\n      return renderCommonItem({\n        data: buildData(spec),\n        enabled: spec.enabled,\n        getApi: constant$1({}),\n        onAction: _api => onItemValueHandler(spec.value, spec.meta),\n        onSetup: constant$1(noop),\n        triggersSubmenu: false,\n        itemBehaviours: tooltipBehaviour(spec.meta, sharedBackstage)\n      }, structure, itemResponse, sharedBackstage.providers);\n    };\n\n    const render$2 = (items, extras) => map$2(items, item => {\n      switch (item.type) {\n      case 'cardcontainer':\n        return renderContainer(item, render$2(item.items, extras));\n      case 'cardimage':\n        return renderImage(item.src, item.classes, item.alt);\n      case 'cardtext':\n        const shouldHighlight = item.name.exists(name => contains$2(extras.cardText.highlightOn, name));\n        const matchText = shouldHighlight ? Optional.from(extras.cardText.matchText).getOr('') : '';\n        return renderHtml(replaceText(item.text, matchText), item.classes);\n      }\n    });\n    const renderCardMenuItem = (spec, itemResponse, sharedBackstage, extras) => {\n      const getApi = component => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => {\n          Disabling.set(component, !state);\n          each$1(descendants(component.element, '*'), elm => {\n            component.getSystem().getByDom(elm).each(comp => {\n              if (comp.hasConfigured(Disabling)) {\n                Disabling.set(comp, !state);\n              }\n            });\n          });\n        }\n      });\n      const structure = {\n        dom: renderItemDomStructure(spec.label),\n        optComponents: [Optional.some({\n            dom: {\n              tag: 'div',\n              classes: [\n                containerClass,\n                containerRowClass\n              ]\n            },\n            components: render$2(spec.items, extras)\n          })]\n      };\n      return renderCommonItem({\n        data: buildData({\n          text: Optional.none(),\n          ...spec\n        }),\n        enabled: spec.enabled,\n        getApi,\n        onAction: spec.onAction,\n        onSetup: spec.onSetup,\n        triggersSubmenu: false,\n        itemBehaviours: Optional.from(extras.itemBehaviours).getOr([])\n      }, structure, itemResponse, sharedBackstage.providers);\n    };\n\n    const renderChoiceItem = (spec, useText, presets, onItemValueHandler, isSelected, itemResponse, providersBackstage, renderIcons = true) => {\n      const getApi = component => ({\n        setActive: state => {\n          Toggling.set(component, state);\n        },\n        isActive: () => Toggling.isOn(component),\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state)\n      });\n      const structure = renderItemStructure({\n        presets,\n        textContent: useText ? spec.text : Optional.none(),\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        iconContent: spec.icon,\n        shortcutContent: useText ? spec.shortcut : Optional.none(),\n        checkMark: useText ? Optional.some(renderCheckmark(providersBackstage.icons)) : Optional.none(),\n        caret: Optional.none(),\n        value: spec.value\n      }, providersBackstage, renderIcons);\n      return deepMerge(renderCommonItem({\n        data: buildData(spec),\n        enabled: spec.enabled,\n        getApi,\n        onAction: _api => onItemValueHandler(spec.value),\n        onSetup: api => {\n          api.setActive(isSelected);\n          return noop;\n        },\n        triggersSubmenu: false,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage), {\n        toggling: {\n          toggleClass: tickedClass,\n          toggleOnExecute: false,\n          selected: spec.active,\n          exclusive: true\n        }\n      });\n    };\n\n    const parts$f = generate$3(owner$2(), parts$h());\n\n    const hexColour = value => ({ value });\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    const isHexString = hex => shorthandRegex.test(hex) || longformRegex.test(hex);\n    const normalizeHex = hex => removeLeading(hex, '#').toUpperCase();\n    const fromString$1 = hex => isHexString(hex) ? Optional.some({ value: normalizeHex(hex) }) : Optional.none();\n    const getLongForm = hex => {\n      const hexString = hex.value.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n      return { value: hexString };\n    };\n    const extractValues = hex => {\n      const longForm = getLongForm(hex);\n      const splitForm = longformRegex.exec(longForm.value);\n      return splitForm === null ? [\n        'FFFFFF',\n        'FF',\n        'FF',\n        'FF'\n      ] : splitForm;\n    };\n    const toHex = component => {\n      const hex = component.toString(16);\n      return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n    };\n    const fromRgba = rgbaColour => {\n      const value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue);\n      return hexColour(value);\n    };\n\n    const min = Math.min;\n    const max = Math.max;\n    const round$1 = Math.round;\n    const rgbRegex = /^\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i;\n    const rgbaRegex = /^\\s*rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?(?:\\.\\d+)?)\\s*\\)\\s*$/i;\n    const rgbaColour = (red, green, blue, alpha) => ({\n      red,\n      green,\n      blue,\n      alpha\n    });\n    const isRgbaComponent = value => {\n      const num = parseInt(value, 10);\n      return num.toString() === value && num >= 0 && num <= 255;\n    };\n    const fromHsv = hsv => {\n      let r;\n      let g;\n      let b;\n      const hue = (hsv.hue || 0) % 360;\n      let saturation = hsv.saturation / 100;\n      let brightness = hsv.value / 100;\n      saturation = max(0, min(saturation, 1));\n      brightness = max(0, min(brightness, 1));\n      if (saturation === 0) {\n        r = g = b = round$1(255 * brightness);\n        return rgbaColour(r, g, b, 1);\n      }\n      const side = hue / 60;\n      const chroma = brightness * saturation;\n      const x = chroma * (1 - Math.abs(side % 2 - 1));\n      const match = brightness - chroma;\n      switch (Math.floor(side)) {\n      case 0:\n        r = chroma;\n        g = x;\n        b = 0;\n        break;\n      case 1:\n        r = x;\n        g = chroma;\n        b = 0;\n        break;\n      case 2:\n        r = 0;\n        g = chroma;\n        b = x;\n        break;\n      case 3:\n        r = 0;\n        g = x;\n        b = chroma;\n        break;\n      case 4:\n        r = x;\n        g = 0;\n        b = chroma;\n        break;\n      case 5:\n        r = chroma;\n        g = 0;\n        b = x;\n        break;\n      default:\n        r = g = b = 0;\n      }\n      r = round$1(255 * (r + match));\n      g = round$1(255 * (g + match));\n      b = round$1(255 * (b + match));\n      return rgbaColour(r, g, b, 1);\n    };\n    const fromHex = hexColour => {\n      const result = extractValues(hexColour);\n      const red = parseInt(result[1], 16);\n      const green = parseInt(result[2], 16);\n      const blue = parseInt(result[3], 16);\n      return rgbaColour(red, green, blue, 1);\n    };\n    const fromStringValues = (red, green, blue, alpha) => {\n      const r = parseInt(red, 10);\n      const g = parseInt(green, 10);\n      const b = parseInt(blue, 10);\n      const a = parseFloat(alpha);\n      return rgbaColour(r, g, b, a);\n    };\n    const fromString = rgbaString => {\n      if (rgbaString === 'transparent') {\n        return Optional.some(rgbaColour(0, 0, 0, 0));\n      }\n      const rgbMatch = rgbRegex.exec(rgbaString);\n      if (rgbMatch !== null) {\n        return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n      }\n      const rgbaMatch = rgbaRegex.exec(rgbaString);\n      if (rgbaMatch !== null) {\n        return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n      }\n      return Optional.none();\n    };\n    const toString = rgba => `rgba(${ rgba.red },${ rgba.green },${ rgba.blue },${ rgba.alpha })`;\n    const red = rgbaColour(255, 0, 0, 1);\n\n    const fireSkinLoaded$1 = editor => {\n      editor.dispatch('SkinLoaded');\n    };\n    const fireSkinLoadError$1 = (editor, error) => {\n      editor.dispatch('SkinLoadError', error);\n    };\n    const fireResizeEditor = editor => {\n      editor.dispatch('ResizeEditor');\n    };\n    const fireResizeContent = (editor, e) => {\n      editor.dispatch('ResizeContent', e);\n    };\n    const fireScrollContent = (editor, e) => {\n      editor.dispatch('ScrollContent', e);\n    };\n    const fireTextColorChange = (editor, data) => {\n      editor.dispatch('TextColorChange', data);\n    };\n    const fireAfterProgressState = (editor, state) => {\n      editor.dispatch('AfterProgressState', { state });\n    };\n    const fireResolveName = (editor, node) => editor.dispatch('ResolveName', {\n      name: node.nodeName.toLowerCase(),\n      target: node\n    });\n\n    const hsvColour = (hue, saturation, value) => ({\n      hue,\n      saturation,\n      value\n    });\n    const fromRgb = rgbaColour => {\n      let h = 0;\n      let s = 0;\n      let v = 0;\n      const r = rgbaColour.red / 255;\n      const g = rgbaColour.green / 255;\n      const b = rgbaColour.blue / 255;\n      const minRGB = Math.min(r, Math.min(g, b));\n      const maxRGB = Math.max(r, Math.max(g, b));\n      if (minRGB === maxRGB) {\n        v = minRGB;\n        return hsvColour(0, 0, v * 100);\n      }\n      const d = r === minRGB ? g - b : b === minRGB ? r - g : b - r;\n      h = r === minRGB ? 3 : b === minRGB ? 1 : 5;\n      h = 60 * (h - d / (maxRGB - minRGB));\n      s = (maxRGB - minRGB) / maxRGB;\n      v = maxRGB;\n      return hsvColour(Math.round(h), Math.round(s * 100), Math.round(v * 100));\n    };\n\n    const hexToHsv = hex => fromRgb(fromHex(hex));\n    const hsvToHex = hsv => fromRgba(fromHsv(hsv));\n    const anyToHex = color => fromString$1(color).orThunk(() => fromString(color).map(fromRgba)).getOrThunk(() => {\n      const canvas = document.createElement('canvas');\n      canvas.height = 1;\n      canvas.width = 1;\n      const canvasContext = canvas.getContext('2d');\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n      canvasContext.fillStyle = '#FFFFFF';\n      canvasContext.fillStyle = color;\n      canvasContext.fillRect(0, 0, 1, 1);\n      const rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n      const r = rgba[0];\n      const g = rgba[1];\n      const b = rgba[2];\n      const a = rgba[3];\n      return fromRgba(rgbaColour(r, g, b, a));\n    });\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n\n    const storageName = 'tinymce-custom-colors';\n    const ColorCache = (max = 10) => {\n      const storageString = global$4.getItem(storageName);\n      const localstorage = isString(storageString) ? JSON.parse(storageString) : [];\n      const prune = list => {\n        const diff = max - list.length;\n        return diff < 0 ? list.slice(0, max) : list;\n      };\n      const cache = prune(localstorage);\n      const add = key => {\n        indexOf(cache, key).each(remove);\n        cache.unshift(key);\n        if (cache.length > max) {\n          cache.pop();\n        }\n        global$4.setItem(storageName, JSON.stringify(cache));\n      };\n      const remove = idx => {\n        cache.splice(idx, 1);\n      };\n      const state = () => cache.slice(0);\n      return {\n        add,\n        state\n      };\n    };\n\n    const colorCache = ColorCache(10);\n    const calcCols = colors => Math.max(5, Math.ceil(Math.sqrt(colors)));\n    const mapColors = colorMap => {\n      const colors = [];\n      for (let i = 0; i < colorMap.length; i += 2) {\n        colors.push({\n          text: colorMap[i + 1],\n          value: '#' + anyToHex(colorMap[i]).value,\n          type: 'choiceitem'\n        });\n      }\n      return colors;\n    };\n    const option$1 = name => editor => editor.options.get(name);\n    const register$d = editor => {\n      const registerOption = editor.options.register;\n      registerOption('color_map', {\n        processor: value => {\n          if (isArrayOf(value, isString)) {\n            return {\n              value: mapColors(value),\n              valid: true\n            };\n          } else {\n            return {\n              valid: false,\n              message: 'Must be an array of strings.'\n            };\n          }\n        },\n        default: [\n          '#BFEDD2',\n          'Light Green',\n          '#FBEEB8',\n          'Light Yellow',\n          '#F8CAC6',\n          'Light Red',\n          '#ECCAFA',\n          'Light Purple',\n          '#C2E0F4',\n          'Light Blue',\n          '#2DC26B',\n          'Green',\n          '#F1C40F',\n          'Yellow',\n          '#E03E2D',\n          'Red',\n          '#B96AD9',\n          'Purple',\n          '#3598DB',\n          'Blue',\n          '#169179',\n          'Dark Turquoise',\n          '#E67E23',\n          'Orange',\n          '#BA372A',\n          'Dark Red',\n          '#843FA1',\n          'Dark Purple',\n          '#236FA1',\n          'Dark Blue',\n          '#ECF0F1',\n          'Light Gray',\n          '#CED4D9',\n          'Medium Gray',\n          '#95A5A6',\n          'Gray',\n          '#7E8C8D',\n          'Dark Gray',\n          '#34495E',\n          'Navy Blue',\n          '#000000',\n          'Black',\n          '#ffffff',\n          'White'\n        ]\n      });\n      registerOption('color_cols', {\n        processor: 'number',\n        default: calcCols(getColors$2(editor).length)\n      });\n      registerOption('custom_colors', {\n        processor: 'boolean',\n        default: true\n      });\n    };\n    const getColorCols$1 = option$1('color_cols');\n    const hasCustomColors$1 = option$1('custom_colors');\n    const getColors$2 = option$1('color_map');\n    const getCurrentColors = () => map$2(colorCache.state(), color => ({\n      type: 'choiceitem',\n      text: color,\n      value: color\n    }));\n    const addColor = color => {\n      colorCache.add(color);\n    };\n\n    const fallbackColor = '#000000';\n    const hasStyleApi = node => isNonNullable(node.style);\n    const getCurrentColor = (editor, format) => {\n      let color;\n      editor.dom.getParents(editor.selection.getStart(), elm => {\n        const value = hasStyleApi(elm) ? elm.style[format === 'forecolor' ? 'color' : 'backgroundColor'] : null;\n        if (value) {\n          color = color ? color : value;\n        }\n      });\n      return Optional.from(color);\n    };\n    const applyFormat = (editor, format, value) => {\n      editor.undoManager.transact(() => {\n        editor.focus();\n        editor.formatter.apply(format, { value });\n        editor.nodeChanged();\n      });\n    };\n    const removeFormat = (editor, format) => {\n      editor.undoManager.transact(() => {\n        editor.focus();\n        editor.formatter.remove(format, { value: null }, undefined, true);\n        editor.nodeChanged();\n      });\n    };\n    const registerCommands = editor => {\n      editor.addCommand('mceApplyTextcolor', (format, value) => {\n        applyFormat(editor, format, value);\n      });\n      editor.addCommand('mceRemoveTextcolor', format => {\n        removeFormat(editor, format);\n      });\n    };\n    const getAdditionalColors = hasCustom => {\n      const type = 'choiceitem';\n      const remove = {\n        type,\n        text: 'Remove color',\n        icon: 'color-swatch-remove-color',\n        value: 'remove'\n      };\n      const custom = {\n        type,\n        text: 'Custom color',\n        icon: 'color-picker',\n        value: 'custom'\n      };\n      return hasCustom ? [\n        remove,\n        custom\n      ] : [remove];\n    };\n    const applyColor = (editor, format, value, onChoice) => {\n      if (value === 'custom') {\n        const dialog = colorPickerDialog(editor);\n        dialog(colorOpt => {\n          colorOpt.each(color => {\n            addColor(color);\n            editor.execCommand('mceApplyTextcolor', format, color);\n            onChoice(color);\n          });\n        }, fallbackColor);\n      } else if (value === 'remove') {\n        onChoice('');\n        editor.execCommand('mceRemoveTextcolor', format);\n      } else {\n        onChoice(value);\n        editor.execCommand('mceApplyTextcolor', format, value);\n      }\n    };\n    const getColors$1 = (colors, hasCustom) => colors.concat(getCurrentColors().concat(getAdditionalColors(hasCustom)));\n    const getFetch$1 = (colors, hasCustom) => callback => {\n      callback(getColors$1(colors, hasCustom));\n    };\n    const setIconColor = (splitButtonApi, name, newColor) => {\n      const id = name === 'forecolor' ? 'tox-icon-text-color__color' : 'tox-icon-highlight-bg-color__color';\n      splitButtonApi.setIconFill(id, newColor);\n    };\n    const registerTextColorButton = (editor, name, format, tooltip, lastColor) => {\n      editor.ui.registry.addSplitButton(name, {\n        tooltip,\n        presets: 'color',\n        icon: name === 'forecolor' ? 'text-color' : 'highlight-bg-color',\n        select: value => {\n          const optCurrentRgb = getCurrentColor(editor, format);\n          return optCurrentRgb.bind(currentRgb => fromString(currentRgb).map(rgba => {\n            const currentHex = fromRgba(rgba).value;\n            return contains$1(value.toLowerCase(), currentHex);\n          })).getOr(false);\n        },\n        columns: getColorCols$1(editor),\n        fetch: getFetch$1(getColors$2(editor), hasCustomColors$1(editor)),\n        onAction: _splitButtonApi => {\n          applyColor(editor, format, lastColor.get(), noop);\n        },\n        onItemAction: (_splitButtonApi, value) => {\n          applyColor(editor, format, value, newColor => {\n            lastColor.set(newColor);\n            fireTextColorChange(editor, {\n              name,\n              color: newColor\n            });\n          });\n        },\n        onSetup: splitButtonApi => {\n          setIconColor(splitButtonApi, name, lastColor.get());\n          const handler = e => {\n            if (e.name === name) {\n              setIconColor(splitButtonApi, e.name, e.color);\n            }\n          };\n          editor.on('TextColorChange', handler);\n          return () => {\n            editor.off('TextColorChange', handler);\n          };\n        }\n      });\n    };\n    const registerTextColorMenuItem = (editor, name, format, text) => {\n      editor.ui.registry.addNestedMenuItem(name, {\n        text,\n        icon: name === 'forecolor' ? 'text-color' : 'highlight-bg-color',\n        getSubmenuItems: () => [{\n            type: 'fancymenuitem',\n            fancytype: 'colorswatch',\n            onAction: data => {\n              applyColor(editor, format, data.value, noop);\n            }\n          }]\n      });\n    };\n    const colorPickerDialog = editor => (callback, value) => {\n      let isValid = false;\n      const onSubmit = api => {\n        const data = api.getData();\n        const hex = data.colorpicker;\n        if (isValid) {\n          callback(Optional.from(hex));\n          api.close();\n        } else {\n          editor.windowManager.alert(editor.translate([\n            'Invalid hex color code: {0}',\n            hex\n          ]));\n        }\n      };\n      const onAction = (_api, details) => {\n        if (details.name === 'hex-valid') {\n          isValid = details.value;\n        }\n      };\n      const initialData = { colorpicker: value };\n      editor.windowManager.open({\n        title: 'Color Picker',\n        size: 'normal',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'colorpicker',\n              name: 'colorpicker',\n              label: 'Color'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData,\n        onAction,\n        onSubmit,\n        onClose: noop,\n        onCancel: () => {\n          callback(Optional.none());\n        }\n      });\n    };\n    const register$c = editor => {\n      registerCommands(editor);\n      const lastForeColor = Cell(fallbackColor);\n      const lastBackColor = Cell(fallbackColor);\n      registerTextColorButton(editor, 'forecolor', 'forecolor', 'Text color', lastForeColor);\n      registerTextColorButton(editor, 'backcolor', 'hilitecolor', 'Background color', lastBackColor);\n      registerTextColorMenuItem(editor, 'forecolor', 'forecolor', 'Text color');\n      registerTextColorMenuItem(editor, 'backcolor', 'hilitecolor', 'Background color');\n    };\n\n    const createPartialChoiceMenu = (value, items, onItemValueHandler, columns, presets, itemResponse, select, providersBackstage) => {\n      const hasIcons = menuHasIcons(items);\n      const presetItemTypes = presets !== 'color' ? 'normal' : 'color';\n      const alloyItems = createChoiceItems(items, onItemValueHandler, columns, presetItemTypes, itemResponse, select, providersBackstage);\n      const menuLayout = { menuType: presets };\n      return createPartialMenuWithAlloyItems(value, hasIcons, alloyItems, columns, menuLayout);\n    };\n    const createChoiceItems = (items, onItemValueHandler, columns, itemPresets, itemResponse, select, providersBackstage) => cat(map$2(items, item => {\n      if (item.type === 'choiceitem') {\n        return createChoiceMenuItem(item).fold(handleError, d => Optional.some(renderChoiceItem(d, columns === 1, itemPresets, onItemValueHandler, select(d.value), itemResponse, providersBackstage, menuHasIcons(items))));\n      } else {\n        return Optional.none();\n      }\n    }));\n\n    const deriveMenuMovement = (columns, presets) => {\n      const menuMarkers = markers(presets);\n      if (columns === 1) {\n        return {\n          mode: 'menu',\n          moveOnTab: true\n        };\n      } else if (columns === 'auto') {\n        return {\n          mode: 'grid',\n          selector: '.' + menuMarkers.item,\n          initSize: {\n            numColumns: 1,\n            numRows: 1\n          }\n        };\n      } else {\n        const rowClass = presets === 'color' ? 'tox-swatches__row' : 'tox-collection__group';\n        return {\n          mode: 'matrix',\n          rowSelector: '.' + rowClass\n        };\n      }\n    };\n    const deriveCollectionMovement = (columns, presets) => {\n      if (columns === 1) {\n        return {\n          mode: 'menu',\n          moveOnTab: false,\n          selector: '.tox-collection__item'\n        };\n      } else if (columns === 'auto') {\n        return {\n          mode: 'flatgrid',\n          selector: '.' + 'tox-collection__item',\n          initSize: {\n            numColumns: 1,\n            numRows: 1\n          }\n        };\n      } else {\n        return {\n          mode: 'matrix',\n          selectors: {\n            row: presets === 'color' ? '.tox-swatches__row' : '.tox-collection__group',\n            cell: presets === 'color' ? `.${ colorClass }` : `.${ selectableClass }`\n          }\n        };\n      }\n    };\n\n    const renderColorSwatchItem = (spec, backstage) => {\n      const items = getColorItems(spec, backstage);\n      const columns = backstage.colorinput.getColorCols();\n      const presets = 'color';\n      const menuSpec = createPartialChoiceMenu(generate$6('menu-value'), items, value => {\n        spec.onAction({ value });\n      }, columns, presets, ItemResponse$1.CLOSE_ON_EXECUTE, never, backstage.shared.providers);\n      const widgetSpec = {\n        ...menuSpec,\n        markers: markers(presets),\n        movement: deriveMenuMovement(columns, presets)\n      };\n      return {\n        type: 'widget',\n        data: { value: generate$6('widget-id') },\n        dom: {\n          tag: 'div',\n          classes: ['tox-fancymenuitem']\n        },\n        autofocus: true,\n        components: [parts$f.widget(Menu.sketch(widgetSpec))]\n      };\n    };\n    const getColorItems = (spec, backstage) => {\n      const useCustomColors = spec.initData.allowCustomColors && backstage.colorinput.hasCustomColors();\n      return spec.initData.colors.fold(() => getColors$1(backstage.colorinput.getColors(), useCustomColors), colors => colors.concat(getAdditionalColors(useCustomColors)));\n    };\n\n    const cellOverEvent = generate$6('cell-over');\n    const cellExecuteEvent = generate$6('cell-execute');\n    const makeCell = (row, col, labelId) => {\n      const emitCellOver = c => emitWith(c, cellOverEvent, {\n        row,\n        col\n      });\n      const emitExecute = c => emitWith(c, cellExecuteEvent, {\n        row,\n        col\n      });\n      const onClick = (c, se) => {\n        se.stop();\n        emitExecute(c);\n      };\n      return build$1({\n        dom: {\n          tag: 'div',\n          attributes: {\n            role: 'button',\n            ['aria-labelledby']: labelId\n          }\n        },\n        behaviours: derive$1([\n          config('insert-table-picker-cell', [\n            run$1(mouseover(), Focusing.focus),\n            run$1(execute$5(), emitExecute),\n            run$1(click(), onClick),\n            run$1(tap(), onClick)\n          ]),\n          Toggling.config({\n            toggleClass: 'tox-insert-table-picker__selected',\n            toggleOnExecute: false\n          }),\n          Focusing.config({ onFocus: emitCellOver })\n        ])\n      });\n    };\n    const makeCells = (labelId, numRows, numCols) => {\n      const cells = [];\n      for (let i = 0; i < numRows; i++) {\n        const row = [];\n        for (let j = 0; j < numCols; j++) {\n          row.push(makeCell(i, j, labelId));\n        }\n        cells.push(row);\n      }\n      return cells;\n    };\n    const selectCells = (cells, selectedRow, selectedColumn, numRows, numColumns) => {\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < numColumns; j++) {\n          Toggling.set(cells[i][j], i <= selectedRow && j <= selectedColumn);\n        }\n      }\n    };\n    const makeComponents = cells => bind$3(cells, cellRow => map$2(cellRow, premade));\n    const makeLabelText = (row, col) => text$1(`${ col }x${ row }`);\n    const renderInsertTableMenuItem = spec => {\n      const numRows = 10;\n      const numColumns = 10;\n      const sizeLabelId = generate$6('size-label');\n      const cells = makeCells(sizeLabelId, numRows, numColumns);\n      const emptyLabelText = makeLabelText(0, 0);\n      const memLabel = record({\n        dom: {\n          tag: 'span',\n          classes: ['tox-insert-table-picker__label'],\n          attributes: { id: sizeLabelId }\n        },\n        components: [emptyLabelText],\n        behaviours: derive$1([Replacing.config({})])\n      });\n      return {\n        type: 'widget',\n        data: { value: generate$6('widget-id') },\n        dom: {\n          tag: 'div',\n          classes: ['tox-fancymenuitem']\n        },\n        autofocus: true,\n        components: [parts$f.widget({\n            dom: {\n              tag: 'div',\n              classes: ['tox-insert-table-picker']\n            },\n            components: makeComponents(cells).concat(memLabel.asSpec()),\n            behaviours: derive$1([\n              config('insert-table-picker', [\n                runOnAttached(c => {\n                  Replacing.set(memLabel.get(c), [emptyLabelText]);\n                }),\n                runWithTarget(cellOverEvent, (c, t, e) => {\n                  const {row, col} = e.event;\n                  selectCells(cells, row, col, numRows, numColumns);\n                  Replacing.set(memLabel.get(c), [makeLabelText(row + 1, col + 1)]);\n                }),\n                runWithTarget(cellExecuteEvent, (c, _, e) => {\n                  const {row, col} = e.event;\n                  spec.onAction({\n                    numRows: row + 1,\n                    numColumns: col + 1\n                  });\n                  emit(c, sandboxClose());\n                })\n              ]),\n              Keying.config({\n                initSize: {\n                  numRows,\n                  numColumns\n                },\n                mode: 'flatgrid',\n                selector: '[role=\"button\"]'\n              })\n            ])\n          })]\n      };\n    };\n\n    const fancyMenuItems = {\n      inserttable: renderInsertTableMenuItem,\n      colorswatch: renderColorSwatchItem\n    };\n    const renderFancyMenuItem = (spec, backstage) => get$g(fancyMenuItems, spec.fancytype).map(render => render(spec, backstage));\n\n    const renderNestedItem = (spec, itemResponse, providersBackstage, renderIcons = true, downwardsCaret = false) => {\n      const caret = downwardsCaret ? renderDownwardsCaret(providersBackstage.icons) : renderSubmenuCaret(providersBackstage.icons);\n      const getApi = component => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state)\n      });\n      const structure = renderItemStructure({\n        presets: 'normal',\n        iconContent: spec.icon,\n        textContent: spec.text,\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        caret: Optional.some(caret),\n        checkMark: Optional.none(),\n        shortcutContent: spec.shortcut\n      }, providersBackstage, renderIcons);\n      return renderCommonItem({\n        data: buildData(spec),\n        getApi,\n        enabled: spec.enabled,\n        onAction: noop,\n        onSetup: spec.onSetup,\n        triggersSubmenu: true,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage);\n    };\n\n    const renderNormalItem = (spec, itemResponse, providersBackstage, renderIcons = true) => {\n      const getApi = component => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state)\n      });\n      const structure = renderItemStructure({\n        presets: 'normal',\n        iconContent: spec.icon,\n        textContent: spec.text,\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        caret: Optional.none(),\n        checkMark: Optional.none(),\n        shortcutContent: spec.shortcut\n      }, providersBackstage, renderIcons);\n      return renderCommonItem({\n        data: buildData(spec),\n        getApi,\n        enabled: spec.enabled,\n        onAction: spec.onAction,\n        onSetup: spec.onSetup,\n        triggersSubmenu: false,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage);\n    };\n\n    const renderSeparatorItem = spec => ({\n      type: 'separator',\n      dom: {\n        tag: 'div',\n        classes: [\n          selectableClass,\n          groupHeadingClass\n        ]\n      },\n      components: spec.text.map(text$1).toArray()\n    });\n\n    const renderToggleMenuItem = (spec, itemResponse, providersBackstage, renderIcons = true) => {\n      const getApi = component => ({\n        setActive: state => {\n          Toggling.set(component, state);\n        },\n        isActive: () => Toggling.isOn(component),\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state)\n      });\n      const structure = renderItemStructure({\n        iconContent: spec.icon,\n        textContent: spec.text,\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        checkMark: Optional.some(renderCheckmark(providersBackstage.icons)),\n        caret: Optional.none(),\n        shortcutContent: spec.shortcut,\n        presets: 'normal',\n        meta: spec.meta\n      }, providersBackstage, renderIcons);\n      return deepMerge(renderCommonItem({\n        data: buildData(spec),\n        enabled: spec.enabled,\n        getApi,\n        onAction: spec.onAction,\n        onSetup: spec.onSetup,\n        triggersSubmenu: false,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage), {\n        toggling: {\n          toggleClass: tickedClass,\n          toggleOnExecute: false,\n          selected: spec.active\n        }\n      });\n    };\n\n    const autocomplete = renderAutocompleteItem;\n    const separator$3 = renderSeparatorItem;\n    const normal = renderNormalItem;\n    const nested = renderNestedItem;\n    const toggle$1 = renderToggleMenuItem;\n    const fancy = renderFancyMenuItem;\n    const card = renderCardMenuItem;\n\n    const getCoupled = (component, coupleConfig, coupleState, name) => coupleState.getOrCreate(component, coupleConfig, name);\n    const getExistingCoupled = (component, coupleConfig, coupleState, name) => coupleState.getExisting(component, coupleConfig, name);\n\n    var CouplingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getCoupled: getCoupled,\n        getExistingCoupled: getExistingCoupled\n    });\n\n    var CouplingSchema = [requiredOf('others', setOf(Result.value, anyValue()))];\n\n    const init$a = () => {\n      const coupled = {};\n      const lookupCoupled = (coupleConfig, coupledName) => {\n        const available = keys(coupleConfig.others);\n        if (available.length === 0) {\n          throw new Error('Cannot find any known coupled components');\n        } else {\n          return get$g(coupled, coupledName);\n        }\n      };\n      const getOrCreate = (component, coupleConfig, name) => {\n        return lookupCoupled(coupleConfig, name).getOrThunk(() => {\n          const builder = get$g(coupleConfig.others, name).getOrDie('No information found for coupled component: ' + name);\n          const spec = builder(component);\n          const built = component.getSystem().build(spec);\n          coupled[name] = built;\n          return built;\n        });\n      };\n      const getExisting = (component, coupleConfig, name) => {\n        return lookupCoupled(coupleConfig, name).orThunk(() => {\n          get$g(coupleConfig.others, name).getOrDie('No information found for coupled component: ' + name);\n          return Optional.none();\n        });\n      };\n      const readState = constant$1({});\n      return nu$8({\n        readState,\n        getExisting,\n        getOrCreate\n      });\n    };\n\n    var CouplingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$a\n    });\n\n    const Coupling = create$3({\n      fields: CouplingSchema,\n      name: 'coupling',\n      apis: CouplingApis,\n      state: CouplingState\n    });\n\n    const nu$3 = baseFn => {\n      let data = Optional.none();\n      let callbacks = [];\n      const map = f => nu$3(nCallback => {\n        get(data => {\n          nCallback(f(data));\n        });\n      });\n      const get = nCallback => {\n        if (isReady()) {\n          call(nCallback);\n        } else {\n          callbacks.push(nCallback);\n        }\n      };\n      const set = x => {\n        if (!isReady()) {\n          data = Optional.some(x);\n          run(callbacks);\n          callbacks = [];\n        }\n      };\n      const isReady = () => data.isSome();\n      const run = cbs => {\n        each$1(cbs, call);\n      };\n      const call = cb => {\n        data.each(x => {\n          setTimeout(() => {\n            cb(x);\n          }, 0);\n        });\n      };\n      baseFn(set);\n      return {\n        get,\n        map,\n        isReady\n      };\n    };\n    const pure$1 = a => nu$3(callback => {\n      callback(a);\n    });\n    const LazyValue = {\n      nu: nu$3,\n      pure: pure$1\n    };\n\n    const errorReporter = err => {\n      setTimeout(() => {\n        throw err;\n      }, 0);\n    };\n    const make$5 = run => {\n      const get = callback => {\n        run().then(callback, errorReporter);\n      };\n      const map = fab => {\n        return make$5(() => run().then(fab));\n      };\n      const bind = aFutureB => {\n        return make$5(() => run().then(v => aFutureB(v).toPromise()));\n      };\n      const anonBind = futureB => {\n        return make$5(() => run().then(() => futureB.toPromise()));\n      };\n      const toLazy = () => {\n        return LazyValue.nu(get);\n      };\n      const toCached = () => {\n        let cache = null;\n        return make$5(() => {\n          if (cache === null) {\n            cache = run();\n          }\n          return cache;\n        });\n      };\n      const toPromise = run;\n      return {\n        map,\n        bind,\n        anonBind,\n        toLazy,\n        toCached,\n        toPromise,\n        get\n      };\n    };\n    const nu$2 = baseFn => {\n      return make$5(() => new Promise(baseFn));\n    };\n    const pure = a => {\n      return make$5(() => Promise.resolve(a));\n    };\n    const Future = {\n      nu: nu$2,\n      pure\n    };\n\n    const suffix = constant$1('sink');\n    const partType$1 = constant$1(optional({\n      name: suffix(),\n      overrides: constant$1({\n        dom: { tag: 'div' },\n        behaviours: derive$1([Positioning.config({ useFixed: always })]),\n        events: derive$2([\n          cutter(keydown()),\n          cutter(mousedown()),\n          cutter(click())\n        ])\n      })\n    }));\n\n    const getAnchor = (detail, component) => {\n      const hotspot = detail.getHotspot(component).getOr(component);\n      const type = 'hotspot';\n      const overrides = detail.getAnchorOverrides();\n      return detail.layouts.fold(() => ({\n        type,\n        hotspot,\n        overrides\n      }), layouts => ({\n        type,\n        hotspot,\n        overrides,\n        layouts\n      }));\n    };\n    const fetch = (detail, mapFetch, component) => {\n      const fetcher = detail.fetch;\n      return fetcher(component).map(mapFetch);\n    };\n    const openF = (detail, mapFetch, anchor, component, sandbox, externals, highlightOnOpen) => {\n      const futureData = fetch(detail, mapFetch, component);\n      const getLazySink = getSink(component, detail);\n      return futureData.map(tdata => tdata.bind(data => Optional.from(tieredMenu.sketch({\n        ...externals.menu(),\n        uid: generate$5(''),\n        data,\n        highlightOnOpen,\n        onOpenMenu: (tmenu, menu) => {\n          const sink = getLazySink().getOrDie();\n          Positioning.position(sink, menu, { anchor });\n          Sandboxing.decloak(sandbox);\n        },\n        onOpenSubmenu: (tmenu, item, submenu) => {\n          const sink = getLazySink().getOrDie();\n          Positioning.position(sink, submenu, {\n            anchor: {\n              type: 'submenu',\n              item\n            }\n          });\n          Sandboxing.decloak(sandbox);\n        },\n        onRepositionMenu: (tmenu, primaryMenu, submenuTriggers) => {\n          const sink = getLazySink().getOrDie();\n          Positioning.position(sink, primaryMenu, { anchor });\n          each$1(submenuTriggers, st => {\n            Positioning.position(sink, st.triggeredMenu, {\n              anchor: {\n                type: 'submenu',\n                item: st.triggeringItem\n              }\n            });\n          });\n        },\n        onEscape: () => {\n          Focusing.focus(component);\n          Sandboxing.close(sandbox);\n          return Optional.some(true);\n        }\n      }))));\n    };\n    const open = (detail, mapFetch, hotspot, sandbox, externals, onOpenSync, highlightOnOpen) => {\n      const anchor = getAnchor(detail, hotspot);\n      const processed = openF(detail, mapFetch, anchor, hotspot, sandbox, externals, highlightOnOpen);\n      return processed.map(tdata => {\n        tdata.fold(() => {\n          if (Sandboxing.isOpen(sandbox)) {\n            Sandboxing.close(sandbox);\n          }\n        }, data => {\n          Sandboxing.cloak(sandbox);\n          Sandboxing.open(sandbox, data);\n          onOpenSync(sandbox);\n        });\n        return sandbox;\n      });\n    };\n    const close = (detail, mapFetch, component, sandbox, _externals, _onOpenSync, _highlightOnOpen) => {\n      Sandboxing.close(sandbox);\n      return Future.pure(sandbox);\n    };\n    const togglePopup = (detail, mapFetch, hotspot, externals, onOpenSync, highlightOnOpen) => {\n      const sandbox = Coupling.getCoupled(hotspot, 'sandbox');\n      const showing = Sandboxing.isOpen(sandbox);\n      const action = showing ? close : open;\n      return action(detail, mapFetch, hotspot, sandbox, externals, onOpenSync, highlightOnOpen);\n    };\n    const matchWidth = (hotspot, container, useMinWidth) => {\n      const menu = Composing.getCurrent(container).getOr(container);\n      const buttonWidth = get$c(hotspot.element);\n      if (useMinWidth) {\n        set$8(menu.element, 'min-width', buttonWidth + 'px');\n      } else {\n        set$7(menu.element, buttonWidth);\n      }\n    };\n    const getSink = (anyInSystem, sinkDetail) => anyInSystem.getSystem().getByUid(sinkDetail.uid + '-' + suffix()).map(internalSink => () => Result.value(internalSink)).getOrThunk(() => sinkDetail.lazySink.fold(() => () => Result.error(new Error('No internal sink is specified, nor could an external sink be found')), lazySinkFn => () => lazySinkFn(anyInSystem)));\n    const doRepositionMenus = sandbox => {\n      Sandboxing.getState(sandbox).each(tmenu => {\n        tieredMenu.repositionMenus(tmenu);\n      });\n    };\n    const makeSandbox$1 = (detail, hotspot, extras) => {\n      const ariaControls = manager();\n      const onOpen = (component, menu) => {\n        const anchor = getAnchor(detail, hotspot);\n        ariaControls.link(hotspot.element);\n        if (detail.matchWidth) {\n          matchWidth(anchor.hotspot, menu, detail.useMinWidth);\n        }\n        detail.onOpen(anchor, component, menu);\n        if (extras !== undefined && extras.onOpen !== undefined) {\n          extras.onOpen(component, menu);\n        }\n      };\n      const onClose = (component, menu) => {\n        ariaControls.unlink(hotspot.element);\n        if (extras !== undefined && extras.onClose !== undefined) {\n          extras.onClose(component, menu);\n        }\n      };\n      const lazySink = getSink(hotspot, detail);\n      return {\n        dom: {\n          tag: 'div',\n          classes: detail.sandboxClasses,\n          attributes: {\n            id: ariaControls.id,\n            role: 'listbox'\n          }\n        },\n        behaviours: SketchBehaviours.augment(detail.sandboxBehaviours, [\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: hotspot\n            }\n          }),\n          Sandboxing.config({\n            onOpen,\n            onClose,\n            isPartOf: (container, data, queryElem) => {\n              return isPartOf$1(data, queryElem) || isPartOf$1(hotspot, queryElem);\n            },\n            getAttachPoint: () => {\n              return lazySink().getOrDie();\n            }\n          }),\n          Composing.config({\n            find: sandbox => {\n              return Sandboxing.getState(sandbox).bind(menu => Composing.getCurrent(menu));\n            }\n          }),\n          Receiving.config({\n            channels: {\n              ...receivingChannel$1({ isExtraPart: never }),\n              ...receivingChannel({ doReposition: doRepositionMenus })\n            }\n          })\n        ])\n      };\n    };\n    const repositionMenus = comp => {\n      const sandbox = Coupling.getCoupled(comp, 'sandbox');\n      doRepositionMenus(sandbox);\n    };\n\n    const sandboxFields = () => [\n      defaulted('sandboxClasses', []),\n      SketchBehaviours.field('sandboxBehaviours', [\n        Composing,\n        Receiving,\n        Sandboxing,\n        Representing\n      ])\n    ];\n\n    const schema$k = constant$1([\n      required$1('dom'),\n      required$1('fetch'),\n      onHandler('onOpen'),\n      onKeyboardHandler('onExecute'),\n      defaulted('getHotspot', Optional.some),\n      defaulted('getAnchorOverrides', constant$1({})),\n      schema$y(),\n      field('dropdownBehaviours', [\n        Toggling,\n        Coupling,\n        Keying,\n        Focusing\n      ]),\n      required$1('toggleClass'),\n      defaulted('eventOrder', {}),\n      option$3('lazySink'),\n      defaulted('matchWidth', false),\n      defaulted('useMinWidth', false),\n      option$3('role')\n    ].concat(sandboxFields()));\n    const parts$e = constant$1([\n      external({\n        schema: [\n          tieredMenuMarkers(),\n          defaulted('fakeFocus', false)\n        ],\n        name: 'menu',\n        defaults: detail => {\n          return { onExecute: detail.onExecute };\n        }\n      }),\n      partType$1()\n    ]);\n\n    const factory$i = (detail, components, _spec, externals) => {\n      const lookupAttr = attr => get$g(detail.dom, 'attributes').bind(attrs => get$g(attrs, attr));\n      const switchToMenu = sandbox => {\n        Sandboxing.getState(sandbox).each(tmenu => {\n          tieredMenu.highlightPrimary(tmenu);\n        });\n      };\n      const togglePopup$1 = (dropdownComp, onOpenSync, highlightOnOpen) => {\n        return togglePopup(detail, identity, dropdownComp, externals, onOpenSync, highlightOnOpen);\n      };\n      const action = component => {\n        const onOpenSync = switchToMenu;\n        togglePopup$1(component, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n      };\n      const apis = {\n        expand: comp => {\n          if (!Toggling.isOn(comp)) {\n            togglePopup$1(comp, noop, HighlightOnOpen.HighlightNone).get(noop);\n          }\n        },\n        open: comp => {\n          if (!Toggling.isOn(comp)) {\n            togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n          }\n        },\n        refetch: comp => {\n          const optSandbox = Coupling.getExistingCoupled(comp, 'sandbox');\n          return optSandbox.fold(() => {\n            return togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).map(noop);\n          }, sandboxComp => {\n            return open(detail, identity, comp, sandboxComp, externals, noop, HighlightOnOpen.HighlightMenuAndItem).map(noop);\n          });\n        },\n        isOpen: Toggling.isOn,\n        close: comp => {\n          if (Toggling.isOn(comp)) {\n            togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n          }\n        },\n        repositionMenus: comp => {\n          if (Toggling.isOn(comp)) {\n            repositionMenus(comp);\n          }\n        }\n      };\n      const triggerExecute = (comp, _se) => {\n        emitExecute(comp);\n        return Optional.some(true);\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.dropdownBehaviours, [\n          Toggling.config({\n            toggleClass: detail.toggleClass,\n            aria: { mode: 'expanded' }\n          }),\n          Coupling.config({\n            others: {\n              sandbox: hotspot => {\n                return makeSandbox$1(detail, hotspot, {\n                  onOpen: () => Toggling.on(hotspot),\n                  onClose: () => Toggling.off(hotspot)\n                });\n              }\n            }\n          }),\n          Keying.config({\n            mode: 'special',\n            onSpace: triggerExecute,\n            onEnter: triggerExecute,\n            onDown: (comp, _se) => {\n              if (Dropdown.isOpen(comp)) {\n                const sandbox = Coupling.getCoupled(comp, 'sandbox');\n                switchToMenu(sandbox);\n              } else {\n                Dropdown.open(comp);\n              }\n              return Optional.some(true);\n            },\n            onEscape: (comp, _se) => {\n              if (Dropdown.isOpen(comp)) {\n                Dropdown.close(comp);\n                return Optional.some(true);\n              } else {\n                return Optional.none();\n              }\n            }\n          }),\n          Focusing.config({})\n        ]),\n        events: events$a(Optional.some(action)),\n        eventOrder: {\n          ...detail.eventOrder,\n          [execute$5()]: [\n            'disabling',\n            'toggling',\n            'alloy.base.behaviour'\n          ]\n        },\n        apis,\n        domModification: {\n          attributes: {\n            'aria-haspopup': 'true',\n            ...detail.role.fold(() => ({}), role => ({ role })),\n            ...detail.dom.tag === 'button' ? { type: lookupAttr('type').getOr('button') } : {}\n          }\n        }\n      };\n    };\n    const Dropdown = composite({\n      name: 'Dropdown',\n      configFields: schema$k(),\n      partFields: parts$e(),\n      factory: factory$i,\n      apis: {\n        open: (apis, comp) => apis.open(comp),\n        refetch: (apis, comp) => apis.refetch(comp),\n        expand: (apis, comp) => apis.expand(comp),\n        close: (apis, comp) => apis.close(comp),\n        isOpen: (apis, comp) => apis.isOpen(comp),\n        repositionMenus: (apis, comp) => apis.repositionMenus(comp)\n      }\n    });\n\n    const identifyMenuLayout = searchMode => {\n      switch (searchMode.searchMode) {\n      case 'no-search': {\n          return { menuType: 'normal' };\n        }\n      default: {\n          return {\n            menuType: 'searchable',\n            searchMode\n          };\n        }\n      }\n    };\n    const handleRefetchTrigger = originalSandboxComp => {\n      const dropdown = Representing.getValue(originalSandboxComp);\n      const optSearcherState = findWithinSandbox(originalSandboxComp).map(saveState);\n      Dropdown.refetch(dropdown).get(() => {\n        const newSandboxComp = Coupling.getCoupled(dropdown, 'sandbox');\n        optSearcherState.each(searcherState => findWithinSandbox(newSandboxComp).each(inputComp => restoreState(inputComp, searcherState)));\n      });\n    };\n    const handleRedirectToMenuItem = (sandboxComp, se) => {\n      getActiveMenuItemFrom(sandboxComp).each(activeItem => {\n        retargetAndDispatchWith(sandboxComp, activeItem.element, se.event.eventType, se.event.interactionEvent);\n      });\n    };\n    const getActiveMenuItemFrom = sandboxComp => {\n      return Sandboxing.getState(sandboxComp).bind(Highlighting.getHighlighted).bind(Highlighting.getHighlighted);\n    };\n    const getSearchResults = activeMenuComp => {\n      return has(activeMenuComp.element, searchResultsClass) ? Optional.some(activeMenuComp.element) : descendant(activeMenuComp.element, '.' + searchResultsClass);\n    };\n    const updateAriaOnHighlight = (tmenuComp, menuComp, itemComp) => {\n      findWithinMenu(tmenuComp).each(inputComp => {\n        setActiveDescendant(inputComp, itemComp);\n        const optActiveResults = getSearchResults(menuComp);\n        optActiveResults.each(resultsElem => {\n          getOpt(resultsElem, 'id').each(controlledId => set$9(inputComp.element, 'aria-controls', controlledId));\n        });\n      });\n      set$9(itemComp.element, 'aria-selected', 'true');\n    };\n    const updateAriaOnDehighlight = (tmenuComp, menuComp, itemComp) => {\n      set$9(itemComp.element, 'aria-selected', 'false');\n    };\n    const focusSearchField = tmenuComp => {\n      findWithinMenu(tmenuComp).each(searcherComp => Focusing.focus(searcherComp));\n    };\n    const getSearchPattern = dropdownComp => {\n      const optSandboxComp = Coupling.getExistingCoupled(dropdownComp, 'sandbox');\n      return optSandboxComp.bind(findWithinSandbox).map(saveState).map(state => state.fetchPattern).getOr('');\n    };\n\n    var FocusMode;\n    (function (FocusMode) {\n      FocusMode[FocusMode['ContentFocus'] = 0] = 'ContentFocus';\n      FocusMode[FocusMode['UiFocus'] = 1] = 'UiFocus';\n    }(FocusMode || (FocusMode = {})));\n    const createMenuItemFromBridge = (item, itemResponse, backstage, menuHasIcons, isHorizontalMenu) => {\n      const providersBackstage = backstage.shared.providers;\n      const parseForHorizontalMenu = menuitem => !isHorizontalMenu ? menuitem : {\n        ...menuitem,\n        shortcut: Optional.none(),\n        icon: menuitem.text.isSome() ? Optional.none() : menuitem.icon\n      };\n      switch (item.type) {\n      case 'menuitem':\n        return createMenuItem(item).fold(handleError, d => Optional.some(normal(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons)));\n      case 'nestedmenuitem':\n        return createNestedMenuItem(item).fold(handleError, d => Optional.some(nested(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons, isHorizontalMenu)));\n      case 'togglemenuitem':\n        return createToggleMenuItem(item).fold(handleError, d => Optional.some(toggle$1(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons)));\n      case 'separator':\n        return createSeparatorMenuItem(item).fold(handleError, d => Optional.some(separator$3(d)));\n      case 'fancymenuitem':\n        return createFancyMenuItem(item).fold(handleError, d => fancy(d, backstage));\n      default: {\n          console.error('Unknown item in general menu', item);\n          return Optional.none();\n        }\n      }\n    };\n    const createAutocompleteItems = (items, matchText, onItemValueHandler, columns, itemResponse, sharedBackstage, highlightOn) => {\n      const renderText = columns === 1;\n      const renderIcons = !renderText || menuHasIcons(items);\n      return cat(map$2(items, item => {\n        switch (item.type) {\n        case 'separator':\n          return createSeparatorItem(item).fold(handleError, d => Optional.some(separator$3(d)));\n        case 'cardmenuitem':\n          return createCardMenuItem(item).fold(handleError, d => Optional.some(card({\n            ...d,\n            onAction: api => {\n              d.onAction(api);\n              onItemValueHandler(d.value, d.meta);\n            }\n          }, itemResponse, sharedBackstage, {\n            itemBehaviours: tooltipBehaviour(d.meta, sharedBackstage),\n            cardText: {\n              matchText,\n              highlightOn\n            }\n          })));\n        case 'autocompleteitem':\n        default:\n          return createAutocompleterItem(item).fold(handleError, d => Optional.some(autocomplete(d, matchText, renderText, 'normal', onItemValueHandler, itemResponse, sharedBackstage, renderIcons)));\n        }\n      }));\n    };\n    const createPartialMenu = (value, items, itemResponse, backstage, isHorizontalMenu, searchMode) => {\n      const hasIcons = menuHasIcons(items);\n      const alloyItems = cat(map$2(items, item => {\n        const itemHasIcon = i => isHorizontalMenu ? !has$2(i, 'text') : hasIcons;\n        const createItem = i => createMenuItemFromBridge(i, itemResponse, backstage, itemHasIcon(i), isHorizontalMenu);\n        if (item.type === 'nestedmenuitem' && item.getSubmenuItems().length <= 0) {\n          return createItem({\n            ...item,\n            enabled: false\n          });\n        } else {\n          return createItem(item);\n        }\n      }));\n      const menuLayout = identifyMenuLayout(searchMode);\n      const createPartial = isHorizontalMenu ? createHorizontalPartialMenuWithAlloyItems : createPartialMenuWithAlloyItems;\n      return createPartial(value, hasIcons, alloyItems, 1, menuLayout);\n    };\n    const createTieredDataFrom = partialMenu => tieredMenu.singleData(partialMenu.value, partialMenu);\n    const createInlineMenuFrom = (partialMenu, columns, focusMode, presets) => {\n      const movement = deriveMenuMovement(columns, presets);\n      const menuMarkers = markers(presets);\n      return {\n        data: createTieredDataFrom({\n          ...partialMenu,\n          movement,\n          menuBehaviours: SimpleBehaviours.unnamedEvents(columns !== 'auto' ? [] : [runOnAttached((comp, _se) => {\n              detectSize(comp, 4, menuMarkers.item).each(({numColumns, numRows}) => {\n                Keying.setGridSize(comp, numRows, numColumns);\n              });\n            })])\n        }),\n        menu: {\n          markers: markers(presets),\n          fakeFocus: focusMode === FocusMode.ContentFocus\n        }\n      };\n    };\n\n    const getAutocompleterRange = (dom, initRange) => {\n      return detect(SugarElement.fromDom(initRange.startContainer)).map(elm => {\n        const range = dom.createRng();\n        range.selectNode(elm.dom);\n        return range;\n      });\n    };\n    const register$b = (editor, sharedBackstage) => {\n      const processingAction = Cell(false);\n      const activeState = Cell(false);\n      const autocompleter = build$1(InlineView.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-autocompleter']\n        },\n        components: [],\n        fireDismissalEventInstead: {},\n        inlineBehaviours: derive$1([config('dismissAutocompleter', [run$1(dismissRequested(), () => cancelIfNecessary())])]),\n        lazySink: sharedBackstage.getSink\n      }));\n      const isMenuOpen = () => InlineView.isOpen(autocompleter);\n      const isActive = activeState.get;\n      const hideIfNecessary = () => {\n        if (isMenuOpen()) {\n          InlineView.hide(autocompleter);\n        }\n      };\n      const getMenu = () => InlineView.getContent(autocompleter).bind(tmenu => {\n        return get$h(tmenu.components(), 0);\n      });\n      const cancelIfNecessary = () => editor.execCommand('mceAutocompleterClose');\n      const getCombinedItems = matches => {\n        const columns = findMap(matches, m => Optional.from(m.columns)).getOr(1);\n        return bind$3(matches, match => {\n          const choices = match.items;\n          return createAutocompleteItems(choices, match.matchText, (itemValue, itemMeta) => {\n            const nr = editor.selection.getRng();\n            getAutocompleterRange(editor.dom, nr).each(range => {\n              const autocompleterApi = {\n                hide: () => cancelIfNecessary(),\n                reload: fetchOptions => {\n                  hideIfNecessary();\n                  editor.execCommand('mceAutocompleterReload', false, { fetchOptions });\n                }\n              };\n              processingAction.set(true);\n              match.onAction(autocompleterApi, range, itemValue, itemMeta);\n              processingAction.set(false);\n            });\n          }, columns, ItemResponse$1.BUBBLE_TO_SANDBOX, sharedBackstage, match.highlightOn);\n        });\n      };\n      const display = (lookupData, items) => {\n        findIn(SugarElement.fromDom(editor.getBody())).each(element => {\n          const columns = findMap(lookupData, ld => Optional.from(ld.columns)).getOr(1);\n          InlineView.showMenuAt(autocompleter, {\n            anchor: {\n              type: 'node',\n              root: SugarElement.fromDom(editor.getBody()),\n              node: Optional.from(element)\n            }\n          }, createInlineMenuFrom(createPartialMenuWithAlloyItems('autocompleter-value', true, items, columns, { menuType: 'normal' }), columns, FocusMode.ContentFocus, 'normal'));\n        });\n        getMenu().each(Highlighting.highlightFirst);\n      };\n      const updateDisplay = lookupData => {\n        const combinedItems = getCombinedItems(lookupData);\n        if (combinedItems.length > 0) {\n          display(lookupData, combinedItems);\n        } else {\n          hideIfNecessary();\n        }\n      };\n      editor.on('AutocompleterStart', ({lookupData}) => {\n        activeState.set(true);\n        processingAction.set(false);\n        updateDisplay(lookupData);\n      });\n      editor.on('AutocompleterUpdate', ({lookupData}) => updateDisplay(lookupData));\n      editor.on('AutocompleterEnd', () => {\n        hideIfNecessary();\n        activeState.set(false);\n        processingAction.set(false);\n      });\n      const autocompleterUiApi = {\n        cancelIfNecessary,\n        isMenuOpen,\n        isActive,\n        isProcessingAction: processingAction.get,\n        getMenu\n      };\n      AutocompleterEditorEvents.setup(autocompleterUiApi, editor);\n    };\n    const Autocompleter = { register: register$b };\n\n    const closest = (scope, selector, isRoot) => closest$1(scope, selector, isRoot).isSome();\n\n    const DelayedFunction = (fun, delay) => {\n      let ref = null;\n      const schedule = (...args) => {\n        ref = setTimeout(() => {\n          fun.apply(null, args);\n          ref = null;\n        }, delay);\n      };\n      const cancel = () => {\n        if (ref !== null) {\n          clearTimeout(ref);\n          ref = null;\n        }\n      };\n      return {\n        cancel,\n        schedule\n      };\n    };\n\n    const SIGNIFICANT_MOVE = 5;\n    const LONGPRESS_DELAY = 400;\n    const getTouch = event => {\n      const raw = event.raw;\n      if (raw.touches === undefined || raw.touches.length !== 1) {\n        return Optional.none();\n      }\n      return Optional.some(raw.touches[0]);\n    };\n    const isFarEnough = (touch, data) => {\n      const distX = Math.abs(touch.clientX - data.x);\n      const distY = Math.abs(touch.clientY - data.y);\n      return distX > SIGNIFICANT_MOVE || distY > SIGNIFICANT_MOVE;\n    };\n    const monitor = settings => {\n      const startData = value$2();\n      const longpressFired = Cell(false);\n      const longpress$1 = DelayedFunction(event => {\n        settings.triggerEvent(longpress(), event);\n        longpressFired.set(true);\n      }, LONGPRESS_DELAY);\n      const handleTouchstart = event => {\n        getTouch(event).each(touch => {\n          longpress$1.cancel();\n          const data = {\n            x: touch.clientX,\n            y: touch.clientY,\n            target: event.target\n          };\n          longpress$1.schedule(event);\n          longpressFired.set(false);\n          startData.set(data);\n        });\n        return Optional.none();\n      };\n      const handleTouchmove = event => {\n        longpress$1.cancel();\n        getTouch(event).each(touch => {\n          startData.on(data => {\n            if (isFarEnough(touch, data)) {\n              startData.clear();\n            }\n          });\n        });\n        return Optional.none();\n      };\n      const handleTouchend = event => {\n        longpress$1.cancel();\n        const isSame = data => eq(data.target, event.target);\n        return startData.get().filter(isSame).map(_data => {\n          if (longpressFired.get()) {\n            event.prevent();\n            return false;\n          } else {\n            return settings.triggerEvent(tap(), event);\n          }\n        });\n      };\n      const handlers = wrapAll([\n        {\n          key: touchstart(),\n          value: handleTouchstart\n        },\n        {\n          key: touchmove(),\n          value: handleTouchmove\n        },\n        {\n          key: touchend(),\n          value: handleTouchend\n        }\n      ]);\n      const fireIfReady = (event, type) => get$g(handlers, type).bind(handler => handler(event));\n      return { fireIfReady };\n    };\n\n    const isDangerous = event => {\n      const keyEv = event.raw;\n      return keyEv.which === BACKSPACE[0] && !contains$2([\n        'input',\n        'textarea'\n      ], name$3(event.target)) && !closest(event.target, '[contenteditable=\"true\"]');\n    };\n    const setup$d = (container, rawSettings) => {\n      const settings = {\n        stopBackspace: true,\n        ...rawSettings\n      };\n      const pointerEvents = [\n        'touchstart',\n        'touchmove',\n        'touchend',\n        'touchcancel',\n        'gesturestart',\n        'mousedown',\n        'mouseup',\n        'mouseover',\n        'mousemove',\n        'mouseout',\n        'click'\n      ];\n      const tapEvent = monitor(settings);\n      const simpleEvents = map$2(pointerEvents.concat([\n        'selectstart',\n        'input',\n        'contextmenu',\n        'change',\n        'transitionend',\n        'transitioncancel',\n        'drag',\n        'dragstart',\n        'dragend',\n        'dragenter',\n        'dragleave',\n        'dragover',\n        'drop',\n        'keyup'\n      ]), type => bind(container, type, event => {\n        tapEvent.fireIfReady(event, type).each(tapStopped => {\n          if (tapStopped) {\n            event.kill();\n          }\n        });\n        const stopped = settings.triggerEvent(type, event);\n        if (stopped) {\n          event.kill();\n        }\n      }));\n      const pasteTimeout = value$2();\n      const onPaste = bind(container, 'paste', event => {\n        tapEvent.fireIfReady(event, 'paste').each(tapStopped => {\n          if (tapStopped) {\n            event.kill();\n          }\n        });\n        const stopped = settings.triggerEvent('paste', event);\n        if (stopped) {\n          event.kill();\n        }\n        pasteTimeout.set(setTimeout(() => {\n          settings.triggerEvent(postPaste(), event);\n        }, 0));\n      });\n      const onKeydown = bind(container, 'keydown', event => {\n        const stopped = settings.triggerEvent('keydown', event);\n        if (stopped) {\n          event.kill();\n        } else if (settings.stopBackspace && isDangerous(event)) {\n          event.prevent();\n        }\n      });\n      const onFocusIn = bind(container, 'focusin', event => {\n        const stopped = settings.triggerEvent('focusin', event);\n        if (stopped) {\n          event.kill();\n        }\n      });\n      const focusoutTimeout = value$2();\n      const onFocusOut = bind(container, 'focusout', event => {\n        const stopped = settings.triggerEvent('focusout', event);\n        if (stopped) {\n          event.kill();\n        }\n        focusoutTimeout.set(setTimeout(() => {\n          settings.triggerEvent(postBlur(), event);\n        }, 0));\n      });\n      const unbind = () => {\n        each$1(simpleEvents, e => {\n          e.unbind();\n        });\n        onKeydown.unbind();\n        onFocusIn.unbind();\n        onFocusOut.unbind();\n        onPaste.unbind();\n        pasteTimeout.on(clearTimeout);\n        focusoutTimeout.on(clearTimeout);\n      };\n      return { unbind };\n    };\n\n    const derive = (rawEvent, rawTarget) => {\n      const source = get$g(rawEvent, 'target').getOr(rawTarget);\n      return Cell(source);\n    };\n\n    const fromSource = (event, source) => {\n      const stopper = Cell(false);\n      const cutter = Cell(false);\n      const stop = () => {\n        stopper.set(true);\n      };\n      const cut = () => {\n        cutter.set(true);\n      };\n      return {\n        stop,\n        cut,\n        isStopped: stopper.get,\n        isCut: cutter.get,\n        event,\n        setSource: source.set,\n        getSource: source.get\n      };\n    };\n    const fromExternal = event => {\n      const stopper = Cell(false);\n      const stop = () => {\n        stopper.set(true);\n      };\n      return {\n        stop,\n        cut: noop,\n        isStopped: stopper.get,\n        isCut: never,\n        event,\n        setSource: die('Cannot set source of a broadcasted event'),\n        getSource: die('Cannot get source of a broadcasted event')\n      };\n    };\n\n    const adt$1 = Adt.generate([\n      { stopped: [] },\n      { resume: ['element'] },\n      { complete: [] }\n    ]);\n    const doTriggerHandler = (lookup, eventType, rawEvent, target, source, logger) => {\n      const handler = lookup(eventType, target);\n      const simulatedEvent = fromSource(rawEvent, source);\n      return handler.fold(() => {\n        logger.logEventNoHandlers(eventType, target);\n        return adt$1.complete();\n      }, handlerInfo => {\n        const descHandler = handlerInfo.descHandler;\n        const eventHandler = getCurried(descHandler);\n        eventHandler(simulatedEvent);\n        if (simulatedEvent.isStopped()) {\n          logger.logEventStopped(eventType, handlerInfo.element, descHandler.purpose);\n          return adt$1.stopped();\n        } else if (simulatedEvent.isCut()) {\n          logger.logEventCut(eventType, handlerInfo.element, descHandler.purpose);\n          return adt$1.complete();\n        } else {\n          return parent(handlerInfo.element).fold(() => {\n            logger.logNoParent(eventType, handlerInfo.element, descHandler.purpose);\n            return adt$1.complete();\n          }, parent => {\n            logger.logEventResponse(eventType, handlerInfo.element, descHandler.purpose);\n            return adt$1.resume(parent);\n          });\n        }\n      });\n    };\n    const doTriggerOnUntilStopped = (lookup, eventType, rawEvent, rawTarget, source, logger) => doTriggerHandler(lookup, eventType, rawEvent, rawTarget, source, logger).fold(always, parent => doTriggerOnUntilStopped(lookup, eventType, rawEvent, parent, source, logger), never);\n    const triggerHandler = (lookup, eventType, rawEvent, target, logger) => {\n      const source = derive(rawEvent, target);\n      return doTriggerHandler(lookup, eventType, rawEvent, target, source, logger);\n    };\n    const broadcast = (listeners, rawEvent, _logger) => {\n      const simulatedEvent = fromExternal(rawEvent);\n      each$1(listeners, listener => {\n        const descHandler = listener.descHandler;\n        const handler = getCurried(descHandler);\n        handler(simulatedEvent);\n      });\n      return simulatedEvent.isStopped();\n    };\n    const triggerUntilStopped = (lookup, eventType, rawEvent, logger) => triggerOnUntilStopped(lookup, eventType, rawEvent, rawEvent.target, logger);\n    const triggerOnUntilStopped = (lookup, eventType, rawEvent, rawTarget, logger) => {\n      const source = derive(rawEvent, rawTarget);\n      return doTriggerOnUntilStopped(lookup, eventType, rawEvent, rawTarget, source, logger);\n    };\n\n    const eventHandler = (element, descHandler) => ({\n      element,\n      descHandler\n    });\n    const broadcastHandler = (id, handler) => ({\n      id,\n      descHandler: handler\n    });\n    const EventRegistry = () => {\n      const registry = {};\n      const registerId = (extraArgs, id, events) => {\n        each(events, (v, k) => {\n          const handlers = registry[k] !== undefined ? registry[k] : {};\n          handlers[id] = curryArgs(v, extraArgs);\n          registry[k] = handlers;\n        });\n      };\n      const findHandler = (handlers, elem) => read$1(elem).bind(id => get$g(handlers, id)).map(descHandler => eventHandler(elem, descHandler));\n      const filterByType = type => get$g(registry, type).map(handlers => mapToArray(handlers, (f, id) => broadcastHandler(id, f))).getOr([]);\n      const find = (isAboveRoot, type, target) => get$g(registry, type).bind(handlers => closest$4(target, elem => findHandler(handlers, elem), isAboveRoot));\n      const unregisterId = id => {\n        each(registry, (handlersById, _eventName) => {\n          if (has$2(handlersById, id)) {\n            delete handlersById[id];\n          }\n        });\n      };\n      return {\n        registerId,\n        unregisterId,\n        filterByType,\n        find\n      };\n    };\n\n    const Registry = () => {\n      const events = EventRegistry();\n      const components = {};\n      const readOrTag = component => {\n        const elem = component.element;\n        return read$1(elem).getOrThunk(() => write('uid-', component.element));\n      };\n      const failOnDuplicate = (component, tagId) => {\n        const conflict = components[tagId];\n        if (conflict === component) {\n          unregister(component);\n        } else {\n          throw new Error('The tagId \"' + tagId + '\" is already used by: ' + element(conflict.element) + '\\nCannot use it for: ' + element(component.element) + '\\n' + 'The conflicting element is' + (inBody(conflict.element) ? ' ' : ' not ') + 'already in the DOM');\n        }\n      };\n      const register = component => {\n        const tagId = readOrTag(component);\n        if (hasNonNullableKey(components, tagId)) {\n          failOnDuplicate(component, tagId);\n        }\n        const extraArgs = [component];\n        events.registerId(extraArgs, tagId, component.events);\n        components[tagId] = component;\n      };\n      const unregister = component => {\n        read$1(component.element).each(tagId => {\n          delete components[tagId];\n          events.unregisterId(tagId);\n        });\n      };\n      const filter = type => events.filterByType(type);\n      const find = (isAboveRoot, type, target) => events.find(isAboveRoot, type, target);\n      const getById = id => get$g(components, id);\n      return {\n        find,\n        filter,\n        register,\n        unregister,\n        getById\n      };\n    };\n\n    const factory$h = detail => {\n      const {attributes, ...domWithoutAttributes} = detail.dom;\n      return {\n        uid: detail.uid,\n        dom: {\n          tag: 'div',\n          attributes: {\n            role: 'presentation',\n            ...attributes\n          },\n          ...domWithoutAttributes\n        },\n        components: detail.components,\n        behaviours: get$3(detail.containerBehaviours),\n        events: detail.events,\n        domModification: detail.domModification,\n        eventOrder: detail.eventOrder\n      };\n    };\n    const Container = single({\n      name: 'Container',\n      factory: factory$h,\n      configFields: [\n        defaulted('components', []),\n        field('containerBehaviours', []),\n        defaulted('events', {}),\n        defaulted('domModification', {}),\n        defaulted('eventOrder', {})\n      ]\n    });\n\n    const takeover = root => {\n      const isAboveRoot = el => parent(root.element).fold(always, parent => eq(el, parent));\n      const registry = Registry();\n      const lookup = (eventName, target) => registry.find(isAboveRoot, eventName, target);\n      const domEvents = setup$d(root.element, {\n        triggerEvent: (eventName, event) => {\n          return monitorEvent(eventName, event.target, logger => triggerUntilStopped(lookup, eventName, event, logger));\n        }\n      });\n      const systemApi = {\n        debugInfo: constant$1('real'),\n        triggerEvent: (eventName, target, data) => {\n          monitorEvent(eventName, target, logger => triggerOnUntilStopped(lookup, eventName, data, target, logger));\n        },\n        triggerFocus: (target, originator) => {\n          read$1(target).fold(() => {\n            focus$3(target);\n          }, _alloyId => {\n            monitorEvent(focus$4(), target, logger => {\n              triggerHandler(lookup, focus$4(), {\n                originator,\n                kill: noop,\n                prevent: noop,\n                target\n              }, target, logger);\n              return false;\n            });\n          });\n        },\n        triggerEscape: (comp, simulatedEvent) => {\n          systemApi.triggerEvent('keydown', comp.element, simulatedEvent.event);\n        },\n        getByUid: uid => {\n          return getByUid(uid);\n        },\n        getByDom: elem => {\n          return getByDom(elem);\n        },\n        build: build$1,\n        buildOrPatch: buildOrPatch,\n        addToGui: c => {\n          add(c);\n        },\n        removeFromGui: c => {\n          remove(c);\n        },\n        addToWorld: c => {\n          addToWorld(c);\n        },\n        removeFromWorld: c => {\n          removeFromWorld(c);\n        },\n        broadcast: message => {\n          broadcast$1(message);\n        },\n        broadcastOn: (channels, message) => {\n          broadcastOn(channels, message);\n        },\n        broadcastEvent: (eventName, event) => {\n          broadcastEvent(eventName, event);\n        },\n        isConnected: always\n      };\n      const addToWorld = component => {\n        component.connect(systemApi);\n        if (!isText(component.element)) {\n          registry.register(component);\n          each$1(component.components(), addToWorld);\n          systemApi.triggerEvent(systemInit(), component.element, { target: component.element });\n        }\n      };\n      const removeFromWorld = component => {\n        if (!isText(component.element)) {\n          each$1(component.components(), removeFromWorld);\n          registry.unregister(component);\n        }\n        component.disconnect();\n      };\n      const add = component => {\n        attach(root, component);\n      };\n      const remove = component => {\n        detach(component);\n      };\n      const destroy = () => {\n        domEvents.unbind();\n        remove$5(root.element);\n      };\n      const broadcastData = data => {\n        const receivers = registry.filter(receive());\n        each$1(receivers, receiver => {\n          const descHandler = receiver.descHandler;\n          const handler = getCurried(descHandler);\n          handler(data);\n        });\n      };\n      const broadcast$1 = message => {\n        broadcastData({\n          universal: true,\n          data: message\n        });\n      };\n      const broadcastOn = (channels, message) => {\n        broadcastData({\n          universal: false,\n          channels,\n          data: message\n        });\n      };\n      const broadcastEvent = (eventName, event) => {\n        const listeners = registry.filter(eventName);\n        return broadcast(listeners, event);\n      };\n      const getByUid = uid => registry.getById(uid).fold(() => Result.error(new Error('Could not find component with uid: \"' + uid + '\" in system.')), Result.value);\n      const getByDom = elem => {\n        const uid = read$1(elem).getOr('not found');\n        return getByUid(uid);\n      };\n      addToWorld(root);\n      return {\n        root,\n        element: root.element,\n        destroy,\n        add,\n        remove,\n        getByUid,\n        getByDom,\n        addToWorld,\n        removeFromWorld,\n        broadcast: broadcast$1,\n        broadcastOn,\n        broadcastEvent\n      };\n    };\n\n    const renderBar = (spec, backstage) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-bar',\n          'tox-form__controls-h-stack'\n        ]\n      },\n      components: map$2(spec.items, backstage.interpreter)\n    });\n\n    const schema$j = constant$1([\n      defaulted('prefix', 'form-field'),\n      field('fieldBehaviours', [\n        Composing,\n        Representing\n      ])\n    ]);\n    const parts$d = constant$1([\n      optional({\n        schema: [required$1('dom')],\n        name: 'label'\n      }),\n      optional({\n        factory: {\n          sketch: spec => {\n            return {\n              uid: spec.uid,\n              dom: {\n                tag: 'span',\n                styles: { display: 'none' },\n                attributes: { 'aria-hidden': 'true' },\n                innerHtml: spec.text\n              }\n            };\n          }\n        },\n        schema: [required$1('text')],\n        name: 'aria-descriptor'\n      }),\n      required({\n        factory: {\n          sketch: spec => {\n            const excludeFactory = exclude(spec, ['factory']);\n            return spec.factory.sketch(excludeFactory);\n          }\n        },\n        schema: [required$1('factory')],\n        name: 'field'\n      })\n    ]);\n\n    const factory$g = (detail, components, _spec, _externals) => {\n      const behaviours = augment(detail.fieldBehaviours, [\n        Composing.config({\n          find: container => {\n            return getPart(container, detail, 'field');\n          }\n        }),\n        Representing.config({\n          store: {\n            mode: 'manual',\n            getValue: field => {\n              return Composing.getCurrent(field).bind(Representing.getValue);\n            },\n            setValue: (field, value) => {\n              Composing.getCurrent(field).each(current => {\n                Representing.setValue(current, value);\n              });\n            }\n          }\n        })\n      ]);\n      const events = derive$2([runOnAttached((component, _simulatedEvent) => {\n          const ps = getParts(component, detail, [\n            'label',\n            'field',\n            'aria-descriptor'\n          ]);\n          ps.field().each(field => {\n            const id = generate$6(detail.prefix);\n            ps.label().each(label => {\n              set$9(label.element, 'for', id);\n              set$9(field.element, 'id', id);\n            });\n            ps['aria-descriptor']().each(descriptor => {\n              const descriptorId = generate$6(detail.prefix);\n              set$9(descriptor.element, 'id', descriptorId);\n              set$9(field.element, 'aria-describedby', descriptorId);\n            });\n          });\n        })]);\n      const apis = {\n        getField: container => getPart(container, detail, 'field'),\n        getLabel: container => getPart(container, detail, 'label')\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours,\n        events,\n        apis\n      };\n    };\n    const FormField = composite({\n      name: 'FormField',\n      configFields: schema$j(),\n      partFields: parts$d(),\n      factory: factory$g,\n      apis: {\n        getField: (apis, comp) => apis.getField(comp),\n        getLabel: (apis, comp) => apis.getLabel(comp)\n      }\n    });\n\n    const exhibit$2 = (base, tabConfig) => nu$7({\n      attributes: wrapAll([{\n          key: tabConfig.tabAttr,\n          value: 'true'\n        }])\n    });\n\n    var ActiveTabstopping = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$2\n    });\n\n    var TabstopSchema = [defaulted('tabAttr', 'data-alloy-tabstop')];\n\n    const Tabstopping = create$3({\n      fields: TabstopSchema,\n      name: 'tabstopping',\n      active: ActiveTabstopping\n    });\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.html.Entities');\n\n    const renderFormFieldWith = (pLabel, pField, extraClasses, extraBehaviours) => {\n      const spec = renderFormFieldSpecWith(pLabel, pField, extraClasses, extraBehaviours);\n      return FormField.sketch(spec);\n    };\n    const renderFormField = (pLabel, pField) => renderFormFieldWith(pLabel, pField, [], []);\n    const renderFormFieldSpecWith = (pLabel, pField, extraClasses, extraBehaviours) => ({\n      dom: renderFormFieldDomWith(extraClasses),\n      components: pLabel.toArray().concat([pField]),\n      fieldBehaviours: derive$1(extraBehaviours)\n    });\n    const renderFormFieldDom = () => renderFormFieldDomWith([]);\n    const renderFormFieldDomWith = extraClasses => ({\n      tag: 'div',\n      classes: ['tox-form__group'].concat(extraClasses)\n    });\n    const renderLabel$2 = (label, providersBackstage) => FormField.parts.label({\n      dom: {\n        tag: 'label',\n        classes: ['tox-label']\n      },\n      components: [text$1(providersBackstage.translate(label))]\n    });\n\n    const formChangeEvent = generate$6('form-component-change');\n    const formCloseEvent = generate$6('form-close');\n    const formCancelEvent = generate$6('form-cancel');\n    const formActionEvent = generate$6('form-action');\n    const formSubmitEvent = generate$6('form-submit');\n    const formBlockEvent = generate$6('form-block');\n    const formUnblockEvent = generate$6('form-unblock');\n    const formTabChangeEvent = generate$6('form-tabchange');\n    const formResizeEvent = generate$6('form-resize');\n\n    const renderCollection = (spec, providersBackstage, initialData) => {\n      const pLabel = spec.label.map(label => renderLabel$2(label, providersBackstage));\n      const runOnItem = f => (comp, se) => {\n        closest$1(se.event.target, '[data-collection-item-value]').each(target => {\n          f(comp, se, target, get$f(target, 'data-collection-item-value'));\n        });\n      };\n      const setContents = (comp, items) => {\n        const htmlLines = map$2(items, item => {\n          const itemText = global$8.translate(item.text);\n          const textContent = spec.columns === 1 ? `<div class=\"tox-collection__item-label\">${ itemText }</div>` : '';\n          const iconContent = `<div class=\"tox-collection__item-icon\">${ item.icon }</div>`;\n          const mapItemName = {\n            '_': ' ',\n            ' - ': ' ',\n            '-': ' '\n          };\n          const ariaLabel = itemText.replace(/\\_| \\- |\\-/g, match => mapItemName[match]);\n          const disabledClass = providersBackstage.isDisabled() ? ' tox-collection__item--state-disabled' : '';\n          return `<div class=\"tox-collection__item${ disabledClass }\" tabindex=\"-1\" data-collection-item-value=\"${ global$3.encodeAllRaw(item.value) }\" title=\"${ ariaLabel }\" aria-label=\"${ ariaLabel }\">${ iconContent }${ textContent }</div>`;\n        });\n        const chunks = spec.columns !== 'auto' && spec.columns > 1 ? chunk$1(htmlLines, spec.columns) : [htmlLines];\n        const html = map$2(chunks, ch => `<div class=\"tox-collection__group\">${ ch.join('') }</div>`);\n        set$6(comp.element, html.join(''));\n      };\n      const onClick = runOnItem((comp, se, tgt, itemValue) => {\n        se.stop();\n        if (!providersBackstage.isDisabled()) {\n          emitWith(comp, formActionEvent, {\n            name: spec.name,\n            value: itemValue\n          });\n        }\n      });\n      const collectionEvents = [\n        run$1(mouseover(), runOnItem((comp, se, tgt) => {\n          focus$3(tgt);\n        })),\n        run$1(click(), onClick),\n        run$1(tap(), onClick),\n        run$1(focusin(), runOnItem((comp, se, tgt) => {\n          descendant(comp.element, '.' + activeClass).each(currentActive => {\n            remove$2(currentActive, activeClass);\n          });\n          add$2(tgt, activeClass);\n        })),\n        run$1(focusout(), runOnItem(comp => {\n          descendant(comp.element, '.' + activeClass).each(currentActive => {\n            remove$2(currentActive, activeClass);\n          });\n        })),\n        runOnExecute$1(runOnItem((comp, se, tgt, itemValue) => {\n          emitWith(comp, formActionEvent, {\n            name: spec.name,\n            value: itemValue\n          });\n        }))\n      ];\n      const iterCollectionItems = (comp, applyAttributes) => map$2(descendants(comp.element, '.tox-collection__item'), applyAttributes);\n      const pField = FormField.parts.field({\n        dom: {\n          tag: 'div',\n          classes: ['tox-collection'].concat(spec.columns !== 1 ? ['tox-collection--grid'] : ['tox-collection--list'])\n        },\n        components: [],\n        factory: { sketch: identity },\n        behaviours: derive$1([\n          Disabling.config({\n            disabled: providersBackstage.isDisabled,\n            onDisabled: comp => {\n              iterCollectionItems(comp, childElm => {\n                add$2(childElm, 'tox-collection__item--state-disabled');\n                set$9(childElm, 'aria-disabled', true);\n              });\n            },\n            onEnabled: comp => {\n              iterCollectionItems(comp, childElm => {\n                remove$2(childElm, 'tox-collection__item--state-disabled');\n                remove$7(childElm, 'aria-disabled');\n              });\n            }\n          }),\n          receivingConfig(),\n          Replacing.config({}),\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: initialData.getOr([])\n            },\n            onSetValue: (comp, items) => {\n              setContents(comp, items);\n              if (spec.columns === 'auto') {\n                detectSize(comp, 5, 'tox-collection__item').each(({numRows, numColumns}) => {\n                  Keying.setGridSize(comp, numRows, numColumns);\n                });\n              }\n              emit(comp, formResizeEvent);\n            }\n          }),\n          Tabstopping.config({}),\n          Keying.config(deriveCollectionMovement(spec.columns, 'normal')),\n          config('collection-events', collectionEvents)\n        ]),\n        eventOrder: {\n          [execute$5()]: [\n            'disabling',\n            'alloy.base.behaviour',\n            'collection-events'\n          ]\n        }\n      });\n      const extraClasses = ['tox-form__group--collection'];\n      return renderFormFieldWith(pLabel, pField, extraClasses, []);\n    };\n\n    const ariaElements = [\n      'input',\n      'textarea'\n    ];\n    const isAriaElement = elem => {\n      const name = name$3(elem);\n      return contains$2(ariaElements, name);\n    };\n    const markValid = (component, invalidConfig) => {\n      const elem = invalidConfig.getRoot(component).getOr(component.element);\n      remove$2(elem, invalidConfig.invalidClass);\n      invalidConfig.notify.each(notifyInfo => {\n        if (isAriaElement(component.element)) {\n          set$9(component.element, 'aria-invalid', false);\n        }\n        notifyInfo.getContainer(component).each(container => {\n          set$6(container, notifyInfo.validHtml);\n        });\n        notifyInfo.onValid(component);\n      });\n    };\n    const markInvalid = (component, invalidConfig, invalidState, text) => {\n      const elem = invalidConfig.getRoot(component).getOr(component.element);\n      add$2(elem, invalidConfig.invalidClass);\n      invalidConfig.notify.each(notifyInfo => {\n        if (isAriaElement(component.element)) {\n          set$9(component.element, 'aria-invalid', true);\n        }\n        notifyInfo.getContainer(component).each(container => {\n          set$6(container, text);\n        });\n        notifyInfo.onInvalid(component, text);\n      });\n    };\n    const query = (component, invalidConfig, _invalidState) => invalidConfig.validator.fold(() => Future.pure(Result.value(true)), validatorInfo => validatorInfo.validate(component));\n    const run = (component, invalidConfig, invalidState) => {\n      invalidConfig.notify.each(notifyInfo => {\n        notifyInfo.onValidate(component);\n      });\n      return query(component, invalidConfig).map(valid => {\n        if (component.getSystem().isConnected()) {\n          return valid.fold(err => {\n            markInvalid(component, invalidConfig, invalidState, err);\n            return Result.error(err);\n          }, v => {\n            markValid(component, invalidConfig);\n            return Result.value(v);\n          });\n        } else {\n          return Result.error('No longer in system');\n        }\n      });\n    };\n    const isInvalid = (component, invalidConfig) => {\n      const elem = invalidConfig.getRoot(component).getOr(component.element);\n      return has(elem, invalidConfig.invalidClass);\n    };\n\n    var InvalidateApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        markValid: markValid,\n        markInvalid: markInvalid,\n        query: query,\n        run: run,\n        isInvalid: isInvalid\n    });\n\n    const events$8 = (invalidConfig, invalidState) => invalidConfig.validator.map(validatorInfo => derive$2([run$1(validatorInfo.onEvent, component => {\n        run(component, invalidConfig, invalidState).get(identity);\n      })].concat(validatorInfo.validateOnLoad ? [runOnAttached(component => {\n        run(component, invalidConfig, invalidState).get(noop);\n      })] : []))).getOr({});\n\n    var ActiveInvalidate = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$8\n    });\n\n    var InvalidateSchema = [\n      required$1('invalidClass'),\n      defaulted('getRoot', Optional.none),\n      optionObjOf('notify', [\n        defaulted('aria', 'alert'),\n        defaulted('getContainer', Optional.none),\n        defaulted('validHtml', ''),\n        onHandler('onValid'),\n        onHandler('onInvalid'),\n        onHandler('onValidate')\n      ]),\n      optionObjOf('validator', [\n        required$1('validate'),\n        defaulted('onEvent', 'input'),\n        defaulted('validateOnLoad', true)\n      ])\n    ];\n\n    const Invalidating = create$3({\n      fields: InvalidateSchema,\n      name: 'invalidating',\n      active: ActiveInvalidate,\n      apis: InvalidateApis,\n      extra: {\n        validation: validator => {\n          return component => {\n            const v = Representing.getValue(component);\n            return Future.pure(validator(v));\n          };\n        }\n      }\n    });\n\n    const exhibit$1 = () => nu$7({\n      styles: {\n        '-webkit-user-select': 'none',\n        'user-select': 'none',\n        '-ms-user-select': 'none',\n        '-moz-user-select': '-moz-none'\n      },\n      attributes: { unselectable: 'on' }\n    });\n    const events$7 = () => derive$2([abort(selectstart(), always)]);\n\n    var ActiveUnselecting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$7,\n        exhibit: exhibit$1\n    });\n\n    const Unselecting = create$3({\n      fields: [],\n      name: 'unselecting',\n      active: ActiveUnselecting\n    });\n\n    const renderPanelButton = (spec, sharedBackstage) => Dropdown.sketch({\n      dom: spec.dom,\n      components: spec.components,\n      toggleClass: 'mce-active',\n      dropdownBehaviours: derive$1([\n        DisablingConfigs.button(sharedBackstage.providers.isDisabled),\n        receivingConfig(),\n        Unselecting.config({}),\n        Tabstopping.config({})\n      ]),\n      layouts: spec.layouts,\n      sandboxClasses: ['tox-dialog__popups'],\n      lazySink: sharedBackstage.getSink,\n      fetch: comp => Future.nu(callback => spec.fetch(callback)).map(items => Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'), items, value => {\n        spec.onItemAction(comp, value);\n      }, spec.columns, spec.presets, ItemResponse$1.CLOSE_ON_EXECUTE, never, sharedBackstage.providers), { movement: deriveMenuMovement(spec.columns, spec.presets) })))),\n      parts: { menu: part(false, 1, spec.presets) }\n    });\n\n    const colorInputChangeEvent = generate$6('color-input-change');\n    const colorSwatchChangeEvent = generate$6('color-swatch-change');\n    const colorPickerCancelEvent = generate$6('color-picker-cancel');\n    const renderColorInput = (spec, sharedBackstage, colorInputBackstage, initialData) => {\n      const pField = FormField.parts.field({\n        factory: Input,\n        inputClasses: ['tox-textfield'],\n        data: initialData,\n        onSetValue: c => Invalidating.run(c).get(noop),\n        inputBehaviours: derive$1([\n          Disabling.config({ disabled: sharedBackstage.providers.isDisabled }),\n          receivingConfig(),\n          Tabstopping.config({}),\n          Invalidating.config({\n            invalidClass: 'tox-textbox-field-invalid',\n            getRoot: comp => parentElement(comp.element),\n            notify: {\n              onValid: comp => {\n                const val = Representing.getValue(comp);\n                emitWith(comp, colorInputChangeEvent, { color: val });\n              }\n            },\n            validator: {\n              validateOnLoad: false,\n              validate: input => {\n                const inputValue = Representing.getValue(input);\n                if (inputValue.length === 0) {\n                  return Future.pure(Result.value(true));\n                } else {\n                  const span = SugarElement.fromTag('span');\n                  set$8(span, 'background-color', inputValue);\n                  const res = getRaw(span, 'background-color').fold(() => Result.error('blah'), _ => Result.value(inputValue));\n                  return Future.pure(res);\n                }\n              }\n            }\n          })\n        ]),\n        selectOnFocus: false\n      });\n      const pLabel = spec.label.map(label => renderLabel$2(label, sharedBackstage.providers));\n      const emitSwatchChange = (colorBit, value) => {\n        emitWith(colorBit, colorSwatchChangeEvent, { value });\n      };\n      const onItemAction = (comp, value) => {\n        memColorButton.getOpt(comp).each(colorBit => {\n          if (value === 'custom') {\n            colorInputBackstage.colorPicker(valueOpt => {\n              valueOpt.fold(() => emit(colorBit, colorPickerCancelEvent), value => {\n                emitSwatchChange(colorBit, value);\n                addColor(value);\n              });\n            }, '#ffffff');\n          } else if (value === 'remove') {\n            emitSwatchChange(colorBit, '');\n          } else {\n            emitSwatchChange(colorBit, value);\n          }\n        });\n      };\n      const memColorButton = record(renderPanelButton({\n        dom: {\n          tag: 'span',\n          attributes: { 'aria-label': sharedBackstage.providers.translate('Color swatch') }\n        },\n        layouts: {\n          onRtl: () => [\n            southwest$2,\n            southeast$2,\n            south$2\n          ],\n          onLtr: () => [\n            southeast$2,\n            southwest$2,\n            south$2\n          ]\n        },\n        components: [],\n        fetch: getFetch$1(colorInputBackstage.getColors(), colorInputBackstage.hasCustomColors()),\n        columns: colorInputBackstage.getColorCols(),\n        presets: 'color',\n        onItemAction\n      }, sharedBackstage));\n      return FormField.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: pLabel.toArray().concat([{\n            dom: {\n              tag: 'div',\n              classes: ['tox-color-input']\n            },\n            components: [\n              pField,\n              memColorButton.asSpec()\n            ]\n          }]),\n        fieldBehaviours: derive$1([config('form-field-events', [\n            run$1(colorInputChangeEvent, (comp, se) => {\n              memColorButton.getOpt(comp).each(colorButton => {\n                set$8(colorButton.element, 'background-color', se.event.color);\n              });\n              emitWith(comp, formChangeEvent, { name: spec.name });\n            }),\n            run$1(colorSwatchChangeEvent, (comp, se) => {\n              FormField.getField(comp).each(field => {\n                Representing.setValue(field, se.event.value);\n                Composing.getCurrent(comp).each(Focusing.focus);\n              });\n            }),\n            run$1(colorPickerCancelEvent, (comp, _se) => {\n              FormField.getField(comp).each(_field => {\n                Composing.getCurrent(comp).each(Focusing.focus);\n              });\n            })\n          ])])\n      });\n    };\n\n    const labelPart = optional({\n      schema: [required$1('dom')],\n      name: 'label'\n    });\n    const edgePart = name => optional({\n      name: '' + name + '-edge',\n      overrides: detail => {\n        const action = detail.model.manager.edgeActions[name];\n        return action.fold(() => ({}), a => ({\n          events: derive$2([\n            runActionExtra(touchstart(), (comp, se, d) => a(comp, d), [detail]),\n            runActionExtra(mousedown(), (comp, se, d) => a(comp, d), [detail]),\n            runActionExtra(mousemove(), (comp, se, det) => {\n              if (det.mouseIsDown.get()) {\n                a(comp, det);\n              }\n            }, [detail])\n          ])\n        }));\n      }\n    });\n    const tlEdgePart = edgePart('top-left');\n    const tedgePart = edgePart('top');\n    const trEdgePart = edgePart('top-right');\n    const redgePart = edgePart('right');\n    const brEdgePart = edgePart('bottom-right');\n    const bedgePart = edgePart('bottom');\n    const blEdgePart = edgePart('bottom-left');\n    const ledgePart = edgePart('left');\n    const thumbPart = required({\n      name: 'thumb',\n      defaults: constant$1({ dom: { styles: { position: 'absolute' } } }),\n      overrides: detail => {\n        return {\n          events: derive$2([\n            redirectToPart(touchstart(), detail, 'spectrum'),\n            redirectToPart(touchmove(), detail, 'spectrum'),\n            redirectToPart(touchend(), detail, 'spectrum'),\n            redirectToPart(mousedown(), detail, 'spectrum'),\n            redirectToPart(mousemove(), detail, 'spectrum'),\n            redirectToPart(mouseup(), detail, 'spectrum')\n          ])\n        };\n      }\n    });\n    const spectrumPart = required({\n      schema: [customField('mouseIsDown', () => Cell(false))],\n      name: 'spectrum',\n      overrides: detail => {\n        const modelDetail = detail.model;\n        const model = modelDetail.manager;\n        const setValueFrom = (component, simulatedEvent) => model.getValueFromEvent(simulatedEvent).map(value => model.setValueFrom(component, detail, value));\n        return {\n          behaviours: derive$1([\n            Keying.config({\n              mode: 'special',\n              onLeft: spectrum => model.onLeft(spectrum, detail),\n              onRight: spectrum => model.onRight(spectrum, detail),\n              onUp: spectrum => model.onUp(spectrum, detail),\n              onDown: spectrum => model.onDown(spectrum, detail)\n            }),\n            Focusing.config({})\n          ]),\n          events: derive$2([\n            run$1(touchstart(), setValueFrom),\n            run$1(touchmove(), setValueFrom),\n            run$1(mousedown(), setValueFrom),\n            run$1(mousemove(), (spectrum, se) => {\n              if (detail.mouseIsDown.get()) {\n                setValueFrom(spectrum, se);\n              }\n            })\n          ])\n        };\n      }\n    });\n    var SliderParts = [\n      labelPart,\n      ledgePart,\n      redgePart,\n      tedgePart,\n      bedgePart,\n      tlEdgePart,\n      trEdgePart,\n      blEdgePart,\n      brEdgePart,\n      thumbPart,\n      spectrumPart\n    ];\n\n    const _sliderChangeEvent = 'slider.change.value';\n    const sliderChangeEvent = constant$1(_sliderChangeEvent);\n    const isTouchEvent$2 = evt => evt.type.indexOf('touch') !== -1;\n    const getEventSource = simulatedEvent => {\n      const evt = simulatedEvent.event.raw;\n      if (isTouchEvent$2(evt)) {\n        const touchEvent = evt;\n        return touchEvent.touches !== undefined && touchEvent.touches.length === 1 ? Optional.some(touchEvent.touches[0]).map(t => SugarPosition(t.clientX, t.clientY)) : Optional.none();\n      } else {\n        const mouseEvent = evt;\n        return mouseEvent.clientX !== undefined ? Optional.some(mouseEvent).map(me => SugarPosition(me.clientX, me.clientY)) : Optional.none();\n      }\n    };\n\n    const t = 'top', r = 'right', b = 'bottom', l = 'left';\n    const minX = detail => detail.model.minX;\n    const minY = detail => detail.model.minY;\n    const min1X = detail => detail.model.minX - 1;\n    const min1Y = detail => detail.model.minY - 1;\n    const maxX = detail => detail.model.maxX;\n    const maxY = detail => detail.model.maxY;\n    const max1X = detail => detail.model.maxX + 1;\n    const max1Y = detail => detail.model.maxY + 1;\n    const range = (detail, max, min) => max(detail) - min(detail);\n    const xRange = detail => range(detail, maxX, minX);\n    const yRange = detail => range(detail, maxY, minY);\n    const halfX = detail => xRange(detail) / 2;\n    const halfY = detail => yRange(detail) / 2;\n    const step = detail => detail.stepSize;\n    const snap = detail => detail.snapToGrid;\n    const snapStart = detail => detail.snapStart;\n    const rounded = detail => detail.rounded;\n    const hasEdge = (detail, edgeName) => detail[edgeName + '-edge'] !== undefined;\n    const hasLEdge = detail => hasEdge(detail, l);\n    const hasREdge = detail => hasEdge(detail, r);\n    const hasTEdge = detail => hasEdge(detail, t);\n    const hasBEdge = detail => hasEdge(detail, b);\n    const currentValue = detail => detail.model.value.get();\n\n    const xyValue = (x, y) => ({\n      x,\n      y\n    });\n    const fireSliderChange$3 = (component, value) => {\n      emitWith(component, sliderChangeEvent(), { value });\n    };\n    const setToTLEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(min1X(detail), min1Y(detail)));\n    };\n    const setToTEdge = (edge, detail) => {\n      fireSliderChange$3(edge, min1Y(detail));\n    };\n    const setToTEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(halfX(detail), min1Y(detail)));\n    };\n    const setToTREdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(max1X(detail), min1Y(detail)));\n    };\n    const setToREdge = (edge, detail) => {\n      fireSliderChange$3(edge, max1X(detail));\n    };\n    const setToREdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(max1X(detail), halfY(detail)));\n    };\n    const setToBREdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(max1X(detail), max1Y(detail)));\n    };\n    const setToBEdge = (edge, detail) => {\n      fireSliderChange$3(edge, max1Y(detail));\n    };\n    const setToBEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(halfX(detail), max1Y(detail)));\n    };\n    const setToBLEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(min1X(detail), max1Y(detail)));\n    };\n    const setToLEdge = (edge, detail) => {\n      fireSliderChange$3(edge, min1X(detail));\n    };\n    const setToLEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(min1X(detail), halfY(detail)));\n    };\n\n    const reduceBy = (value, min, max, step) => {\n      if (value < min) {\n        return value;\n      } else if (value > max) {\n        return max;\n      } else if (value === min) {\n        return min - 1;\n      } else {\n        return Math.max(min, value - step);\n      }\n    };\n    const increaseBy = (value, min, max, step) => {\n      if (value > max) {\n        return value;\n      } else if (value < min) {\n        return min;\n      } else if (value === max) {\n        return max + 1;\n      } else {\n        return Math.min(max, value + step);\n      }\n    };\n    const capValue = (value, min, max) => Math.max(min, Math.min(max, value));\n    const snapValueOf = (value, min, max, step, snapStart) => snapStart.fold(() => {\n      const initValue = value - min;\n      const extraValue = Math.round(initValue / step) * step;\n      return capValue(min + extraValue, min - 1, max + 1);\n    }, start => {\n      const remainder = (value - start) % step;\n      const adjustment = Math.round(remainder / step);\n      const rawSteps = Math.floor((value - start) / step);\n      const maxSteps = Math.floor((max - start) / step);\n      const numSteps = Math.min(maxSteps, rawSteps + adjustment);\n      const r = start + numSteps * step;\n      return Math.max(start, r);\n    });\n    const findOffsetOf = (value, min, max) => Math.min(max, Math.max(value, min)) - min;\n    const findValueOf = args => {\n      const {min, max, range, value, step, snap, snapStart, rounded, hasMinEdge, hasMaxEdge, minBound, maxBound, screenRange} = args;\n      const capMin = hasMinEdge ? min - 1 : min;\n      const capMax = hasMaxEdge ? max + 1 : max;\n      if (value < minBound) {\n        return capMin;\n      } else if (value > maxBound) {\n        return capMax;\n      } else {\n        const offset = findOffsetOf(value, minBound, maxBound);\n        const newValue = capValue(offset / screenRange * range + min, capMin, capMax);\n        if (snap && newValue >= min && newValue <= max) {\n          return snapValueOf(newValue, min, max, step, snapStart);\n        } else if (rounded) {\n          return Math.round(newValue);\n        } else {\n          return newValue;\n        }\n      }\n    };\n    const findOffsetOfValue$2 = args => {\n      const {min, max, range, value, hasMinEdge, hasMaxEdge, maxBound, maxOffset, centerMinEdge, centerMaxEdge} = args;\n      if (value < min) {\n        return hasMinEdge ? 0 : centerMinEdge;\n      } else if (value > max) {\n        return hasMaxEdge ? maxBound : centerMaxEdge;\n      } else {\n        return (value - min) / range * maxOffset;\n      }\n    };\n\n    const top = 'top', right = 'right', bottom = 'bottom', left = 'left', width = 'width', height = 'height';\n    const getBounds = component => component.element.dom.getBoundingClientRect();\n    const getBoundsProperty = (bounds, property) => bounds[property];\n    const getMinXBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, left);\n    };\n    const getMaxXBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, right);\n    };\n    const getMinYBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, top);\n    };\n    const getMaxYBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, bottom);\n    };\n    const getXScreenRange = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, width);\n    };\n    const getYScreenRange = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, height);\n    };\n    const getCenterOffsetOf = (componentMinEdge, componentMaxEdge, spectrumMinEdge) => (componentMinEdge + componentMaxEdge) / 2 - spectrumMinEdge;\n    const getXCenterOffSetOf = (component, spectrum) => {\n      const componentBounds = getBounds(component);\n      const spectrumBounds = getBounds(spectrum);\n      const componentMinEdge = getBoundsProperty(componentBounds, left);\n      const componentMaxEdge = getBoundsProperty(componentBounds, right);\n      const spectrumMinEdge = getBoundsProperty(spectrumBounds, left);\n      return getCenterOffsetOf(componentMinEdge, componentMaxEdge, spectrumMinEdge);\n    };\n    const getYCenterOffSetOf = (component, spectrum) => {\n      const componentBounds = getBounds(component);\n      const spectrumBounds = getBounds(spectrum);\n      const componentMinEdge = getBoundsProperty(componentBounds, top);\n      const componentMaxEdge = getBoundsProperty(componentBounds, bottom);\n      const spectrumMinEdge = getBoundsProperty(spectrumBounds, top);\n      return getCenterOffsetOf(componentMinEdge, componentMaxEdge, spectrumMinEdge);\n    };\n\n    const fireSliderChange$2 = (spectrum, value) => {\n      emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    const findValueOfOffset$1 = (spectrum, detail, left) => {\n      const args = {\n        min: minX(detail),\n        max: maxX(detail),\n        range: xRange(detail),\n        value: left,\n        step: step(detail),\n        snap: snap(detail),\n        snapStart: snapStart(detail),\n        rounded: rounded(detail),\n        hasMinEdge: hasLEdge(detail),\n        hasMaxEdge: hasREdge(detail),\n        minBound: getMinXBounds(spectrum),\n        maxBound: getMaxXBounds(spectrum),\n        screenRange: getXScreenRange(spectrum)\n      };\n      return findValueOf(args);\n    };\n    const setValueFrom$2 = (spectrum, detail, value) => {\n      const xValue = findValueOfOffset$1(spectrum, detail, value);\n      const sliderVal = xValue;\n      fireSliderChange$2(spectrum, sliderVal);\n      return xValue;\n    };\n    const setToMin$2 = (spectrum, detail) => {\n      const min = minX(detail);\n      fireSliderChange$2(spectrum, min);\n    };\n    const setToMax$2 = (spectrum, detail) => {\n      const max = maxX(detail);\n      fireSliderChange$2(spectrum, max);\n    };\n    const moveBy$2 = (direction, spectrum, detail) => {\n      const f = direction > 0 ? increaseBy : reduceBy;\n      const xValue = f(currentValue(detail), minX(detail), maxX(detail), step(detail));\n      fireSliderChange$2(spectrum, xValue);\n      return Optional.some(xValue);\n    };\n    const handleMovement$2 = direction => (spectrum, detail) => moveBy$2(direction, spectrum, detail).map(always);\n    const getValueFromEvent$2 = simulatedEvent => {\n      const pos = getEventSource(simulatedEvent);\n      return pos.map(p => p.left);\n    };\n    const findOffsetOfValue$1 = (spectrum, detail, value, minEdge, maxEdge) => {\n      const minOffset = 0;\n      const maxOffset = getXScreenRange(spectrum);\n      const centerMinEdge = minEdge.bind(edge => Optional.some(getXCenterOffSetOf(edge, spectrum))).getOr(minOffset);\n      const centerMaxEdge = maxEdge.bind(edge => Optional.some(getXCenterOffSetOf(edge, spectrum))).getOr(maxOffset);\n      const args = {\n        min: minX(detail),\n        max: maxX(detail),\n        range: xRange(detail),\n        value,\n        hasMinEdge: hasLEdge(detail),\n        hasMaxEdge: hasREdge(detail),\n        minBound: getMinXBounds(spectrum),\n        minOffset,\n        maxBound: getMaxXBounds(spectrum),\n        maxOffset,\n        centerMinEdge,\n        centerMaxEdge\n      };\n      return findOffsetOfValue$2(args);\n    };\n    const findPositionOfValue$1 = (slider, spectrum, value, minEdge, maxEdge, detail) => {\n      const offset = findOffsetOfValue$1(spectrum, detail, value, minEdge, maxEdge);\n      return getMinXBounds(spectrum) - getMinXBounds(slider) + offset;\n    };\n    const setPositionFromValue$2 = (slider, thumb, detail, edges) => {\n      const value = currentValue(detail);\n      const pos = findPositionOfValue$1(slider, edges.getSpectrum(slider), value, edges.getLeftEdge(slider), edges.getRightEdge(slider), detail);\n      const thumbRadius = get$c(thumb.element) / 2;\n      set$8(thumb.element, 'left', pos - thumbRadius + 'px');\n    };\n    const onLeft$2 = handleMovement$2(-1);\n    const onRight$2 = handleMovement$2(1);\n    const onUp$2 = Optional.none;\n    const onDown$2 = Optional.none;\n    const edgeActions$2 = {\n      'top-left': Optional.none(),\n      'top': Optional.none(),\n      'top-right': Optional.none(),\n      'right': Optional.some(setToREdge),\n      'bottom-right': Optional.none(),\n      'bottom': Optional.none(),\n      'bottom-left': Optional.none(),\n      'left': Optional.some(setToLEdge)\n    };\n\n    var HorizontalModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom$2,\n        setToMin: setToMin$2,\n        setToMax: setToMax$2,\n        findValueOfOffset: findValueOfOffset$1,\n        getValueFromEvent: getValueFromEvent$2,\n        findPositionOfValue: findPositionOfValue$1,\n        setPositionFromValue: setPositionFromValue$2,\n        onLeft: onLeft$2,\n        onRight: onRight$2,\n        onUp: onUp$2,\n        onDown: onDown$2,\n        edgeActions: edgeActions$2\n    });\n\n    const fireSliderChange$1 = (spectrum, value) => {\n      emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    const findValueOfOffset = (spectrum, detail, top) => {\n      const args = {\n        min: minY(detail),\n        max: maxY(detail),\n        range: yRange(detail),\n        value: top,\n        step: step(detail),\n        snap: snap(detail),\n        snapStart: snapStart(detail),\n        rounded: rounded(detail),\n        hasMinEdge: hasTEdge(detail),\n        hasMaxEdge: hasBEdge(detail),\n        minBound: getMinYBounds(spectrum),\n        maxBound: getMaxYBounds(spectrum),\n        screenRange: getYScreenRange(spectrum)\n      };\n      return findValueOf(args);\n    };\n    const setValueFrom$1 = (spectrum, detail, value) => {\n      const yValue = findValueOfOffset(spectrum, detail, value);\n      const sliderVal = yValue;\n      fireSliderChange$1(spectrum, sliderVal);\n      return yValue;\n    };\n    const setToMin$1 = (spectrum, detail) => {\n      const min = minY(detail);\n      fireSliderChange$1(spectrum, min);\n    };\n    const setToMax$1 = (spectrum, detail) => {\n      const max = maxY(detail);\n      fireSliderChange$1(spectrum, max);\n    };\n    const moveBy$1 = (direction, spectrum, detail) => {\n      const f = direction > 0 ? increaseBy : reduceBy;\n      const yValue = f(currentValue(detail), minY(detail), maxY(detail), step(detail));\n      fireSliderChange$1(spectrum, yValue);\n      return Optional.some(yValue);\n    };\n    const handleMovement$1 = direction => (spectrum, detail) => moveBy$1(direction, spectrum, detail).map(always);\n    const getValueFromEvent$1 = simulatedEvent => {\n      const pos = getEventSource(simulatedEvent);\n      return pos.map(p => {\n        return p.top;\n      });\n    };\n    const findOffsetOfValue = (spectrum, detail, value, minEdge, maxEdge) => {\n      const minOffset = 0;\n      const maxOffset = getYScreenRange(spectrum);\n      const centerMinEdge = minEdge.bind(edge => Optional.some(getYCenterOffSetOf(edge, spectrum))).getOr(minOffset);\n      const centerMaxEdge = maxEdge.bind(edge => Optional.some(getYCenterOffSetOf(edge, spectrum))).getOr(maxOffset);\n      const args = {\n        min: minY(detail),\n        max: maxY(detail),\n        range: yRange(detail),\n        value,\n        hasMinEdge: hasTEdge(detail),\n        hasMaxEdge: hasBEdge(detail),\n        minBound: getMinYBounds(spectrum),\n        minOffset,\n        maxBound: getMaxYBounds(spectrum),\n        maxOffset,\n        centerMinEdge,\n        centerMaxEdge\n      };\n      return findOffsetOfValue$2(args);\n    };\n    const findPositionOfValue = (slider, spectrum, value, minEdge, maxEdge, detail) => {\n      const offset = findOffsetOfValue(spectrum, detail, value, minEdge, maxEdge);\n      return getMinYBounds(spectrum) - getMinYBounds(slider) + offset;\n    };\n    const setPositionFromValue$1 = (slider, thumb, detail, edges) => {\n      const value = currentValue(detail);\n      const pos = findPositionOfValue(slider, edges.getSpectrum(slider), value, edges.getTopEdge(slider), edges.getBottomEdge(slider), detail);\n      const thumbRadius = get$d(thumb.element) / 2;\n      set$8(thumb.element, 'top', pos - thumbRadius + 'px');\n    };\n    const onLeft$1 = Optional.none;\n    const onRight$1 = Optional.none;\n    const onUp$1 = handleMovement$1(-1);\n    const onDown$1 = handleMovement$1(1);\n    const edgeActions$1 = {\n      'top-left': Optional.none(),\n      'top': Optional.some(setToTEdge),\n      'top-right': Optional.none(),\n      'right': Optional.none(),\n      'bottom-right': Optional.none(),\n      'bottom': Optional.some(setToBEdge),\n      'bottom-left': Optional.none(),\n      'left': Optional.none()\n    };\n\n    var VerticalModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom$1,\n        setToMin: setToMin$1,\n        setToMax: setToMax$1,\n        findValueOfOffset: findValueOfOffset,\n        getValueFromEvent: getValueFromEvent$1,\n        findPositionOfValue: findPositionOfValue,\n        setPositionFromValue: setPositionFromValue$1,\n        onLeft: onLeft$1,\n        onRight: onRight$1,\n        onUp: onUp$1,\n        onDown: onDown$1,\n        edgeActions: edgeActions$1\n    });\n\n    const fireSliderChange = (spectrum, value) => {\n      emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    const sliderValue = (x, y) => ({\n      x,\n      y\n    });\n    const setValueFrom = (spectrum, detail, value) => {\n      const xValue = findValueOfOffset$1(spectrum, detail, value.left);\n      const yValue = findValueOfOffset(spectrum, detail, value.top);\n      const val = sliderValue(xValue, yValue);\n      fireSliderChange(spectrum, val);\n      return val;\n    };\n    const moveBy = (direction, isVerticalMovement, spectrum, detail) => {\n      const f = direction > 0 ? increaseBy : reduceBy;\n      const xValue = isVerticalMovement ? currentValue(detail).x : f(currentValue(detail).x, minX(detail), maxX(detail), step(detail));\n      const yValue = !isVerticalMovement ? currentValue(detail).y : f(currentValue(detail).y, minY(detail), maxY(detail), step(detail));\n      fireSliderChange(spectrum, sliderValue(xValue, yValue));\n      return Optional.some(xValue);\n    };\n    const handleMovement = (direction, isVerticalMovement) => (spectrum, detail) => moveBy(direction, isVerticalMovement, spectrum, detail).map(always);\n    const setToMin = (spectrum, detail) => {\n      const mX = minX(detail);\n      const mY = minY(detail);\n      fireSliderChange(spectrum, sliderValue(mX, mY));\n    };\n    const setToMax = (spectrum, detail) => {\n      const mX = maxX(detail);\n      const mY = maxY(detail);\n      fireSliderChange(spectrum, sliderValue(mX, mY));\n    };\n    const getValueFromEvent = simulatedEvent => getEventSource(simulatedEvent);\n    const setPositionFromValue = (slider, thumb, detail, edges) => {\n      const value = currentValue(detail);\n      const xPos = findPositionOfValue$1(slider, edges.getSpectrum(slider), value.x, edges.getLeftEdge(slider), edges.getRightEdge(slider), detail);\n      const yPos = findPositionOfValue(slider, edges.getSpectrum(slider), value.y, edges.getTopEdge(slider), edges.getBottomEdge(slider), detail);\n      const thumbXRadius = get$c(thumb.element) / 2;\n      const thumbYRadius = get$d(thumb.element) / 2;\n      set$8(thumb.element, 'left', xPos - thumbXRadius + 'px');\n      set$8(thumb.element, 'top', yPos - thumbYRadius + 'px');\n    };\n    const onLeft = handleMovement(-1, false);\n    const onRight = handleMovement(1, false);\n    const onUp = handleMovement(-1, true);\n    const onDown = handleMovement(1, true);\n    const edgeActions = {\n      'top-left': Optional.some(setToTLEdgeXY),\n      'top': Optional.some(setToTEdgeXY),\n      'top-right': Optional.some(setToTREdgeXY),\n      'right': Optional.some(setToREdgeXY),\n      'bottom-right': Optional.some(setToBREdgeXY),\n      'bottom': Optional.some(setToBEdgeXY),\n      'bottom-left': Optional.some(setToBLEdgeXY),\n      'left': Optional.some(setToLEdgeXY)\n    };\n\n    var TwoDModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom,\n        setToMin: setToMin,\n        setToMax: setToMax,\n        getValueFromEvent: getValueFromEvent,\n        setPositionFromValue: setPositionFromValue,\n        onLeft: onLeft,\n        onRight: onRight,\n        onUp: onUp,\n        onDown: onDown,\n        edgeActions: edgeActions\n    });\n\n    const SliderSchema = [\n      defaulted('stepSize', 1),\n      defaulted('onChange', noop),\n      defaulted('onChoose', noop),\n      defaulted('onInit', noop),\n      defaulted('onDragStart', noop),\n      defaulted('onDragEnd', noop),\n      defaulted('snapToGrid', false),\n      defaulted('rounded', true),\n      option$3('snapStart'),\n      requiredOf('model', choose$1('mode', {\n        x: [\n          defaulted('minX', 0),\n          defaulted('maxX', 100),\n          customField('value', spec => Cell(spec.mode.minX)),\n          required$1('getInitialValue'),\n          output$1('manager', HorizontalModel)\n        ],\n        y: [\n          defaulted('minY', 0),\n          defaulted('maxY', 100),\n          customField('value', spec => Cell(spec.mode.minY)),\n          required$1('getInitialValue'),\n          output$1('manager', VerticalModel)\n        ],\n        xy: [\n          defaulted('minX', 0),\n          defaulted('maxX', 100),\n          defaulted('minY', 0),\n          defaulted('maxY', 100),\n          customField('value', spec => Cell({\n            x: spec.mode.minX,\n            y: spec.mode.minY\n          })),\n          required$1('getInitialValue'),\n          output$1('manager', TwoDModel)\n        ]\n      })),\n      field('sliderBehaviours', [\n        Keying,\n        Representing\n      ]),\n      customField('mouseIsDown', () => Cell(false))\n    ];\n\n    const sketch$2 = (detail, components, _spec, _externals) => {\n      const getThumb = component => getPartOrDie(component, detail, 'thumb');\n      const getSpectrum = component => getPartOrDie(component, detail, 'spectrum');\n      const getLeftEdge = component => getPart(component, detail, 'left-edge');\n      const getRightEdge = component => getPart(component, detail, 'right-edge');\n      const getTopEdge = component => getPart(component, detail, 'top-edge');\n      const getBottomEdge = component => getPart(component, detail, 'bottom-edge');\n      const modelDetail = detail.model;\n      const model = modelDetail.manager;\n      const refresh = (slider, thumb) => {\n        model.setPositionFromValue(slider, thumb, detail, {\n          getLeftEdge,\n          getRightEdge,\n          getTopEdge,\n          getBottomEdge,\n          getSpectrum\n        });\n      };\n      const setValue = (slider, newValue) => {\n        modelDetail.value.set(newValue);\n        const thumb = getThumb(slider);\n        refresh(slider, thumb);\n      };\n      const changeValue = (slider, newValue) => {\n        setValue(slider, newValue);\n        const thumb = getThumb(slider);\n        detail.onChange(slider, thumb, newValue);\n        return Optional.some(true);\n      };\n      const resetToMin = slider => {\n        model.setToMin(slider, detail);\n      };\n      const resetToMax = slider => {\n        model.setToMax(slider, detail);\n      };\n      const choose = slider => {\n        const fireOnChoose = () => {\n          getPart(slider, detail, 'thumb').each(thumb => {\n            const value = modelDetail.value.get();\n            detail.onChoose(slider, thumb, value);\n          });\n        };\n        const wasDown = detail.mouseIsDown.get();\n        detail.mouseIsDown.set(false);\n        if (wasDown) {\n          fireOnChoose();\n        }\n      };\n      const onDragStart = (slider, simulatedEvent) => {\n        simulatedEvent.stop();\n        detail.mouseIsDown.set(true);\n        detail.onDragStart(slider, getThumb(slider));\n      };\n      const onDragEnd = (slider, simulatedEvent) => {\n        simulatedEvent.stop();\n        detail.onDragEnd(slider, getThumb(slider));\n        choose(slider);\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.sliderBehaviours, [\n          Keying.config({\n            mode: 'special',\n            focusIn: slider => {\n              return getPart(slider, detail, 'spectrum').map(Keying.focusIn).map(always);\n            }\n          }),\n          Representing.config({\n            store: {\n              mode: 'manual',\n              getValue: _ => {\n                return modelDetail.value.get();\n              },\n              setValue\n            }\n          }),\n          Receiving.config({ channels: { [mouseReleased()]: { onReceive: choose } } })\n        ]),\n        events: derive$2([\n          run$1(sliderChangeEvent(), (slider, simulatedEvent) => {\n            changeValue(slider, simulatedEvent.event.value);\n          }),\n          runOnAttached((slider, _simulatedEvent) => {\n            const getInitial = modelDetail.getInitialValue();\n            modelDetail.value.set(getInitial);\n            const thumb = getThumb(slider);\n            refresh(slider, thumb);\n            const spectrum = getSpectrum(slider);\n            detail.onInit(slider, thumb, spectrum, modelDetail.value.get());\n          }),\n          run$1(touchstart(), onDragStart),\n          run$1(touchend(), onDragEnd),\n          run$1(mousedown(), onDragStart),\n          run$1(mouseup(), onDragEnd)\n        ]),\n        apis: {\n          resetToMin,\n          resetToMax,\n          setValue,\n          refresh\n        },\n        domModification: { styles: { position: 'relative' } }\n      };\n    };\n\n    const Slider = composite({\n      name: 'Slider',\n      configFields: SliderSchema,\n      partFields: SliderParts,\n      factory: sketch$2,\n      apis: {\n        setValue: (apis, slider, value) => {\n          apis.setValue(slider, value);\n        },\n        resetToMin: (apis, slider) => {\n          apis.resetToMin(slider);\n        },\n        resetToMax: (apis, slider) => {\n          apis.resetToMax(slider);\n        },\n        refresh: (apis, slider) => {\n          apis.refresh(slider);\n        }\n      }\n    });\n\n    const fieldsUpdate = generate$6('rgb-hex-update');\n    const sliderUpdate = generate$6('slider-update');\n    const paletteUpdate = generate$6('palette-update');\n\n    const sliderFactory = (translate, getClass) => {\n      const spectrum = Slider.parts.spectrum({\n        dom: {\n          tag: 'div',\n          classes: [getClass('hue-slider-spectrum')],\n          attributes: { role: 'presentation' }\n        }\n      });\n      const thumb = Slider.parts.thumb({\n        dom: {\n          tag: 'div',\n          classes: [getClass('hue-slider-thumb')],\n          attributes: { role: 'presentation' }\n        }\n      });\n      return Slider.sketch({\n        dom: {\n          tag: 'div',\n          classes: [getClass('hue-slider')],\n          attributes: { role: 'presentation' }\n        },\n        rounded: false,\n        model: {\n          mode: 'y',\n          getInitialValue: constant$1(0)\n        },\n        components: [\n          spectrum,\n          thumb\n        ],\n        sliderBehaviours: derive$1([Focusing.config({})]),\n        onChange: (slider, _thumb, value) => {\n          emitWith(slider, sliderUpdate, { value });\n        }\n      });\n    };\n\n    const owner$1 = 'form';\n    const schema$i = [field('formBehaviours', [Representing])];\n    const getPartName$1 = name => '<alloy.field.' + name + '>';\n    const sketch$1 = fSpec => {\n      const parts = (() => {\n        const record = [];\n        const field = (name, config) => {\n          record.push(name);\n          return generateOne$1(owner$1, getPartName$1(name), config);\n        };\n        return {\n          field,\n          record: constant$1(record)\n        };\n      })();\n      const spec = fSpec(parts);\n      const partNames = parts.record();\n      const fieldParts = map$2(partNames, n => required({\n        name: n,\n        pname: getPartName$1(n)\n      }));\n      return composite$1(owner$1, schema$i, fieldParts, make$4, spec);\n    };\n    const toResult = (o, e) => o.fold(() => Result.error(e), Result.value);\n    const make$4 = (detail, components) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components,\n      behaviours: augment(detail.formBehaviours, [Representing.config({\n          store: {\n            mode: 'manual',\n            getValue: form => {\n              const resPs = getAllParts(form, detail);\n              return map$1(resPs, (resPThunk, pName) => resPThunk().bind(v => {\n                const opt = Composing.getCurrent(v);\n                return toResult(opt, new Error(`Cannot find a current component to extract the value from for form part '${ pName }': ` + element(v.element)));\n              }).map(Representing.getValue));\n            },\n            setValue: (form, values) => {\n              each(values, (newValue, key) => {\n                getPart(form, detail, key).each(wrapper => {\n                  Composing.getCurrent(wrapper).each(field => {\n                    Representing.setValue(field, newValue);\n                  });\n                });\n              });\n            }\n          }\n        })]),\n      apis: {\n        getField: (form, key) => {\n          return getPart(form, detail, key).bind(Composing.getCurrent);\n        }\n      }\n    });\n    const Form = {\n      getField: makeApi((apis, component, key) => apis.getField(component, key)),\n      sketch: sketch$1\n    };\n\n    const validInput = generate$6('valid-input');\n    const invalidInput = generate$6('invalid-input');\n    const validatingInput = generate$6('validating-input');\n    const translatePrefix = 'colorcustom.rgb.';\n    const rgbFormFactory = (translate, getClass, onValidHexx, onInvalidHexx) => {\n      const invalidation = (label, isValid) => Invalidating.config({\n        invalidClass: getClass('invalid'),\n        notify: {\n          onValidate: comp => {\n            emitWith(comp, validatingInput, { type: label });\n          },\n          onValid: comp => {\n            emitWith(comp, validInput, {\n              type: label,\n              value: Representing.getValue(comp)\n            });\n          },\n          onInvalid: comp => {\n            emitWith(comp, invalidInput, {\n              type: label,\n              value: Representing.getValue(comp)\n            });\n          }\n        },\n        validator: {\n          validate: comp => {\n            const value = Representing.getValue(comp);\n            const res = isValid(value) ? Result.value(true) : Result.error(translate('aria.input.invalid'));\n            return Future.pure(res);\n          },\n          validateOnLoad: false\n        }\n      });\n      const renderTextField = (isValid, name, label, description, data) => {\n        const helptext = translate(translatePrefix + 'range');\n        const pLabel = FormField.parts.label({\n          dom: {\n            tag: 'label',\n            attributes: { 'aria-label': description }\n          },\n          components: [text$1(label)]\n        });\n        const pField = FormField.parts.field({\n          data,\n          factory: Input,\n          inputAttributes: {\n            type: 'text',\n            ...name === 'hex' ? { 'aria-live': 'polite' } : {}\n          },\n          inputClasses: [getClass('textfield')],\n          inputBehaviours: derive$1([\n            invalidation(name, isValid),\n            Tabstopping.config({})\n          ]),\n          onSetValue: input => {\n            if (Invalidating.isInvalid(input)) {\n              const run = Invalidating.run(input);\n              run.get(noop);\n            }\n          }\n        });\n        const comps = [\n          pLabel,\n          pField\n        ];\n        const concats = name !== 'hex' ? [FormField.parts['aria-descriptor']({ text: helptext })] : [];\n        const components = comps.concat(concats);\n        return {\n          dom: {\n            tag: 'div',\n            attributes: { role: 'presentation' }\n          },\n          components\n        };\n      };\n      const copyRgbToHex = (form, rgba) => {\n        const hex = fromRgba(rgba);\n        Form.getField(form, 'hex').each(hexField => {\n          if (!Focusing.isFocused(hexField)) {\n            Representing.setValue(form, { hex: hex.value });\n          }\n        });\n        return hex;\n      };\n      const copyRgbToForm = (form, rgb) => {\n        const red = rgb.red;\n        const green = rgb.green;\n        const blue = rgb.blue;\n        Representing.setValue(form, {\n          red,\n          green,\n          blue\n        });\n      };\n      const memPreview = record({\n        dom: {\n          tag: 'div',\n          classes: [getClass('rgba-preview')],\n          styles: { 'background-color': 'white' },\n          attributes: { role: 'presentation' }\n        }\n      });\n      const updatePreview = (anyInSystem, hex) => {\n        memPreview.getOpt(anyInSystem).each(preview => {\n          set$8(preview.element, 'background-color', '#' + hex.value);\n        });\n      };\n      const factory = () => {\n        const state = {\n          red: Cell(Optional.some(255)),\n          green: Cell(Optional.some(255)),\n          blue: Cell(Optional.some(255)),\n          hex: Cell(Optional.some('ffffff'))\n        };\n        const copyHexToRgb = (form, hex) => {\n          const rgb = fromHex(hex);\n          copyRgbToForm(form, rgb);\n          setValueRgb(rgb);\n        };\n        const get = prop => state[prop].get();\n        const set = (prop, value) => {\n          state[prop].set(value);\n        };\n        const getValueRgb = () => get('red').bind(red => get('green').bind(green => get('blue').map(blue => rgbaColour(red, green, blue, 1))));\n        const setValueRgb = rgb => {\n          const red = rgb.red;\n          const green = rgb.green;\n          const blue = rgb.blue;\n          set('red', Optional.some(red));\n          set('green', Optional.some(green));\n          set('blue', Optional.some(blue));\n        };\n        const onInvalidInput = (form, simulatedEvent) => {\n          const data = simulatedEvent.event;\n          if (data.type !== 'hex') {\n            set(data.type, Optional.none());\n          } else {\n            onInvalidHexx(form);\n          }\n        };\n        const onValidHex = (form, value) => {\n          onValidHexx(form);\n          const hex = hexColour(value);\n          set('hex', Optional.some(value));\n          const rgb = fromHex(hex);\n          copyRgbToForm(form, rgb);\n          setValueRgb(rgb);\n          emitWith(form, fieldsUpdate, { hex });\n          updatePreview(form, hex);\n        };\n        const onValidRgb = (form, prop, value) => {\n          const val = parseInt(value, 10);\n          set(prop, Optional.some(val));\n          getValueRgb().each(rgb => {\n            const hex = copyRgbToHex(form, rgb);\n            emitWith(form, fieldsUpdate, { hex });\n            updatePreview(form, hex);\n          });\n        };\n        const isHexInputEvent = data => data.type === 'hex';\n        const onValidInput = (form, simulatedEvent) => {\n          const data = simulatedEvent.event;\n          if (isHexInputEvent(data)) {\n            onValidHex(form, data.value);\n          } else {\n            onValidRgb(form, data.type, data.value);\n          }\n        };\n        const formPartStrings = key => ({\n          label: translate(translatePrefix + key + '.label'),\n          description: translate(translatePrefix + key + '.description')\n        });\n        const redStrings = formPartStrings('red');\n        const greenStrings = formPartStrings('green');\n        const blueStrings = formPartStrings('blue');\n        const hexStrings = formPartStrings('hex');\n        return deepMerge(Form.sketch(parts => ({\n          dom: {\n            tag: 'form',\n            classes: [getClass('rgb-form')],\n            attributes: { 'aria-label': translate('aria.color.picker') }\n          },\n          components: [\n            parts.field('red', FormField.sketch(renderTextField(isRgbaComponent, 'red', redStrings.label, redStrings.description, 255))),\n            parts.field('green', FormField.sketch(renderTextField(isRgbaComponent, 'green', greenStrings.label, greenStrings.description, 255))),\n            parts.field('blue', FormField.sketch(renderTextField(isRgbaComponent, 'blue', blueStrings.label, blueStrings.description, 255))),\n            parts.field('hex', FormField.sketch(renderTextField(isHexString, 'hex', hexStrings.label, hexStrings.description, 'ffffff'))),\n            memPreview.asSpec()\n          ],\n          formBehaviours: derive$1([\n            Invalidating.config({ invalidClass: getClass('form-invalid') }),\n            config('rgb-form-events', [\n              run$1(validInput, onValidInput),\n              run$1(invalidInput, onInvalidInput),\n              run$1(validatingInput, onInvalidInput)\n            ])\n          ])\n        })), {\n          apis: {\n            updateHex: (form, hex) => {\n              Representing.setValue(form, { hex: hex.value });\n              copyHexToRgb(form, hex);\n              updatePreview(form, hex);\n            }\n          }\n        });\n      };\n      const rgbFormSketcher = single({\n        factory,\n        name: 'RgbForm',\n        configFields: [],\n        apis: {\n          updateHex: (apis, form, hex) => {\n            apis.updateHex(form, hex);\n          }\n        },\n        extraApis: {}\n      });\n      return rgbFormSketcher;\n    };\n\n    const paletteFactory = (_translate, getClass) => {\n      const spectrumPart = Slider.parts.spectrum({\n        dom: {\n          tag: 'canvas',\n          attributes: { role: 'presentation' },\n          classes: [getClass('sv-palette-spectrum')]\n        }\n      });\n      const thumbPart = Slider.parts.thumb({\n        dom: {\n          tag: 'div',\n          attributes: { role: 'presentation' },\n          classes: [getClass('sv-palette-thumb')],\n          innerHtml: `<div class=${ getClass('sv-palette-inner-thumb') } role=\"presentation\"></div>`\n        }\n      });\n      const setColour = (canvas, rgba) => {\n        const {width, height} = canvas;\n        const ctx = canvas.getContext('2d');\n        if (ctx === null) {\n          return;\n        }\n        ctx.fillStyle = rgba;\n        ctx.fillRect(0, 0, width, height);\n        const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n        grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n        grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n        ctx.fillStyle = grdWhite;\n        ctx.fillRect(0, 0, width, height);\n        const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n        grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n        grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n        ctx.fillStyle = grdBlack;\n        ctx.fillRect(0, 0, width, height);\n      };\n      const setPaletteHue = (slider, hue) => {\n        const canvas = slider.components()[0].element.dom;\n        const hsv = hsvColour(hue, 100, 100);\n        const rgba = fromHsv(hsv);\n        setColour(canvas, toString(rgba));\n      };\n      const setPaletteThumb = (slider, hex) => {\n        const hsv = fromRgb(fromHex(hex));\n        Slider.setValue(slider, {\n          x: hsv.saturation,\n          y: 100 - hsv.value\n        });\n      };\n      const factory = _detail => {\n        const getInitialValue = constant$1({\n          x: 0,\n          y: 0\n        });\n        const onChange = (slider, _thumb, value) => {\n          emitWith(slider, paletteUpdate, { value });\n        };\n        const onInit = (_slider, _thumb, spectrum, _value) => {\n          setColour(spectrum.element.dom, toString(red));\n        };\n        const sliderBehaviours = derive$1([\n          Composing.config({ find: Optional.some }),\n          Focusing.config({})\n        ]);\n        return Slider.sketch({\n          dom: {\n            tag: 'div',\n            attributes: { role: 'presentation' },\n            classes: [getClass('sv-palette')]\n          },\n          model: {\n            mode: 'xy',\n            getInitialValue\n          },\n          rounded: false,\n          components: [\n            spectrumPart,\n            thumbPart\n          ],\n          onChange,\n          onInit,\n          sliderBehaviours\n        });\n      };\n      const saturationBrightnessPaletteSketcher = single({\n        factory,\n        name: 'SaturationBrightnessPalette',\n        configFields: [],\n        apis: {\n          setHue: (_apis, slider, hue) => {\n            setPaletteHue(slider, hue);\n          },\n          setThumb: (_apis, slider, hex) => {\n            setPaletteThumb(slider, hex);\n          }\n        },\n        extraApis: {}\n      });\n      return saturationBrightnessPaletteSketcher;\n    };\n\n    const makeFactory = (translate, getClass) => {\n      const factory = detail => {\n        const rgbForm = rgbFormFactory(translate, getClass, detail.onValidHex, detail.onInvalidHex);\n        const sbPalette = paletteFactory(translate, getClass);\n        const hueSliderToDegrees = hue => (100 - hue) / 100 * 360;\n        const hueDegreesToSlider = hue => 100 - hue / 360 * 100;\n        const state = {\n          paletteRgba: Cell(red),\n          paletteHue: Cell(0)\n        };\n        const memSlider = record(sliderFactory(translate, getClass));\n        const memPalette = record(sbPalette.sketch({}));\n        const memRgb = record(rgbForm.sketch({}));\n        const updatePalette = (anyInSystem, _hex, hue) => {\n          memPalette.getOpt(anyInSystem).each(palette => {\n            sbPalette.setHue(palette, hue);\n          });\n        };\n        const updateFields = (anyInSystem, hex) => {\n          memRgb.getOpt(anyInSystem).each(form => {\n            rgbForm.updateHex(form, hex);\n          });\n        };\n        const updateSlider = (anyInSystem, _hex, hue) => {\n          memSlider.getOpt(anyInSystem).each(slider => {\n            Slider.setValue(slider, hueDegreesToSlider(hue));\n          });\n        };\n        const updatePaletteThumb = (anyInSystem, hex) => {\n          memPalette.getOpt(anyInSystem).each(palette => {\n            sbPalette.setThumb(palette, hex);\n          });\n        };\n        const updateState = (hex, hue) => {\n          const rgba = fromHex(hex);\n          state.paletteRgba.set(rgba);\n          state.paletteHue.set(hue);\n        };\n        const runUpdates = (anyInSystem, hex, hue, updates) => {\n          updateState(hex, hue);\n          each$1(updates, update => {\n            update(anyInSystem, hex, hue);\n          });\n        };\n        const onPaletteUpdate = () => {\n          const updates = [updateFields];\n          return (form, simulatedEvent) => {\n            const value = simulatedEvent.event.value;\n            const oldHue = state.paletteHue.get();\n            const newHsv = hsvColour(oldHue, value.x, 100 - value.y);\n            const newHex = hsvToHex(newHsv);\n            runUpdates(form, newHex, oldHue, updates);\n          };\n        };\n        const onSliderUpdate = () => {\n          const updates = [\n            updatePalette,\n            updateFields\n          ];\n          return (form, simulatedEvent) => {\n            const hue = hueSliderToDegrees(simulatedEvent.event.value);\n            const oldRgb = state.paletteRgba.get();\n            const oldHsv = fromRgb(oldRgb);\n            const newHsv = hsvColour(hue, oldHsv.saturation, oldHsv.value);\n            const newHex = hsvToHex(newHsv);\n            runUpdates(form, newHex, hue, updates);\n          };\n        };\n        const onFieldsUpdate = () => {\n          const updates = [\n            updatePalette,\n            updateSlider,\n            updatePaletteThumb\n          ];\n          return (form, simulatedEvent) => {\n            const hex = simulatedEvent.event.hex;\n            const hsv = hexToHsv(hex);\n            runUpdates(form, hex, hsv.hue, updates);\n          };\n        };\n        return {\n          uid: detail.uid,\n          dom: detail.dom,\n          components: [\n            memPalette.asSpec(),\n            memSlider.asSpec(),\n            memRgb.asSpec()\n          ],\n          behaviours: derive$1([\n            config('colour-picker-events', [\n              run$1(fieldsUpdate, onFieldsUpdate()),\n              run$1(paletteUpdate, onPaletteUpdate()),\n              run$1(sliderUpdate, onSliderUpdate())\n            ]),\n            Composing.config({ find: comp => memRgb.getOpt(comp) }),\n            Keying.config({ mode: 'acyclic' })\n          ])\n        };\n      };\n      const colourPickerSketcher = single({\n        name: 'ColourPicker',\n        configFields: [\n          required$1('dom'),\n          defaulted('onValidHex', noop),\n          defaulted('onInvalidHex', noop)\n        ],\n        factory\n      });\n      return colourPickerSketcher;\n    };\n\n    const self = () => Composing.config({ find: Optional.some });\n    const memento$1 = mem => Composing.config({ find: mem.getOpt });\n    const childAt = index => Composing.config({ find: comp => child$2(comp.element, index).bind(element => comp.getSystem().getByDom(element).toOptional()) });\n    const ComposingConfigs = {\n      self,\n      memento: memento$1,\n      childAt\n    };\n\n    const processors = objOf([\n      defaulted('preprocess', identity),\n      defaulted('postprocess', identity)\n    ]);\n    const memento = (mem, rawProcessors) => {\n      const ps = asRawOrDie$1('RepresentingConfigs.memento processors', processors, rawProcessors);\n      return Representing.config({\n        store: {\n          mode: 'manual',\n          getValue: comp => {\n            const other = mem.get(comp);\n            const rawValue = Representing.getValue(other);\n            return ps.postprocess(rawValue);\n          },\n          setValue: (comp, rawValue) => {\n            const newValue = ps.preprocess(rawValue);\n            const other = mem.get(comp);\n            Representing.setValue(other, newValue);\n          }\n        }\n      });\n    };\n    const withComp = (optInitialValue, getter, setter) => Representing.config({\n      store: {\n        mode: 'manual',\n        ...optInitialValue.map(initialValue => ({ initialValue })).getOr({}),\n        getValue: getter,\n        setValue: setter\n      }\n    });\n    const withElement = (initialValue, getter, setter) => withComp(initialValue, c => getter(c.element), (c, v) => setter(c.element, v));\n    const domValue = optInitialValue => withElement(optInitialValue, get$6, set$5);\n    const domHtml = optInitialValue => withElement(optInitialValue, get$9, set$6);\n    const memory = initialValue => Representing.config({\n      store: {\n        mode: 'memory',\n        initialValue\n      }\n    });\n    const RepresentingConfigs = {\n      memento,\n      withElement,\n      withComp,\n      domValue,\n      domHtml,\n      memory\n    };\n\n    const english = {\n      'colorcustom.rgb.red.label': 'R',\n      'colorcustom.rgb.red.description': 'Red component',\n      'colorcustom.rgb.green.label': 'G',\n      'colorcustom.rgb.green.description': 'Green component',\n      'colorcustom.rgb.blue.label': 'B',\n      'colorcustom.rgb.blue.description': 'Blue component',\n      'colorcustom.rgb.hex.label': '#',\n      'colorcustom.rgb.hex.description': 'Hex color code',\n      'colorcustom.rgb.range': 'Range 0 to 255',\n      'aria.color.picker': 'Color Picker',\n      'aria.input.invalid': 'Invalid input'\n    };\n    const translate$1 = providerBackstage => key => {\n      return providerBackstage.translate(english[key]);\n    };\n    const renderColorPicker = (_spec, providerBackstage, initialData) => {\n      const getClass = key => 'tox-' + key;\n      const colourPickerFactory = makeFactory(translate$1(providerBackstage), getClass);\n      const onValidHex = form => {\n        emitWith(form, formActionEvent, {\n          name: 'hex-valid',\n          value: true\n        });\n      };\n      const onInvalidHex = form => {\n        emitWith(form, formActionEvent, {\n          name: 'hex-valid',\n          value: false\n        });\n      };\n      const memPicker = record(colourPickerFactory.sketch({\n        dom: {\n          tag: 'div',\n          classes: [getClass('color-picker-container')],\n          attributes: { role: 'presentation' }\n        },\n        onValidHex,\n        onInvalidHex\n      }));\n      return {\n        dom: { tag: 'div' },\n        components: [memPicker.asSpec()],\n        behaviours: derive$1([\n          RepresentingConfigs.withComp(initialData, comp => {\n            const picker = memPicker.get(comp);\n            const optRgbForm = Composing.getCurrent(picker);\n            const optHex = optRgbForm.bind(rgbForm => {\n              const formValues = Representing.getValue(rgbForm);\n              return formValues.hex;\n            });\n            return optHex.map(hex => '#' + hex).getOr('');\n          }, (comp, newValue) => {\n            const pattern = /^#([a-fA-F0-9]{3}(?:[a-fA-F0-9]{3})?)/;\n            const valOpt = Optional.from(pattern.exec(newValue)).bind(matches => get$h(matches, 1));\n            const picker = memPicker.get(comp);\n            const optRgbForm = Composing.getCurrent(picker);\n            optRgbForm.fold(() => {\n              console.log('Can not find form');\n            }, rgbForm => {\n              Representing.setValue(rgbForm, { hex: valOpt.getOr('') });\n              Form.getField(rgbForm, 'hex').each(hexField => {\n                emit(hexField, input());\n              });\n            });\n          }),\n          ComposingConfigs.self()\n        ])\n      };\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    const isOldCustomEditor = spec => has$2(spec, 'init');\n    const renderCustomEditor = spec => {\n      const editorApi = value$2();\n      const memReplaced = record({ dom: { tag: spec.tag } });\n      const initialValue = value$2();\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-custom-editor']\n        },\n        behaviours: derive$1([\n          config('custom-editor-events', [runOnAttached(component => {\n              memReplaced.getOpt(component).each(ta => {\n                (isOldCustomEditor(spec) ? spec.init(ta.element.dom) : global$2.load(spec.scriptId, spec.scriptUrl).then(init => init(ta.element.dom, spec.settings))).then(ea => {\n                  initialValue.on(cvalue => {\n                    ea.setValue(cvalue);\n                  });\n                  initialValue.clear();\n                  editorApi.set(ea);\n                });\n              });\n            })]),\n          RepresentingConfigs.withComp(Optional.none(), () => editorApi.get().fold(() => initialValue.get().getOr(''), ed => ed.getValue()), (component, value) => {\n            editorApi.get().fold(() => initialValue.set(value), ed => ed.setValue(value));\n          }),\n          ComposingConfigs.self()\n        ]),\n        components: [memReplaced.asSpec()]\n      };\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const filterByExtension = (files, providersBackstage) => {\n      const allowedImageFileTypes = global$1.explode(providersBackstage.getOption('images_file_types'));\n      const isFileInAllowedTypes = file => exists(allowedImageFileTypes, type => endsWith(file.name.toLowerCase(), `.${ type.toLowerCase() }`));\n      return filter$2(from(files), isFileInAllowedTypes);\n    };\n    const renderDropZone = (spec, providersBackstage, initialData) => {\n      const stopper = (_, se) => {\n        se.stop();\n      };\n      const sequence = actions => (comp, se) => {\n        each$1(actions, a => {\n          a(comp, se);\n        });\n      };\n      const onDrop = (comp, se) => {\n        var _a;\n        if (!Disabling.isDisabled(comp)) {\n          const transferEvent = se.event.raw;\n          handleFiles(comp, (_a = transferEvent.dataTransfer) === null || _a === void 0 ? void 0 : _a.files);\n        }\n      };\n      const onSelect = (component, simulatedEvent) => {\n        const input = simulatedEvent.event.raw.target;\n        handleFiles(component, input.files);\n      };\n      const handleFiles = (component, files) => {\n        if (files) {\n          Representing.setValue(component, filterByExtension(files, providersBackstage));\n          emitWith(component, formChangeEvent, { name: spec.name });\n        }\n      };\n      const memInput = record({\n        dom: {\n          tag: 'input',\n          attributes: {\n            type: 'file',\n            accept: 'image/*'\n          },\n          styles: { display: 'none' }\n        },\n        behaviours: derive$1([config('input-file-events', [\n            cutter(click()),\n            cutter(tap())\n          ])])\n      });\n      const renderField = s => ({\n        uid: s.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-dropzone-container']\n        },\n        behaviours: derive$1([\n          RepresentingConfigs.memory(initialData.getOr([])),\n          ComposingConfigs.self(),\n          Disabling.config({}),\n          Toggling.config({\n            toggleClass: 'dragenter',\n            toggleOnExecute: false\n          }),\n          config('dropzone-events', [\n            run$1('dragenter', sequence([\n              stopper,\n              Toggling.toggle\n            ])),\n            run$1('dragleave', sequence([\n              stopper,\n              Toggling.toggle\n            ])),\n            run$1('dragover', stopper),\n            run$1('drop', sequence([\n              stopper,\n              onDrop\n            ])),\n            run$1(change(), onSelect)\n          ])\n        ]),\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-dropzone'],\n              styles: {}\n            },\n            components: [\n              {\n                dom: { tag: 'p' },\n                components: [text$1(providersBackstage.translate('Drop an image here'))]\n              },\n              Button.sketch({\n                dom: {\n                  tag: 'button',\n                  styles: { position: 'relative' },\n                  classes: [\n                    'tox-button',\n                    'tox-button--secondary'\n                  ]\n                },\n                components: [\n                  text$1(providersBackstage.translate('Browse for an image')),\n                  memInput.asSpec()\n                ],\n                action: comp => {\n                  const inputComp = memInput.get(comp);\n                  inputComp.element.dom.click();\n                },\n                buttonBehaviours: derive$1([\n                  Tabstopping.config({}),\n                  DisablingConfigs.button(providersBackstage.isDisabled),\n                  receivingConfig()\n                ])\n              })\n            ]\n          }]\n      });\n      const pLabel = spec.label.map(label => renderLabel$2(label, providersBackstage));\n      const pField = FormField.parts.field({ factory: { sketch: renderField } });\n      return renderFormFieldWith(pLabel, pField, ['tox-form__group--stretched'], []);\n    };\n\n    const renderGrid = (spec, backstage) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-form__grid',\n          `tox-form__grid--${ spec.columns }col`\n        ]\n      },\n      components: map$2(spec.items, backstage.interpreter)\n    });\n\n    const beforeObject = generate$6('alloy-fake-before-tabstop');\n    const afterObject = generate$6('alloy-fake-after-tabstop');\n    const craftWithClasses = classes => {\n      return {\n        dom: {\n          tag: 'div',\n          styles: {\n            width: '1px',\n            height: '1px',\n            outline: 'none'\n          },\n          attributes: { tabindex: '0' },\n          classes\n        },\n        behaviours: derive$1([\n          Focusing.config({ ignore: true }),\n          Tabstopping.config({})\n        ])\n      };\n    };\n    const craft = spec => {\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-navobj']\n        },\n        components: [\n          craftWithClasses([beforeObject]),\n          spec,\n          craftWithClasses([afterObject])\n        ],\n        behaviours: derive$1([ComposingConfigs.childAt(1)])\n      };\n    };\n    const triggerTab = (placeholder, shiftKey) => {\n      emitWith(placeholder, keydown(), {\n        raw: {\n          which: 9,\n          shiftKey\n        }\n      });\n    };\n    const onFocus = (container, targetComp) => {\n      const target = targetComp.element;\n      if (has(target, beforeObject)) {\n        triggerTab(container, true);\n      } else if (has(target, afterObject)) {\n        triggerTab(container, false);\n      }\n    };\n    const isPseudoStop = element => {\n      return closest(element, [\n        '.' + beforeObject,\n        '.' + afterObject\n      ].join(','), never);\n    };\n\n    const getDynamicSource = initialData => {\n      const cachedValue = Cell(initialData.getOr(''));\n      return {\n        getValue: _frameComponent => cachedValue.get(),\n        setValue: (frameComponent, html) => {\n          if (cachedValue.get() !== html) {\n            set$9(frameComponent.element, 'srcdoc', html);\n          }\n          cachedValue.set(html);\n        }\n      };\n    };\n    const renderIFrame = (spec, providersBackstage, initialData) => {\n      const isSandbox = spec.sandboxed;\n      const isTransparent = spec.transparent;\n      const baseClass = 'tox-dialog__iframe';\n      const attributes = {\n        ...spec.label.map(title => ({ title })).getOr({}),\n        ...initialData.map(html => ({ srcdoc: html })).getOr({}),\n        ...isSandbox ? { sandbox: 'allow-scripts allow-same-origin' } : {}\n      };\n      const sourcing = getDynamicSource(initialData);\n      const pLabel = spec.label.map(label => renderLabel$2(label, providersBackstage));\n      const factory = newSpec => craft({\n        uid: newSpec.uid,\n        dom: {\n          tag: 'iframe',\n          attributes,\n          classes: isTransparent ? [baseClass] : [\n            baseClass,\n            `${ baseClass }--opaque`\n          ]\n        },\n        behaviours: derive$1([\n          Tabstopping.config({}),\n          Focusing.config({}),\n          RepresentingConfigs.withComp(initialData, sourcing.getValue, sourcing.setValue)\n        ])\n      });\n      const pField = FormField.parts.field({ factory: { sketch: factory } });\n      return renderFormFieldWith(pLabel, pField, ['tox-form__group--stretched'], []);\n    };\n\n    const image = image => new Promise((resolve, reject) => {\n      const loaded = () => {\n        destroy();\n        resolve(image);\n      };\n      const listeners = [\n        bind(image, 'load', loaded),\n        bind(image, 'error', () => {\n          destroy();\n          reject('Unable to load data from image: ' + image.dom.src);\n        })\n      ];\n      const destroy = () => each$1(listeners, l => l.unbind());\n      if (image.dom.complete) {\n        loaded();\n      }\n    });\n\n    const calculateImagePosition = (panelWidth, panelHeight, imageWidth, imageHeight, zoom) => {\n      const width = imageWidth * zoom;\n      const height = imageHeight * zoom;\n      const left = Math.max(0, panelWidth / 2 - width / 2);\n      const top = Math.max(0, panelHeight / 2 - height / 2);\n      return {\n        left: left.toString() + 'px',\n        top: top.toString() + 'px',\n        width: width.toString() + 'px',\n        height: height.toString() + 'px'\n      };\n    };\n    const zoomToFit = (panel, width, height) => {\n      const panelW = get$c(panel);\n      const panelH = get$d(panel);\n      return Math.min(panelW / width, panelH / height, 1);\n    };\n    const renderImagePreview = (spec, initialData) => {\n      const cachedData = Cell(initialData.getOr({ url: '' }));\n      const memImage = record({\n        dom: {\n          tag: 'img',\n          classes: ['tox-imagepreview__image'],\n          attributes: initialData.map(data => ({ src: data.url })).getOr({})\n        }\n      });\n      const memContainer = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-imagepreview__container'],\n          attributes: { role: 'presentation' }\n        },\n        components: [memImage.asSpec()]\n      });\n      const setValue = (frameComponent, data) => {\n        const translatedData = { url: data.url };\n        data.zoom.each(z => translatedData.zoom = z);\n        data.cachedWidth.each(z => translatedData.cachedWidth = z);\n        data.cachedHeight.each(z => translatedData.cachedHeight = z);\n        cachedData.set(translatedData);\n        const applyFramePositioning = () => {\n          const {cachedWidth, cachedHeight, zoom} = translatedData;\n          if (!isUndefined(cachedWidth) && !isUndefined(cachedHeight)) {\n            if (isUndefined(zoom)) {\n              const z = zoomToFit(frameComponent.element, cachedWidth, cachedHeight);\n              translatedData.zoom = z;\n            }\n            const position = calculateImagePosition(get$c(frameComponent.element), get$d(frameComponent.element), cachedWidth, cachedHeight, translatedData.zoom);\n            memContainer.getOpt(frameComponent).each(container => {\n              setAll(container.element, position);\n            });\n          }\n        };\n        memImage.getOpt(frameComponent).each(imageComponent => {\n          const img = imageComponent.element;\n          if (data.url !== get$f(img, 'src')) {\n            set$9(img, 'src', data.url);\n            remove$2(frameComponent.element, 'tox-imagepreview__loaded');\n          }\n          applyFramePositioning();\n          image(img).then(img => {\n            if (frameComponent.getSystem().isConnected()) {\n              add$2(frameComponent.element, 'tox-imagepreview__loaded');\n              translatedData.cachedWidth = img.dom.naturalWidth;\n              translatedData.cachedHeight = img.dom.naturalHeight;\n              applyFramePositioning();\n            }\n          });\n        });\n      };\n      const styles = {};\n      spec.height.each(h => styles.height = h);\n      const fakeValidatedData = initialData.map(d => ({\n        url: d.url,\n        zoom: Optional.from(d.zoom),\n        cachedWidth: Optional.from(d.cachedWidth),\n        cachedHeight: Optional.from(d.cachedHeight)\n      }));\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-imagepreview'],\n          styles,\n          attributes: { role: 'presentation' }\n        },\n        components: [memContainer.asSpec()],\n        behaviours: derive$1([\n          ComposingConfigs.self(),\n          RepresentingConfigs.withComp(fakeValidatedData, () => cachedData.get(), setValue)\n        ])\n      };\n    };\n\n    const renderLabel$1 = (spec, backstageShared) => {\n      const label = {\n        dom: {\n          tag: 'label',\n          classes: ['tox-label']\n        },\n        components: [text$1(backstageShared.providers.translate(spec.label))]\n      };\n      const comps = map$2(spec.items, backstageShared.interpreter);\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: [\n          label,\n          ...comps\n        ],\n        behaviours: derive$1([\n          ComposingConfigs.self(),\n          Replacing.config({}),\n          RepresentingConfigs.domHtml(Optional.none()),\n          Keying.config({ mode: 'acyclic' })\n        ])\n      };\n    };\n\n    const internalToolbarButtonExecute = generate$6('toolbar.button.execute');\n    const onToolbarButtonExecute = info => runOnExecute$1((comp, _simulatedEvent) => {\n      runWithApi(info, comp)(itemApi => {\n        emitWith(comp, internalToolbarButtonExecute, { buttonApi: itemApi });\n        info.onAction(itemApi);\n      });\n    });\n    const toolbarButtonEventOrder = {\n      [execute$5()]: [\n        'disabling',\n        'alloy.base.behaviour',\n        'toggling',\n        'toolbar-button-events'\n      ]\n    };\n\n    const renderIcon = (iconName, iconsProvider, behaviours) => render$3(iconName, {\n      tag: 'span',\n      classes: [\n        'tox-icon',\n        'tox-tbtn__icon-wrap'\n      ],\n      behaviours\n    }, iconsProvider);\n    const renderIconFromPack = (iconName, iconsProvider) => renderIcon(iconName, iconsProvider, []);\n    const renderReplaceableIconFromPack = (iconName, iconsProvider) => renderIcon(iconName, iconsProvider, [Replacing.config({})]);\n    const renderLabel = (text, prefix, providersBackstage) => ({\n      dom: {\n        tag: 'span',\n        classes: [`${ prefix }__select-label`]\n      },\n      components: [text$1(providersBackstage.translate(text))],\n      behaviours: derive$1([Replacing.config({})])\n    });\n\n    const updateMenuText = generate$6('update-menu-text');\n    const updateMenuIcon = generate$6('update-menu-icon');\n    const renderCommonDropdown = (spec, prefix, sharedBackstage) => {\n      const editorOffCell = Cell(noop);\n      const optMemDisplayText = spec.text.map(text => record(renderLabel(text, prefix, sharedBackstage.providers)));\n      const optMemDisplayIcon = spec.icon.map(iconName => record(renderReplaceableIconFromPack(iconName, sharedBackstage.providers.icons)));\n      const onLeftOrRightInMenu = (comp, se) => {\n        const dropdown = Representing.getValue(comp);\n        Focusing.focus(dropdown);\n        emitWith(dropdown, 'keydown', { raw: se.event.raw });\n        Dropdown.close(dropdown);\n        return Optional.some(true);\n      };\n      const role = spec.role.fold(() => ({}), role => ({ role }));\n      const tooltipAttributes = spec.tooltip.fold(() => ({}), tooltip => {\n        const translatedTooltip = sharedBackstage.providers.translate(tooltip);\n        return {\n          'title': translatedTooltip,\n          'aria-label': translatedTooltip\n        };\n      });\n      const iconSpec = render$3('chevron-down', {\n        tag: 'div',\n        classes: [`${ prefix }__select-chevron`]\n      }, sharedBackstage.providers.icons);\n      const memDropdown = record(Dropdown.sketch({\n        ...spec.uid ? { uid: spec.uid } : {},\n        ...role,\n        dom: {\n          tag: 'button',\n          classes: [\n            prefix,\n            `${ prefix }--select`\n          ].concat(map$2(spec.classes, c => `${ prefix }--${ c }`)),\n          attributes: { ...tooltipAttributes }\n        },\n        components: componentRenderPipeline([\n          optMemDisplayIcon.map(mem => mem.asSpec()),\n          optMemDisplayText.map(mem => mem.asSpec()),\n          Optional.some(iconSpec)\n        ]),\n        matchWidth: true,\n        useMinWidth: true,\n        onOpen: (anchor, dropdownComp, tmenuComp) => {\n          if (spec.searchable) {\n            focusSearchField(tmenuComp);\n          }\n        },\n        dropdownBehaviours: derive$1([\n          ...spec.dropdownBehaviours,\n          DisablingConfigs.button(() => spec.disabled || sharedBackstage.providers.isDisabled()),\n          receivingConfig(),\n          Unselecting.config({}),\n          Replacing.config({}),\n          config('dropdown-events', [\n            onControlAttached(spec, editorOffCell),\n            onControlDetached(spec, editorOffCell)\n          ]),\n          config('menubutton-update-display-text', [\n            run$1(updateMenuText, (comp, se) => {\n              optMemDisplayText.bind(mem => mem.getOpt(comp)).each(displayText => {\n                Replacing.set(displayText, [text$1(sharedBackstage.providers.translate(se.event.text))]);\n              });\n            }),\n            run$1(updateMenuIcon, (comp, se) => {\n              optMemDisplayIcon.bind(mem => mem.getOpt(comp)).each(displayIcon => {\n                Replacing.set(displayIcon, [renderReplaceableIconFromPack(se.event.icon, sharedBackstage.providers.icons)]);\n              });\n            })\n          ])\n        ]),\n        eventOrder: deepMerge(toolbarButtonEventOrder, {\n          mousedown: [\n            'focusing',\n            'alloy.base.behaviour',\n            'item-type-events',\n            'normal-dropdown-events'\n          ]\n        }),\n        sandboxBehaviours: derive$1([\n          Keying.config({\n            mode: 'special',\n            onLeft: onLeftOrRightInMenu,\n            onRight: onLeftOrRightInMenu\n          }),\n          config('dropdown-sandbox-events', [\n            run$1(refetchTriggerEvent, (originalSandboxComp, se) => {\n              handleRefetchTrigger(originalSandboxComp);\n              se.stop();\n            }),\n            run$1(redirectMenuItemInteractionEvent, (sandboxComp, se) => {\n              handleRedirectToMenuItem(sandboxComp, se);\n              se.stop();\n            })\n          ])\n        ]),\n        lazySink: sharedBackstage.getSink,\n        toggleClass: `${ prefix }--active`,\n        parts: {\n          menu: {\n            ...part(false, spec.columns, spec.presets),\n            fakeFocus: spec.searchable,\n            onHighlightItem: updateAriaOnHighlight,\n            onCollapseMenu: (tmenuComp, itemCompCausingCollapse, nowActiveMenuComp) => {\n              Highlighting.getHighlighted(nowActiveMenuComp).each(itemComp => {\n                updateAriaOnHighlight(tmenuComp, nowActiveMenuComp, itemComp);\n              });\n            },\n            onDehighlightItem: updateAriaOnDehighlight\n          }\n        },\n        fetch: comp => Future.nu(curry(spec.fetch, comp))\n      }));\n      return memDropdown.asSpec();\n    };\n\n    const isMenuItemReference = item => isString(item);\n    const isSeparator$2 = item => item.type === 'separator';\n    const isExpandingMenuItem = item => has$2(item, 'getSubmenuItems');\n    const separator$2 = { type: 'separator' };\n    const unwrapReferences = (items, menuItems) => {\n      const realItems = foldl(items, (acc, item) => {\n        if (isMenuItemReference(item)) {\n          if (item === '') {\n            return acc;\n          } else if (item === '|') {\n            return acc.length > 0 && !isSeparator$2(acc[acc.length - 1]) ? acc.concat([separator$2]) : acc;\n          } else if (has$2(menuItems, item.toLowerCase())) {\n            return acc.concat([menuItems[item.toLowerCase()]]);\n          } else {\n            return acc;\n          }\n        } else {\n          return acc.concat([item]);\n        }\n      }, []);\n      if (realItems.length > 0 && isSeparator$2(realItems[realItems.length - 1])) {\n        realItems.pop();\n      }\n      return realItems;\n    };\n    const getFromExpandingItem = (item, menuItems) => {\n      const submenuItems = item.getSubmenuItems();\n      const rest = expand(submenuItems, menuItems);\n      const newMenus = deepMerge(rest.menus, { [item.value]: rest.items });\n      const newExpansions = deepMerge(rest.expansions, { [item.value]: item.value });\n      return {\n        item,\n        menus: newMenus,\n        expansions: newExpansions\n      };\n    };\n    const generateValueIfRequired = item => {\n      const itemValue = get$g(item, 'value').getOrThunk(() => generate$6('generated-menu-item'));\n      return deepMerge({ value: itemValue }, item);\n    };\n    const expand = (items, menuItems) => {\n      const realItems = unwrapReferences(isString(items) ? items.split(' ') : items, menuItems);\n      return foldr(realItems, (acc, item) => {\n        if (isExpandingMenuItem(item)) {\n          const itemWithValue = generateValueIfRequired(item);\n          const newData = getFromExpandingItem(itemWithValue, menuItems);\n          return {\n            menus: deepMerge(acc.menus, newData.menus),\n            items: [\n              newData.item,\n              ...acc.items\n            ],\n            expansions: deepMerge(acc.expansions, newData.expansions)\n          };\n        } else {\n          return {\n            ...acc,\n            items: [\n              item,\n              ...acc.items\n            ]\n          };\n        }\n      }, {\n        menus: {},\n        expansions: {},\n        items: []\n      });\n    };\n\n    const getSearchModeForField = settings => {\n      return settings.search.fold(() => ({ searchMode: 'no-search' }), searchSettings => ({\n        searchMode: 'search-with-field',\n        placeholder: searchSettings.placeholder\n      }));\n    };\n    const getSearchModeForResults = settings => {\n      return settings.search.fold(() => ({ searchMode: 'no-search' }), _ => ({ searchMode: 'search-with-results' }));\n    };\n    const build = (items, itemResponse, backstage, settings) => {\n      const primary = generate$6('primary-menu');\n      const data = expand(items, backstage.shared.providers.menuItems());\n      if (data.items.length === 0) {\n        return Optional.none();\n      }\n      const mainMenuSearchMode = getSearchModeForField(settings);\n      const mainMenu = createPartialMenu(primary, data.items, itemResponse, backstage, settings.isHorizontalMenu, mainMenuSearchMode);\n      const submenuSearchMode = getSearchModeForResults(settings);\n      const submenus = map$1(data.menus, (menuItems, menuName) => createPartialMenu(menuName, menuItems, itemResponse, backstage, false, submenuSearchMode));\n      const menus = deepMerge(submenus, wrap$1(primary, mainMenu));\n      return Optional.from(tieredMenu.tieredData(primary, menus, data.expansions));\n    };\n\n    const isSingleListItem = item => !has$2(item, 'items');\n    const dataAttribute = 'data-value';\n    const fetchItems = (dropdownComp, name, items, selectedValue) => map$2(items, item => {\n      if (!isSingleListItem(item)) {\n        return {\n          type: 'nestedmenuitem',\n          text: item.text,\n          getSubmenuItems: () => fetchItems(dropdownComp, name, item.items, selectedValue)\n        };\n      } else {\n        return {\n          type: 'togglemenuitem',\n          text: item.text,\n          value: item.value,\n          active: item.value === selectedValue,\n          onAction: () => {\n            Representing.setValue(dropdownComp, item.value);\n            emitWith(dropdownComp, formChangeEvent, { name });\n            Focusing.focus(dropdownComp);\n          }\n        };\n      }\n    });\n    const findItemByValue = (items, value) => findMap(items, item => {\n      if (!isSingleListItem(item)) {\n        return findItemByValue(item.items, value);\n      } else {\n        return someIf(item.value === value, item);\n      }\n    });\n    const renderListBox = (spec, backstage, initialData) => {\n      const providersBackstage = backstage.shared.providers;\n      const initialItem = initialData.bind(value => findItemByValue(spec.items, value)).orThunk(() => head(spec.items).filter(isSingleListItem));\n      const pLabel = spec.label.map(label => renderLabel$2(label, providersBackstage));\n      const pField = FormField.parts.field({\n        dom: {},\n        factory: {\n          sketch: sketchSpec => renderCommonDropdown({\n            uid: sketchSpec.uid,\n            text: initialItem.map(item => item.text),\n            icon: Optional.none(),\n            tooltip: spec.label,\n            role: Optional.none(),\n            fetch: (comp, callback) => {\n              const items = fetchItems(comp, spec.name, spec.items, Representing.getValue(comp));\n              callback(build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n                isHorizontalMenu: false,\n                search: Optional.none()\n              }));\n            },\n            onSetup: constant$1(noop),\n            getApi: constant$1({}),\n            columns: 1,\n            presets: 'normal',\n            classes: [],\n            dropdownBehaviours: [\n              Tabstopping.config({}),\n              RepresentingConfigs.withComp(initialItem.map(item => item.value), comp => get$f(comp.element, dataAttribute), (comp, data) => {\n                findItemByValue(spec.items, data).each(item => {\n                  set$9(comp.element, dataAttribute, item.value);\n                  emitWith(comp, updateMenuText, { text: item.text });\n                });\n              })\n            ]\n          }, 'tox-listbox', backstage.shared)\n        }\n      });\n      const listBoxWrap = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-listboxfield']\n        },\n        components: [pField]\n      };\n      return FormField.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: flatten([\n          pLabel.toArray(),\n          [listBoxWrap]\n        ]),\n        fieldBehaviours: derive$1([Disabling.config({\n            disabled: constant$1(!spec.enabled),\n            onDisabled: comp => {\n              FormField.getField(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormField.getField(comp).each(Disabling.enable);\n            }\n          })])\n      });\n    };\n\n    const renderPanel = (spec, backstage) => ({\n      dom: {\n        tag: 'div',\n        classes: spec.classes\n      },\n      components: map$2(spec.items, backstage.shared.interpreter)\n    });\n\n    const factory$f = (detail, _spec) => {\n      const options = map$2(detail.options, option => ({\n        dom: {\n          tag: 'option',\n          value: option.value,\n          innerHtml: option.text\n        }\n      }));\n      const initialValues = detail.data.map(v => wrap$1('initialValue', v)).getOr({});\n      return {\n        uid: detail.uid,\n        dom: {\n          tag: 'select',\n          classes: detail.selectClasses,\n          attributes: detail.selectAttributes\n        },\n        components: options,\n        behaviours: augment(detail.selectBehaviours, [\n          Focusing.config({}),\n          Representing.config({\n            store: {\n              mode: 'manual',\n              getValue: select => {\n                return get$6(select.element);\n              },\n              setValue: (select, newValue) => {\n                const found = find$5(detail.options, opt => opt.value === newValue);\n                if (found.isSome()) {\n                  set$5(select.element, newValue);\n                }\n              },\n              ...initialValues\n            }\n          })\n        ])\n      };\n    };\n    const HtmlSelect = single({\n      name: 'HtmlSelect',\n      configFields: [\n        required$1('options'),\n        field('selectBehaviours', [\n          Focusing,\n          Representing\n        ]),\n        defaulted('selectClasses', []),\n        defaulted('selectAttributes', {}),\n        option$3('data')\n      ],\n      factory: factory$f\n    });\n\n    const renderSelectBox = (spec, providersBackstage, initialData) => {\n      const translatedOptions = map$2(spec.items, item => ({\n        text: providersBackstage.translate(item.text),\n        value: item.value\n      }));\n      const pLabel = spec.label.map(label => renderLabel$2(label, providersBackstage));\n      const pField = FormField.parts.field({\n        dom: {},\n        ...initialData.map(data => ({ data })).getOr({}),\n        selectAttributes: { size: spec.size },\n        options: translatedOptions,\n        factory: HtmlSelect,\n        selectBehaviours: derive$1([\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          Tabstopping.config({}),\n          config('selectbox-change', [run$1(change(), (component, _) => {\n              emitWith(component, formChangeEvent, { name: spec.name });\n            })])\n        ])\n      });\n      const chevron = spec.size > 1 ? Optional.none() : Optional.some(render$3('chevron-down', {\n        tag: 'div',\n        classes: ['tox-selectfield__icon-js']\n      }, providersBackstage.icons));\n      const selectWrap = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-selectfield']\n        },\n        components: flatten([\n          [pField],\n          chevron.toArray()\n        ])\n      };\n      return FormField.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: flatten([\n          pLabel.toArray(),\n          [selectWrap]\n        ]),\n        fieldBehaviours: derive$1([\n          Disabling.config({\n            disabled: () => !spec.enabled || providersBackstage.isDisabled(),\n            onDisabled: comp => {\n              FormField.getField(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormField.getField(comp).each(Disabling.enable);\n            }\n          }),\n          receivingConfig()\n        ])\n      });\n    };\n\n    const schema$h = constant$1([\n      defaulted('field1Name', 'field1'),\n      defaulted('field2Name', 'field2'),\n      onStrictHandler('onLockedChange'),\n      markers$1(['lockClass']),\n      defaulted('locked', false),\n      SketchBehaviours.field('coupledFieldBehaviours', [\n        Composing,\n        Representing\n      ])\n    ]);\n    const getField = (comp, detail, partName) => getPart(comp, detail, partName).bind(Composing.getCurrent);\n    const coupledPart = (selfName, otherName) => required({\n      factory: FormField,\n      name: selfName,\n      overrides: detail => {\n        return {\n          fieldBehaviours: derive$1([config('coupled-input-behaviour', [run$1(input(), me => {\n                getField(me, detail, otherName).each(other => {\n                  getPart(me, detail, 'lock').each(lock => {\n                    if (Toggling.isOn(lock)) {\n                      detail.onLockedChange(me, other, lock);\n                    }\n                  });\n                });\n              })])])\n        };\n      }\n    });\n    const parts$c = constant$1([\n      coupledPart('field1', 'field2'),\n      coupledPart('field2', 'field1'),\n      required({\n        factory: Button,\n        schema: [required$1('dom')],\n        name: 'lock',\n        overrides: detail => {\n          return {\n            buttonBehaviours: derive$1([Toggling.config({\n                selected: detail.locked,\n                toggleClass: detail.markers.lockClass,\n                aria: { mode: 'pressed' }\n              })])\n          };\n        }\n      })\n    ]);\n\n    const factory$e = (detail, components, _spec, _externals) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components,\n      behaviours: SketchBehaviours.augment(detail.coupledFieldBehaviours, [\n        Composing.config({ find: Optional.some }),\n        Representing.config({\n          store: {\n            mode: 'manual',\n            getValue: comp => {\n              const parts = getPartsOrDie(comp, detail, [\n                'field1',\n                'field2'\n              ]);\n              return {\n                [detail.field1Name]: Representing.getValue(parts.field1()),\n                [detail.field2Name]: Representing.getValue(parts.field2())\n              };\n            },\n            setValue: (comp, value) => {\n              const parts = getPartsOrDie(comp, detail, [\n                'field1',\n                'field2'\n              ]);\n              if (hasNonNullableKey(value, detail.field1Name)) {\n                Representing.setValue(parts.field1(), value[detail.field1Name]);\n              }\n              if (hasNonNullableKey(value, detail.field2Name)) {\n                Representing.setValue(parts.field2(), value[detail.field2Name]);\n              }\n            }\n          }\n        })\n      ]),\n      apis: {\n        getField1: component => getPart(component, detail, 'field1'),\n        getField2: component => getPart(component, detail, 'field2'),\n        getLock: component => getPart(component, detail, 'lock')\n      }\n    });\n    const FormCoupledInputs = composite({\n      name: 'FormCoupledInputs',\n      configFields: schema$h(),\n      partFields: parts$c(),\n      factory: factory$e,\n      apis: {\n        getField1: (apis, component) => apis.getField1(component),\n        getField2: (apis, component) => apis.getField2(component),\n        getLock: (apis, component) => apis.getLock(component)\n      }\n    });\n\n    const formatSize = size => {\n      const unitDec = {\n        '': 0,\n        'px': 0,\n        'pt': 1,\n        'mm': 1,\n        'pc': 2,\n        'ex': 2,\n        'em': 2,\n        'ch': 2,\n        'rem': 2,\n        'cm': 3,\n        'in': 4,\n        '%': 4\n      };\n      const maxDecimal = unit => unit in unitDec ? unitDec[unit] : 1;\n      let numText = size.value.toFixed(maxDecimal(size.unit));\n      if (numText.indexOf('.') !== -1) {\n        numText = numText.replace(/\\.?0*$/, '');\n      }\n      return numText + size.unit;\n    };\n    const parseSize = sizeText => {\n      const numPattern = /^\\s*(\\d+(?:\\.\\d+)?)\\s*(|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)\\s*$/;\n      const match = numPattern.exec(sizeText);\n      if (match !== null) {\n        const value = parseFloat(match[1]);\n        const unit = match[2];\n        return Result.value({\n          value,\n          unit\n        });\n      } else {\n        return Result.error(sizeText);\n      }\n    };\n    const convertUnit = (size, unit) => {\n      const inInch = {\n        '': 96,\n        'px': 96,\n        'pt': 72,\n        'cm': 2.54,\n        'pc': 12,\n        'mm': 25.4,\n        'in': 1\n      };\n      const supported = u => has$2(inInch, u);\n      if (size.unit === unit) {\n        return Optional.some(size.value);\n      } else if (supported(size.unit) && supported(unit)) {\n        if (inInch[size.unit] === inInch[unit]) {\n          return Optional.some(size.value);\n        } else {\n          return Optional.some(size.value / inInch[size.unit] * inInch[unit]);\n        }\n      } else {\n        return Optional.none();\n      }\n    };\n    const noSizeConversion = _input => Optional.none();\n    const ratioSizeConversion = (scale, unit) => size => convertUnit(size, unit).map(value => ({\n      value: value * scale,\n      unit\n    }));\n    const makeRatioConverter = (currentFieldText, otherFieldText) => {\n      const cValue = parseSize(currentFieldText).toOptional();\n      const oValue = parseSize(otherFieldText).toOptional();\n      return lift2(cValue, oValue, (cSize, oSize) => convertUnit(cSize, oSize.unit).map(val => oSize.value / val).map(r => ratioSizeConversion(r, oSize.unit)).getOr(noSizeConversion)).getOr(noSizeConversion);\n    };\n\n    const renderSizeInput = (spec, providersBackstage) => {\n      let converter = noSizeConversion;\n      const ratioEvent = generate$6('ratio-event');\n      const makeIcon = iconName => render$3(iconName, {\n        tag: 'span',\n        classes: [\n          'tox-icon',\n          'tox-lock-icon__' + iconName\n        ]\n      }, providersBackstage.icons);\n      const pLock = FormCoupledInputs.parts.lock({\n        dom: {\n          tag: 'button',\n          classes: [\n            'tox-lock',\n            'tox-button',\n            'tox-button--naked',\n            'tox-button--icon'\n          ],\n          attributes: { title: providersBackstage.translate(spec.label.getOr('Constrain proportions')) }\n        },\n        components: [\n          makeIcon('lock'),\n          makeIcon('unlock')\n        ],\n        buttonBehaviours: derive$1([\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          receivingConfig(),\n          Tabstopping.config({})\n        ])\n      });\n      const formGroup = components => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components\n      });\n      const getFieldPart = isField1 => FormField.parts.field({\n        factory: Input,\n        inputClasses: ['tox-textfield'],\n        inputBehaviours: derive$1([\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          receivingConfig(),\n          Tabstopping.config({}),\n          config('size-input-events', [\n            run$1(focusin(), (component, _simulatedEvent) => {\n              emitWith(component, ratioEvent, { isField1 });\n            }),\n            run$1(change(), (component, _simulatedEvent) => {\n              emitWith(component, formChangeEvent, { name: spec.name });\n            })\n          ])\n        ]),\n        selectOnFocus: false\n      });\n      const getLabel = label => ({\n        dom: {\n          tag: 'label',\n          classes: ['tox-label']\n        },\n        components: [text$1(providersBackstage.translate(label))]\n      });\n      const widthField = FormCoupledInputs.parts.field1(formGroup([\n        FormField.parts.label(getLabel('Width')),\n        getFieldPart(true)\n      ]));\n      const heightField = FormCoupledInputs.parts.field2(formGroup([\n        FormField.parts.label(getLabel('Height')),\n        getFieldPart(false)\n      ]));\n      return FormCoupledInputs.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-form__controls-h-stack']\n            },\n            components: [\n              widthField,\n              heightField,\n              formGroup([\n                getLabel(nbsp),\n                pLock\n              ])\n            ]\n          }],\n        field1Name: 'width',\n        field2Name: 'height',\n        locked: true,\n        markers: { lockClass: 'tox-locked' },\n        onLockedChange: (current, other, _lock) => {\n          parseSize(Representing.getValue(current)).each(size => {\n            converter(size).each(newSize => {\n              Representing.setValue(other, formatSize(newSize));\n            });\n          });\n        },\n        coupledFieldBehaviours: derive$1([\n          Disabling.config({\n            disabled: () => !spec.enabled || providersBackstage.isDisabled(),\n            onDisabled: comp => {\n              FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.disable);\n              FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.disable);\n              FormCoupledInputs.getLock(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.enable);\n              FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.enable);\n              FormCoupledInputs.getLock(comp).each(Disabling.enable);\n            }\n          }),\n          receivingConfig(),\n          config('size-input-events2', [run$1(ratioEvent, (component, simulatedEvent) => {\n              const isField1 = simulatedEvent.event.isField1;\n              const optCurrent = isField1 ? FormCoupledInputs.getField1(component) : FormCoupledInputs.getField2(component);\n              const optOther = isField1 ? FormCoupledInputs.getField2(component) : FormCoupledInputs.getField1(component);\n              const value1 = optCurrent.map(Representing.getValue).getOr('');\n              const value2 = optOther.map(Representing.getValue).getOr('');\n              converter = makeRatioConverter(value1, value2);\n            })])\n        ])\n      });\n    };\n\n    const renderSlider = (spec, providerBackstage, initialData) => {\n      const labelPart = Slider.parts.label({\n        dom: {\n          tag: 'label',\n          classes: ['tox-label']\n        },\n        components: [text$1(providerBackstage.translate(spec.label))]\n      });\n      const spectrum = Slider.parts.spectrum({\n        dom: {\n          tag: 'div',\n          classes: ['tox-slider__rail'],\n          attributes: { role: 'presentation' }\n        }\n      });\n      const thumb = Slider.parts.thumb({\n        dom: {\n          tag: 'div',\n          classes: ['tox-slider__handle'],\n          attributes: { role: 'presentation' }\n        }\n      });\n      return Slider.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-slider'],\n          attributes: { role: 'presentation' }\n        },\n        model: {\n          mode: 'x',\n          minX: spec.min,\n          maxX: spec.max,\n          getInitialValue: constant$1(initialData.getOrThunk(() => (Math.abs(spec.max) - Math.abs(spec.min)) / 2))\n        },\n        components: [\n          labelPart,\n          spectrum,\n          thumb\n        ],\n        sliderBehaviours: derive$1([\n          ComposingConfigs.self(),\n          Focusing.config({})\n        ]),\n        onChoose: (component, thumb, value) => {\n          emitWith(component, formChangeEvent, {\n            name: spec.name,\n            value\n          });\n        }\n      });\n    };\n\n    const renderTable = (spec, providersBackstage) => {\n      const renderTh = text => ({\n        dom: {\n          tag: 'th',\n          innerHtml: providersBackstage.translate(text)\n        }\n      });\n      const renderHeader = header => ({\n        dom: { tag: 'thead' },\n        components: [{\n            dom: { tag: 'tr' },\n            components: map$2(header, renderTh)\n          }]\n      });\n      const renderTd = text => ({\n        dom: {\n          tag: 'td',\n          innerHtml: providersBackstage.translate(text)\n        }\n      });\n      const renderTr = row => ({\n        dom: { tag: 'tr' },\n        components: map$2(row, renderTd)\n      });\n      const renderRows = rows => ({\n        dom: { tag: 'tbody' },\n        components: map$2(rows, renderTr)\n      });\n      return {\n        dom: {\n          tag: 'table',\n          classes: ['tox-dialog__table']\n        },\n        components: [\n          renderHeader(spec.header),\n          renderRows(spec.cells)\n        ],\n        behaviours: derive$1([\n          Tabstopping.config({}),\n          Focusing.config({})\n        ])\n      };\n    };\n\n    const renderTextField = (spec, providersBackstage) => {\n      const pLabel = spec.label.map(label => renderLabel$2(label, providersBackstage));\n      const baseInputBehaviours = [\n        Disabling.config({ disabled: () => spec.disabled || providersBackstage.isDisabled() }),\n        receivingConfig(),\n        Keying.config({\n          mode: 'execution',\n          useEnter: spec.multiline !== true,\n          useControlEnter: spec.multiline === true,\n          execute: comp => {\n            emit(comp, formSubmitEvent);\n            return Optional.some(true);\n          }\n        }),\n        config('textfield-change', [\n          run$1(input(), (component, _) => {\n            emitWith(component, formChangeEvent, { name: spec.name });\n          }),\n          run$1(postPaste(), (component, _) => {\n            emitWith(component, formChangeEvent, { name: spec.name });\n          })\n        ]),\n        Tabstopping.config({})\n      ];\n      const validatingBehaviours = spec.validation.map(vl => Invalidating.config({\n        getRoot: input => {\n          return parentElement(input.element);\n        },\n        invalidClass: 'tox-invalid',\n        validator: {\n          validate: input => {\n            const v = Representing.getValue(input);\n            const result = vl.validator(v);\n            return Future.pure(result === true ? Result.value(v) : Result.error(result));\n          },\n          validateOnLoad: vl.validateOnLoad\n        }\n      })).toArray();\n      const placeholder = spec.placeholder.fold(constant$1({}), p => ({ placeholder: providersBackstage.translate(p) }));\n      const inputMode = spec.inputMode.fold(constant$1({}), mode => ({ inputmode: mode }));\n      const inputAttributes = {\n        ...placeholder,\n        ...inputMode\n      };\n      const pField = FormField.parts.field({\n        tag: spec.multiline === true ? 'textarea' : 'input',\n        ...spec.data.map(data => ({ data })).getOr({}),\n        inputAttributes,\n        inputClasses: [spec.classname],\n        inputBehaviours: derive$1(flatten([\n          baseInputBehaviours,\n          validatingBehaviours\n        ])),\n        selectOnFocus: false,\n        factory: Input\n      });\n      const extraClasses = spec.flex ? ['tox-form__group--stretched'] : [];\n      const extraClasses2 = extraClasses.concat(spec.maximized ? ['tox-form-group--maximize'] : []);\n      const extraBehaviours = [\n        Disabling.config({\n          disabled: () => spec.disabled || providersBackstage.isDisabled(),\n          onDisabled: comp => {\n            FormField.getField(comp).each(Disabling.disable);\n          },\n          onEnabled: comp => {\n            FormField.getField(comp).each(Disabling.enable);\n          }\n        }),\n        receivingConfig()\n      ];\n      return renderFormFieldWith(pLabel, pField, extraClasses2, extraBehaviours);\n    };\n    const renderInput = (spec, providersBackstage, initialData) => renderTextField({\n      name: spec.name,\n      multiline: false,\n      label: spec.label,\n      inputMode: spec.inputMode,\n      placeholder: spec.placeholder,\n      flex: false,\n      disabled: !spec.enabled,\n      classname: 'tox-textfield',\n      validation: Optional.none(),\n      maximized: spec.maximized,\n      data: initialData\n    }, providersBackstage);\n    const renderTextarea = (spec, providersBackstage, initialData) => renderTextField({\n      name: spec.name,\n      multiline: true,\n      label: spec.label,\n      inputMode: Optional.none(),\n      placeholder: spec.placeholder,\n      flex: true,\n      disabled: !spec.enabled,\n      classname: 'tox-textarea',\n      validation: Optional.none(),\n      maximized: spec.maximized,\n      data: initialData\n    }, providersBackstage);\n\n    const events$6 = (streamConfig, streamState) => {\n      const streams = streamConfig.stream.streams;\n      const processor = streams.setup(streamConfig, streamState);\n      return derive$2([\n        run$1(streamConfig.event, processor),\n        runOnDetached(() => streamState.cancel())\n      ].concat(streamConfig.cancelEvent.map(e => [run$1(e, () => streamState.cancel())]).getOr([])));\n    };\n\n    var ActiveStreaming = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$6\n    });\n\n    const first = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        if (isNull(timer)) {\n          timer = setTimeout(() => {\n            timer = null;\n            fn.apply(null, args);\n          }, rate);\n        }\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n    const last = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        cancel();\n        timer = setTimeout(() => {\n          timer = null;\n          fn.apply(null, args);\n        }, rate);\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const throttle = _config => {\n      const state = Cell(null);\n      const readState = () => ({ timer: state.get() !== null ? 'set' : 'unset' });\n      const setTimer = t => {\n        state.set(t);\n      };\n      const cancel = () => {\n        const t = state.get();\n        if (t !== null) {\n          t.cancel();\n        }\n      };\n      return nu$8({\n        readState,\n        setTimer,\n        cancel\n      });\n    };\n    const init$9 = spec => spec.stream.streams.state(spec);\n\n    var StreamingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        throttle: throttle,\n        init: init$9\n    });\n\n    const setup$c = (streamInfo, streamState) => {\n      const sInfo = streamInfo.stream;\n      const throttler = last(streamInfo.onStream, sInfo.delay);\n      streamState.setTimer(throttler);\n      return (component, simulatedEvent) => {\n        throttler.throttle(component, simulatedEvent);\n        if (sInfo.stopEvent) {\n          simulatedEvent.stop();\n        }\n      };\n    };\n    var StreamingSchema = [\n      requiredOf('stream', choose$1('mode', {\n        throttle: [\n          required$1('delay'),\n          defaulted('stopEvent', true),\n          output$1('streams', {\n            setup: setup$c,\n            state: throttle\n          })\n        ]\n      })),\n      defaulted('event', 'input'),\n      option$3('cancelEvent'),\n      onStrictHandler('onStream')\n    ];\n\n    const Streaming = create$3({\n      fields: StreamingSchema,\n      name: 'streaming',\n      active: ActiveStreaming,\n      state: StreamingState\n    });\n\n    const setValueFromItem = (model, input, item) => {\n      const itemData = Representing.getValue(item);\n      Representing.setValue(input, itemData);\n      setCursorAtEnd(input);\n    };\n    const setSelectionOn = (input, f) => {\n      const el = input.element;\n      const value = get$6(el);\n      const node = el.dom;\n      if (get$f(el, 'type') !== 'number') {\n        f(node, value);\n      }\n    };\n    const setCursorAtEnd = input => {\n      setSelectionOn(input, (node, value) => node.setSelectionRange(value.length, value.length));\n    };\n    const setSelectionToEnd = (input, startOffset) => {\n      setSelectionOn(input, (node, value) => node.setSelectionRange(startOffset, value.length));\n    };\n    const attemptSelectOver = (model, input, item) => {\n      if (!model.selectsOver) {\n        return Optional.none();\n      } else {\n        const currentValue = Representing.getValue(input);\n        const inputDisplay = model.getDisplayText(currentValue);\n        const itemValue = Representing.getValue(item);\n        const itemDisplay = model.getDisplayText(itemValue);\n        return itemDisplay.indexOf(inputDisplay) === 0 ? Optional.some(() => {\n          setValueFromItem(model, input, item);\n          setSelectionToEnd(input, inputDisplay.length);\n        }) : Optional.none();\n      }\n    };\n\n    const itemExecute = constant$1('alloy.typeahead.itemexecute');\n\n    const make$3 = (detail, components, spec, externals) => {\n      const navigateList = (comp, simulatedEvent, highlighter) => {\n        detail.previewing.set(false);\n        const sandbox = Coupling.getCoupled(comp, 'sandbox');\n        if (Sandboxing.isOpen(sandbox)) {\n          Composing.getCurrent(sandbox).each(menu => {\n            Highlighting.getHighlighted(menu).fold(() => {\n              highlighter(menu);\n            }, () => {\n              dispatchEvent(sandbox, menu.element, 'keydown', simulatedEvent);\n            });\n          });\n        } else {\n          const onOpenSync = sandbox => {\n            Composing.getCurrent(sandbox).each(highlighter);\n          };\n          open(detail, mapFetch(comp), comp, sandbox, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n        }\n      };\n      const focusBehaviours$1 = focusBehaviours(detail);\n      const mapFetch = comp => tdata => tdata.map(data => {\n        const menus = values(data.menus);\n        const items = bind$3(menus, menu => filter$2(menu.items, item => item.type === 'item'));\n        const repState = Representing.getState(comp);\n        repState.update(map$2(items, item => item.data));\n        return data;\n      });\n      const getActiveMenu = sandboxComp => Composing.getCurrent(sandboxComp);\n      const typeaheadCustomEvents = 'typeaheadevents';\n      const behaviours = [\n        Focusing.config({}),\n        Representing.config({\n          onSetValue: detail.onSetValue,\n          store: {\n            mode: 'dataset',\n            getDataKey: comp => get$6(comp.element),\n            getFallbackEntry: itemString => ({\n              value: itemString,\n              meta: {}\n            }),\n            setValue: (comp, data) => {\n              set$5(comp.element, detail.model.getDisplayText(data));\n            },\n            ...detail.initialData.map(d => wrap$1('initialValue', d)).getOr({})\n          }\n        }),\n        Streaming.config({\n          stream: {\n            mode: 'throttle',\n            delay: detail.responseTime,\n            stopEvent: false\n          },\n          onStream: (component, _simulatedEvent) => {\n            const sandbox = Coupling.getCoupled(component, 'sandbox');\n            const focusInInput = Focusing.isFocused(component);\n            if (focusInInput) {\n              if (get$6(component.element).length >= detail.minChars) {\n                const previousValue = getActiveMenu(sandbox).bind(activeMenu => Highlighting.getHighlighted(activeMenu).map(Representing.getValue));\n                detail.previewing.set(true);\n                const onOpenSync = _sandbox => {\n                  getActiveMenu(sandbox).each(activeMenu => {\n                    previousValue.fold(() => {\n                      if (detail.model.selectsOver) {\n                        Highlighting.highlightFirst(activeMenu);\n                      }\n                    }, pv => {\n                      Highlighting.highlightBy(activeMenu, item => {\n                        const itemData = Representing.getValue(item);\n                        return itemData.value === pv.value;\n                      });\n                      Highlighting.getHighlighted(activeMenu).orThunk(() => {\n                        Highlighting.highlightFirst(activeMenu);\n                        return Optional.none();\n                      });\n                    });\n                  });\n                };\n                open(detail, mapFetch(component), component, sandbox, externals, onOpenSync, HighlightOnOpen.HighlightJustMenu).get(noop);\n              }\n            }\n          },\n          cancelEvent: typeaheadCancel()\n        }),\n        Keying.config({\n          mode: 'special',\n          onDown: (comp, simulatedEvent) => {\n            navigateList(comp, simulatedEvent, Highlighting.highlightFirst);\n            return Optional.some(true);\n          },\n          onEscape: comp => {\n            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n            if (Sandboxing.isOpen(sandbox)) {\n              Sandboxing.close(sandbox);\n              return Optional.some(true);\n            }\n            return Optional.none();\n          },\n          onUp: (comp, simulatedEvent) => {\n            navigateList(comp, simulatedEvent, Highlighting.highlightLast);\n            return Optional.some(true);\n          },\n          onEnter: comp => {\n            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n            const sandboxIsOpen = Sandboxing.isOpen(sandbox);\n            if (sandboxIsOpen && !detail.previewing.get()) {\n              return getActiveMenu(sandbox).bind(activeMenu => Highlighting.getHighlighted(activeMenu)).map(item => {\n                emitWith(comp, itemExecute(), { item });\n                return true;\n              });\n            } else {\n              const currentValue = Representing.getValue(comp);\n              emit(comp, typeaheadCancel());\n              detail.onExecute(sandbox, comp, currentValue);\n              if (sandboxIsOpen) {\n                Sandboxing.close(sandbox);\n              }\n              return Optional.some(true);\n            }\n          }\n        }),\n        Toggling.config({\n          toggleClass: detail.markers.openClass,\n          aria: { mode: 'expanded' }\n        }),\n        Coupling.config({\n          others: {\n            sandbox: hotspot => {\n              return makeSandbox$1(detail, hotspot, {\n                onOpen: () => Toggling.on(hotspot),\n                onClose: () => Toggling.off(hotspot)\n              });\n            }\n          }\n        }),\n        config(typeaheadCustomEvents, [\n          runOnAttached(typeaheadComp => {\n            detail.lazyTypeaheadComp.set(Optional.some(typeaheadComp));\n          }),\n          runOnDetached(_typeaheadComp => {\n            detail.lazyTypeaheadComp.set(Optional.none());\n          }),\n          runOnExecute$1(comp => {\n            const onOpenSync = noop;\n            togglePopup(detail, mapFetch(comp), comp, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n          }),\n          run$1(itemExecute(), (comp, se) => {\n            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n            setValueFromItem(detail.model, comp, se.event.item);\n            emit(comp, typeaheadCancel());\n            detail.onItemExecute(comp, sandbox, se.event.item, Representing.getValue(comp));\n            Sandboxing.close(sandbox);\n            setCursorAtEnd(comp);\n          })\n        ].concat(detail.dismissOnBlur ? [run$1(postBlur(), typeahead => {\n            const sandbox = Coupling.getCoupled(typeahead, 'sandbox');\n            if (search(sandbox.element).isNone()) {\n              Sandboxing.close(sandbox);\n            }\n          })] : []))\n      ];\n      const eventOrder = {\n        [detachedFromDom()]: [\n          Representing.name(),\n          Streaming.name(),\n          typeaheadCustomEvents\n        ],\n        ...detail.eventOrder\n      };\n      return {\n        uid: detail.uid,\n        dom: dom(deepMerge(detail, {\n          inputAttributes: {\n            'role': 'combobox',\n            'aria-autocomplete': 'list',\n            'aria-haspopup': 'true'\n          }\n        })),\n        behaviours: {\n          ...focusBehaviours$1,\n          ...augment(detail.typeaheadBehaviours, behaviours)\n        },\n        eventOrder\n      };\n    };\n\n    const schema$g = constant$1([\n      option$3('lazySink'),\n      required$1('fetch'),\n      defaulted('minChars', 5),\n      defaulted('responseTime', 1000),\n      onHandler('onOpen'),\n      defaulted('getHotspot', Optional.some),\n      defaulted('getAnchorOverrides', constant$1({})),\n      defaulted('layouts', Optional.none()),\n      defaulted('eventOrder', {}),\n      defaultedObjOf('model', {}, [\n        defaulted('getDisplayText', itemData => itemData.meta !== undefined && itemData.meta.text !== undefined ? itemData.meta.text : itemData.value),\n        defaulted('selectsOver', true),\n        defaulted('populateFromBrowse', true)\n      ]),\n      onHandler('onSetValue'),\n      onKeyboardHandler('onExecute'),\n      onHandler('onItemExecute'),\n      defaulted('inputClasses', []),\n      defaulted('inputAttributes', {}),\n      defaulted('inputStyles', {}),\n      defaulted('matchWidth', true),\n      defaulted('useMinWidth', false),\n      defaulted('dismissOnBlur', true),\n      markers$1(['openClass']),\n      option$3('initialData'),\n      field('typeaheadBehaviours', [\n        Focusing,\n        Representing,\n        Streaming,\n        Keying,\n        Toggling,\n        Coupling\n      ]),\n      customField('lazyTypeaheadComp', () => Cell(Optional.none)),\n      customField('previewing', () => Cell(true))\n    ].concat(schema$l()).concat(sandboxFields()));\n    const parts$b = constant$1([external({\n        schema: [tieredMenuMarkers()],\n        name: 'menu',\n        overrides: detail => {\n          return {\n            fakeFocus: true,\n            onHighlightItem: (_tmenu, menu, item) => {\n              if (!detail.previewing.get()) {\n                detail.lazyTypeaheadComp.get().each(input => {\n                  if (detail.model.populateFromBrowse) {\n                    setValueFromItem(detail.model, input, item);\n                  }\n                });\n              } else {\n                detail.lazyTypeaheadComp.get().each(input => {\n                  attemptSelectOver(detail.model, input, item).fold(() => {\n                    if (detail.model.selectsOver) {\n                      Highlighting.dehighlight(menu, item);\n                      detail.previewing.set(true);\n                    } else {\n                      detail.previewing.set(false);\n                    }\n                  }, selectOverTextInInput => {\n                    selectOverTextInInput();\n                    detail.previewing.set(false);\n                  });\n                });\n              }\n            },\n            onExecute: (_menu, item) => {\n              return detail.lazyTypeaheadComp.get().map(typeahead => {\n                emitWith(typeahead, itemExecute(), { item });\n                return true;\n              });\n            },\n            onHover: (menu, item) => {\n              detail.previewing.set(false);\n              detail.lazyTypeaheadComp.get().each(input => {\n                if (detail.model.populateFromBrowse) {\n                  setValueFromItem(detail.model, input, item);\n                }\n              });\n            }\n          };\n        }\n      })]);\n\n    const Typeahead = composite({\n      name: 'Typeahead',\n      configFields: schema$g(),\n      partFields: parts$b(),\n      factory: make$3\n    });\n\n    const wrap = delegate => {\n      const toCached = () => {\n        return wrap(delegate.toCached());\n      };\n      const bindFuture = f => {\n        return wrap(delegate.bind(resA => resA.fold(err => Future.pure(Result.error(err)), a => f(a))));\n      };\n      const bindResult = f => {\n        return wrap(delegate.map(resA => resA.bind(f)));\n      };\n      const mapResult = f => {\n        return wrap(delegate.map(resA => resA.map(f)));\n      };\n      const mapError = f => {\n        return wrap(delegate.map(resA => resA.mapError(f)));\n      };\n      const foldResult = (whenError, whenValue) => {\n        return delegate.map(res => res.fold(whenError, whenValue));\n      };\n      const withTimeout = (timeout, errorThunk) => {\n        return wrap(Future.nu(callback => {\n          let timedOut = false;\n          const timer = setTimeout(() => {\n            timedOut = true;\n            callback(Result.error(errorThunk()));\n          }, timeout);\n          delegate.get(result => {\n            if (!timedOut) {\n              clearTimeout(timer);\n              callback(result);\n            }\n          });\n        }));\n      };\n      return {\n        ...delegate,\n        toCached,\n        bindFuture,\n        bindResult,\n        mapResult,\n        mapError,\n        foldResult,\n        withTimeout\n      };\n    };\n    const nu$1 = worker => {\n      return wrap(Future.nu(worker));\n    };\n    const value = value => {\n      return wrap(Future.pure(Result.value(value)));\n    };\n    const error = error => {\n      return wrap(Future.pure(Result.error(error)));\n    };\n    const fromResult = result => {\n      return wrap(Future.pure(result));\n    };\n    const fromFuture = future => {\n      return wrap(future.map(Result.value));\n    };\n    const fromPromise = promise => {\n      return nu$1(completer => {\n        promise.then(value => {\n          completer(Result.value(value));\n        }, error => {\n          completer(Result.error(error));\n        });\n      });\n    };\n    const FutureResult = {\n      nu: nu$1,\n      wrap,\n      pure: value,\n      value,\n      error,\n      fromResult,\n      fromFuture,\n      fromPromise\n    };\n\n    const getMenuButtonApi = component => ({\n      isEnabled: () => !Disabling.isDisabled(component),\n      setEnabled: state => Disabling.set(component, !state),\n      setActive: state => {\n        const elm = component.element;\n        if (state) {\n          add$2(elm, 'tox-tbtn--enabled');\n          set$9(elm, 'aria-pressed', true);\n        } else {\n          remove$2(elm, 'tox-tbtn--enabled');\n          remove$7(elm, 'aria-pressed');\n        }\n      },\n      isActive: () => has(component.element, 'tox-tbtn--enabled')\n    });\n    const renderMenuButton = (spec, prefix, backstage, role) => {\n      return renderCommonDropdown({\n        text: spec.text,\n        icon: spec.icon,\n        tooltip: spec.tooltip,\n        searchable: spec.search.isSome(),\n        role,\n        fetch: (dropdownComp, callback) => {\n          const fetchContext = { pattern: spec.search.isSome() ? getSearchPattern(dropdownComp) : '' };\n          spec.fetch(items => {\n            callback(build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n              isHorizontalMenu: false,\n              search: spec.search\n            }));\n          }, fetchContext);\n        },\n        onSetup: spec.onSetup,\n        getApi: getMenuButtonApi,\n        columns: 1,\n        presets: 'normal',\n        classes: [],\n        dropdownBehaviours: [Tabstopping.config({})]\n      }, prefix, backstage.shared);\n    };\n    const getFetch = (items, getButton, backstage) => {\n      const getMenuItemAction = item => api => {\n        const newValue = !api.isActive();\n        api.setActive(newValue);\n        item.storage.set(newValue);\n        backstage.shared.getSink().each(sink => {\n          getButton().getOpt(sink).each(orig => {\n            focus$3(orig.element);\n            emitWith(orig, formActionEvent, {\n              name: item.name,\n              value: item.storage.get()\n            });\n          });\n        });\n      };\n      const getMenuItemSetup = item => api => {\n        api.setActive(item.storage.get());\n      };\n      return success => {\n        success(map$2(items, item => {\n          const text = item.text.fold(() => ({}), text => ({ text }));\n          return {\n            type: item.type,\n            active: false,\n            ...text,\n            onAction: getMenuItemAction(item),\n            onSetup: getMenuItemSetup(item)\n          };\n        }));\n      };\n    };\n\n    const renderCommonSpec = (spec, actionOpt, extraBehaviours = [], dom, components, providersBackstage) => {\n      const action = actionOpt.fold(() => ({}), action => ({ action }));\n      const common = {\n        buttonBehaviours: derive$1([\n          DisablingConfigs.button(() => !spec.enabled || providersBackstage.isDisabled()),\n          receivingConfig(),\n          Tabstopping.config({}),\n          config('button press', [\n            preventDefault('click'),\n            preventDefault('mousedown')\n          ])\n        ].concat(extraBehaviours)),\n        eventOrder: {\n          click: [\n            'button press',\n            'alloy.base.behaviour'\n          ],\n          mousedown: [\n            'button press',\n            'alloy.base.behaviour'\n          ]\n        },\n        ...action\n      };\n      const domFinal = deepMerge(common, { dom });\n      return deepMerge(domFinal, { components });\n    };\n    const renderIconButtonSpec = (spec, action, providersBackstage, extraBehaviours = []) => {\n      const tooltipAttributes = spec.tooltip.map(tooltip => ({\n        'aria-label': providersBackstage.translate(tooltip),\n        'title': providersBackstage.translate(tooltip)\n      })).getOr({});\n      const dom = {\n        tag: 'button',\n        classes: ['tox-tbtn'],\n        attributes: tooltipAttributes\n      };\n      const icon = spec.icon.map(iconName => renderIconFromPack(iconName, providersBackstage.icons));\n      const components = componentRenderPipeline([icon]);\n      return renderCommonSpec(spec, action, extraBehaviours, dom, components, providersBackstage);\n    };\n    const calculateClassesFromButtonType = buttonType => {\n      switch (buttonType) {\n      case 'primary':\n        return ['tox-button'];\n      case 'toolbar':\n        return ['tox-tbtn'];\n      case 'secondary':\n      default:\n        return [\n          'tox-button',\n          'tox-button--secondary'\n        ];\n      }\n    };\n    const renderButtonSpec = (spec, action, providersBackstage, extraBehaviours = [], extraClasses = []) => {\n      const translatedText = providersBackstage.translate(spec.text);\n      const icon = spec.icon.map(iconName => renderIconFromPack(iconName, providersBackstage.icons));\n      const components = [icon.getOrThunk(() => text$1(translatedText))];\n      const buttonType = spec.buttonType.getOr(!spec.primary && !spec.borderless ? 'secondary' : 'primary');\n      const baseClasses = calculateClassesFromButtonType(buttonType);\n      const classes = [\n        ...baseClasses,\n        ...icon.isSome() ? ['tox-button--icon'] : [],\n        ...spec.borderless ? ['tox-button--naked'] : [],\n        ...extraClasses\n      ];\n      const dom = {\n        tag: 'button',\n        classes,\n        attributes: { title: translatedText }\n      };\n      return renderCommonSpec(spec, action, extraBehaviours, dom, components, providersBackstage);\n    };\n    const renderButton = (spec, action, providersBackstage, extraBehaviours = [], extraClasses = []) => {\n      const buttonSpec = renderButtonSpec(spec, Optional.some(action), providersBackstage, extraBehaviours, extraClasses);\n      return Button.sketch(buttonSpec);\n    };\n    const getAction = (name, buttonType) => comp => {\n      if (buttonType === 'custom') {\n        emitWith(comp, formActionEvent, {\n          name,\n          value: {}\n        });\n      } else if (buttonType === 'submit') {\n        emit(comp, formSubmitEvent);\n      } else if (buttonType === 'cancel') {\n        emit(comp, formCancelEvent);\n      } else {\n        console.error('Unknown button type: ', buttonType);\n      }\n    };\n    const isMenuFooterButtonSpec = (spec, buttonType) => buttonType === 'menu';\n    const isNormalFooterButtonSpec = (spec, buttonType) => buttonType === 'custom' || buttonType === 'cancel' || buttonType === 'submit';\n    const renderFooterButton = (spec, buttonType, backstage) => {\n      if (isMenuFooterButtonSpec(spec, buttonType)) {\n        const getButton = () => memButton;\n        const menuButtonSpec = spec;\n        const fixedSpec = {\n          ...spec,\n          type: 'menubutton',\n          search: Optional.none(),\n          onSetup: api => {\n            api.setEnabled(spec.enabled);\n            return noop;\n          },\n          fetch: getFetch(menuButtonSpec.items, getButton, backstage)\n        };\n        const memButton = record(renderMenuButton(fixedSpec, 'tox-tbtn', backstage, Optional.none()));\n        return memButton.asSpec();\n      } else if (isNormalFooterButtonSpec(spec, buttonType)) {\n        const action = getAction(spec.name, buttonType);\n        const buttonSpec = {\n          ...spec,\n          borderless: false\n        };\n        return renderButton(buttonSpec, action, backstage.shared.providers, []);\n      } else {\n        console.error('Unknown footer button type: ', buttonType);\n        throw new Error('Unknown footer button type');\n      }\n    };\n    const renderDialogButton = (spec, providersBackstage) => {\n      const action = getAction(spec.name, 'custom');\n      return renderFormField(Optional.none(), FormField.parts.field({\n        factory: Button,\n        ...renderButtonSpec(spec, Optional.some(action), providersBackstage, [\n          RepresentingConfigs.memory(''),\n          ComposingConfigs.self()\n        ])\n      }));\n    };\n\n    const separator$1 = { type: 'separator' };\n    const toMenuItem = target => ({\n      type: 'menuitem',\n      value: target.url,\n      text: target.title,\n      meta: { attach: target.attach },\n      onAction: noop\n    });\n    const staticMenuItem = (title, url) => ({\n      type: 'menuitem',\n      value: url,\n      text: title,\n      meta: { attach: undefined },\n      onAction: noop\n    });\n    const toMenuItems = targets => map$2(targets, toMenuItem);\n    const filterLinkTargets = (type, targets) => filter$2(targets, target => target.type === type);\n    const filteredTargets = (type, targets) => toMenuItems(filterLinkTargets(type, targets));\n    const headerTargets = linkInfo => filteredTargets('header', linkInfo.targets);\n    const anchorTargets = linkInfo => filteredTargets('anchor', linkInfo.targets);\n    const anchorTargetTop = linkInfo => Optional.from(linkInfo.anchorTop).map(url => staticMenuItem('<top>', url)).toArray();\n    const anchorTargetBottom = linkInfo => Optional.from(linkInfo.anchorBottom).map(url => staticMenuItem('<bottom>', url)).toArray();\n    const historyTargets = history => map$2(history, url => staticMenuItem(url, url));\n    const joinMenuLists = items => {\n      return foldl(items, (a, b) => {\n        const bothEmpty = a.length === 0 || b.length === 0;\n        return bothEmpty ? a.concat(b) : a.concat(separator$1, b);\n      }, []);\n    };\n    const filterByQuery = (term, menuItems) => {\n      const lowerCaseTerm = term.toLowerCase();\n      return filter$2(menuItems, item => {\n        var _a;\n        const text = item.meta !== undefined && item.meta.text !== undefined ? item.meta.text : item.text;\n        const value = (_a = item.value) !== null && _a !== void 0 ? _a : '';\n        return contains$1(text.toLowerCase(), lowerCaseTerm) || contains$1(value.toLowerCase(), lowerCaseTerm);\n      });\n    };\n\n    const getItems = (fileType, input, urlBackstage) => {\n      const urlInputValue = Representing.getValue(input);\n      const term = urlInputValue.meta.text !== undefined ? urlInputValue.meta.text : urlInputValue.value;\n      const info = urlBackstage.getLinkInformation();\n      return info.fold(() => [], linkInfo => {\n        const history = filterByQuery(term, historyTargets(urlBackstage.getHistory(fileType)));\n        return fileType === 'file' ? joinMenuLists([\n          history,\n          filterByQuery(term, headerTargets(linkInfo)),\n          filterByQuery(term, flatten([\n            anchorTargetTop(linkInfo),\n            anchorTargets(linkInfo),\n            anchorTargetBottom(linkInfo)\n          ]))\n        ]) : history;\n      });\n    };\n    const errorId = generate$6('aria-invalid');\n    const renderUrlInput = (spec, backstage, urlBackstage, initialData) => {\n      const providersBackstage = backstage.shared.providers;\n      const updateHistory = component => {\n        const urlEntry = Representing.getValue(component);\n        urlBackstage.addToHistory(urlEntry.value, spec.filetype);\n      };\n      const typeaheadSpec = {\n        ...initialData.map(initialData => ({ initialData })).getOr({}),\n        dismissOnBlur: true,\n        inputClasses: ['tox-textfield'],\n        sandboxClasses: ['tox-dialog__popups'],\n        inputAttributes: {\n          'aria-errormessage': errorId,\n          'type': 'url'\n        },\n        minChars: 0,\n        responseTime: 0,\n        fetch: input => {\n          const items = getItems(spec.filetype, input, urlBackstage);\n          const tdata = build(items, ItemResponse$1.BUBBLE_TO_SANDBOX, backstage, {\n            isHorizontalMenu: false,\n            search: Optional.none()\n          });\n          return Future.pure(tdata);\n        },\n        getHotspot: comp => memUrlBox.getOpt(comp),\n        onSetValue: (comp, _newValue) => {\n          if (comp.hasConfigured(Invalidating)) {\n            Invalidating.run(comp).get(noop);\n          }\n        },\n        typeaheadBehaviours: derive$1([\n          ...urlBackstage.getValidationHandler().map(handler => Invalidating.config({\n            getRoot: comp => parentElement(comp.element),\n            invalidClass: 'tox-control-wrap--status-invalid',\n            notify: {\n              onInvalid: (comp, err) => {\n                memInvalidIcon.getOpt(comp).each(invalidComp => {\n                  set$9(invalidComp.element, 'title', providersBackstage.translate(err));\n                });\n              }\n            },\n            validator: {\n              validate: input => {\n                const urlEntry = Representing.getValue(input);\n                return FutureResult.nu(completer => {\n                  handler({\n                    type: spec.filetype,\n                    url: urlEntry.value\n                  }, validation => {\n                    if (validation.status === 'invalid') {\n                      const err = Result.error(validation.message);\n                      completer(err);\n                    } else {\n                      const val = Result.value(validation.message);\n                      completer(val);\n                    }\n                  });\n                });\n              },\n              validateOnLoad: false\n            }\n          })).toArray(),\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          Tabstopping.config({}),\n          config('urlinput-events', [\n            run$1(input(), comp => {\n              const currentValue = get$6(comp.element);\n              const trimmedValue = currentValue.trim();\n              if (trimmedValue !== currentValue) {\n                set$5(comp.element, trimmedValue);\n              }\n              if (spec.filetype === 'file') {\n                emitWith(comp, formChangeEvent, { name: spec.name });\n              }\n            }),\n            run$1(change(), comp => {\n              emitWith(comp, formChangeEvent, { name: spec.name });\n              updateHistory(comp);\n            }),\n            run$1(postPaste(), comp => {\n              emitWith(comp, formChangeEvent, { name: spec.name });\n              updateHistory(comp);\n            })\n          ])\n        ]),\n        eventOrder: {\n          [input()]: [\n            'streaming',\n            'urlinput-events',\n            'invalidating'\n          ]\n        },\n        model: {\n          getDisplayText: itemData => itemData.value,\n          selectsOver: false,\n          populateFromBrowse: false\n        },\n        markers: { openClass: 'tox-textfield--popup-open' },\n        lazySink: backstage.shared.getSink,\n        parts: { menu: part(false, 1, 'normal') },\n        onExecute: (_menu, component, _entry) => {\n          emitWith(component, formSubmitEvent, {});\n        },\n        onItemExecute: (typeahead, _sandbox, _item, _value) => {\n          updateHistory(typeahead);\n          emitWith(typeahead, formChangeEvent, { name: spec.name });\n        }\n      };\n      const pField = FormField.parts.field({\n        ...typeaheadSpec,\n        factory: Typeahead\n      });\n      const pLabel = spec.label.map(label => renderLabel$2(label, providersBackstage));\n      const makeIcon = (name, errId, icon = name, label = name) => render$3(icon, {\n        tag: 'div',\n        classes: [\n          'tox-icon',\n          'tox-control-wrap__status-icon-' + name\n        ],\n        attributes: {\n          'title': providersBackstage.translate(label),\n          'aria-live': 'polite',\n          ...errId.fold(() => ({}), id => ({ id }))\n        }\n      }, providersBackstage.icons);\n      const memInvalidIcon = record(makeIcon('invalid', Optional.some(errorId), 'warning'));\n      const memStatus = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-control-wrap__status-icon-wrap']\n        },\n        components: [memInvalidIcon.asSpec()]\n      });\n      const optUrlPicker = urlBackstage.getUrlPicker(spec.filetype);\n      const browseUrlEvent = generate$6('browser.url.event');\n      const memUrlBox = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-control-wrap']\n        },\n        components: [\n          pField,\n          memStatus.asSpec()\n        ],\n        behaviours: derive$1([Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() })])\n      });\n      const memUrlPickerButton = record(renderButton({\n        name: spec.name,\n        icon: Optional.some('browse'),\n        text: spec.label.getOr(''),\n        enabled: spec.enabled,\n        primary: false,\n        buttonType: Optional.none(),\n        borderless: true\n      }, component => emit(component, browseUrlEvent), providersBackstage, [], ['tox-browse-url']));\n      const controlHWrapper = () => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__controls-h-stack']\n        },\n        components: flatten([\n          [memUrlBox.asSpec()],\n          optUrlPicker.map(() => memUrlPickerButton.asSpec()).toArray()\n        ])\n      });\n      const openUrlPicker = comp => {\n        Composing.getCurrent(comp).each(field => {\n          const componentData = Representing.getValue(field);\n          const urlData = {\n            fieldname: spec.name,\n            ...componentData\n          };\n          optUrlPicker.each(picker => {\n            picker(urlData).get(chosenData => {\n              Representing.setValue(field, chosenData);\n              emitWith(comp, formChangeEvent, { name: spec.name });\n            });\n          });\n        });\n      };\n      return FormField.sketch({\n        dom: renderFormFieldDom(),\n        components: pLabel.toArray().concat([controlHWrapper()]),\n        fieldBehaviours: derive$1([\n          Disabling.config({\n            disabled: () => !spec.enabled || providersBackstage.isDisabled(),\n            onDisabled: comp => {\n              FormField.getField(comp).each(Disabling.disable);\n              memUrlPickerButton.getOpt(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormField.getField(comp).each(Disabling.enable);\n              memUrlPickerButton.getOpt(comp).each(Disabling.enable);\n            }\n          }),\n          receivingConfig(),\n          config('url-input-events', [run$1(browseUrlEvent, openUrlPicker)])\n        ])\n      });\n    };\n\n    const renderAlertBanner = (spec, providersBackstage) => Container.sketch({\n      dom: {\n        tag: 'div',\n        attributes: { role: 'alert' },\n        classes: [\n          'tox-notification',\n          'tox-notification--in',\n          `tox-notification--${ spec.level }`\n        ]\n      },\n      components: [\n        {\n          dom: {\n            tag: 'div',\n            classes: ['tox-notification__icon']\n          },\n          components: [Button.sketch({\n              dom: {\n                tag: 'button',\n                classes: [\n                  'tox-button',\n                  'tox-button--naked',\n                  'tox-button--icon'\n                ],\n                innerHtml: get$2(spec.icon, providersBackstage.icons),\n                attributes: { title: providersBackstage.translate(spec.iconTooltip) }\n              },\n              action: comp => {\n                emitWith(comp, formActionEvent, {\n                  name: 'alert-banner',\n                  value: spec.url\n                });\n              },\n              buttonBehaviours: derive$1([addFocusableBehaviour()])\n            })]\n        },\n        {\n          dom: {\n            tag: 'div',\n            classes: ['tox-notification__body'],\n            innerHtml: providersBackstage.translate(spec.text)\n          }\n        }\n      ]\n    });\n\n    const set$1 = (element, status) => {\n      element.dom.checked = status;\n    };\n    const get$1 = element => element.dom.checked;\n\n    const renderCheckbox = (spec, providerBackstage, initialData) => {\n      const toggleCheckboxHandler = comp => {\n        comp.element.dom.click();\n        return Optional.some(true);\n      };\n      const pField = FormField.parts.field({\n        factory: { sketch: identity },\n        dom: {\n          tag: 'input',\n          classes: ['tox-checkbox__input'],\n          attributes: { type: 'checkbox' }\n        },\n        behaviours: derive$1([\n          ComposingConfigs.self(),\n          Disabling.config({ disabled: () => !spec.enabled || providerBackstage.isDisabled() }),\n          Tabstopping.config({}),\n          Focusing.config({}),\n          RepresentingConfigs.withElement(initialData, get$1, set$1),\n          Keying.config({\n            mode: 'special',\n            onEnter: toggleCheckboxHandler,\n            onSpace: toggleCheckboxHandler,\n            stopSpaceKeyup: true\n          }),\n          config('checkbox-events', [run$1(change(), (component, _) => {\n              emitWith(component, formChangeEvent, { name: spec.name });\n            })])\n        ])\n      });\n      const pLabel = FormField.parts.label({\n        dom: {\n          tag: 'span',\n          classes: ['tox-checkbox__label']\n        },\n        components: [text$1(providerBackstage.translate(spec.label))],\n        behaviours: derive$1([Unselecting.config({})])\n      });\n      const makeIcon = className => {\n        const iconName = className === 'checked' ? 'selected' : 'unselected';\n        return render$3(iconName, {\n          tag: 'span',\n          classes: [\n            'tox-icon',\n            'tox-checkbox-icon__' + className\n          ]\n        }, providerBackstage.icons);\n      };\n      const memIcons = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-checkbox__icons']\n        },\n        components: [\n          makeIcon('checked'),\n          makeIcon('unchecked')\n        ]\n      });\n      return FormField.sketch({\n        dom: {\n          tag: 'label',\n          classes: ['tox-checkbox']\n        },\n        components: [\n          pField,\n          memIcons.asSpec(),\n          pLabel\n        ],\n        fieldBehaviours: derive$1([\n          Disabling.config({\n            disabled: () => !spec.enabled || providerBackstage.isDisabled(),\n            disableClass: 'tox-checkbox--disabled',\n            onDisabled: comp => {\n              FormField.getField(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormField.getField(comp).each(Disabling.enable);\n            }\n          }),\n          receivingConfig()\n        ])\n      });\n    };\n\n    const renderHtmlPanel = spec => {\n      if (spec.presets === 'presentation') {\n        return Container.sketch({\n          dom: {\n            tag: 'div',\n            classes: ['tox-form__group'],\n            innerHtml: spec.html\n          }\n        });\n      } else {\n        return Container.sketch({\n          dom: {\n            tag: 'div',\n            classes: ['tox-form__group'],\n            innerHtml: spec.html,\n            attributes: { role: 'document' }\n          },\n          containerBehaviours: derive$1([\n            Tabstopping.config({}),\n            Focusing.config({})\n          ])\n        });\n      }\n    };\n\n    const make$2 = render => {\n      return (parts, spec, dialogData, backstage) => get$g(spec, 'name').fold(() => render(spec, backstage, Optional.none()), fieldName => parts.field(fieldName, render(spec, backstage, get$g(dialogData, fieldName))));\n    };\n    const makeIframe = render => (parts, spec, dialogData, backstage) => {\n      const iframeSpec = deepMerge(spec, { source: 'dynamic' });\n      return make$2(render)(parts, iframeSpec, dialogData, backstage);\n    };\n    const factories = {\n      bar: make$2((spec, backstage) => renderBar(spec, backstage.shared)),\n      collection: make$2((spec, backstage, data) => renderCollection(spec, backstage.shared.providers, data)),\n      alertbanner: make$2((spec, backstage) => renderAlertBanner(spec, backstage.shared.providers)),\n      input: make$2((spec, backstage, data) => renderInput(spec, backstage.shared.providers, data)),\n      textarea: make$2((spec, backstage, data) => renderTextarea(spec, backstage.shared.providers, data)),\n      label: make$2((spec, backstage) => renderLabel$1(spec, backstage.shared)),\n      iframe: makeIframe((spec, backstage, data) => renderIFrame(spec, backstage.shared.providers, data)),\n      button: make$2((spec, backstage) => renderDialogButton(spec, backstage.shared.providers)),\n      checkbox: make$2((spec, backstage, data) => renderCheckbox(spec, backstage.shared.providers, data)),\n      colorinput: make$2((spec, backstage, data) => renderColorInput(spec, backstage.shared, backstage.colorinput, data)),\n      colorpicker: make$2((spec, backstage, data) => renderColorPicker(spec, backstage.shared.providers, data)),\n      dropzone: make$2((spec, backstage, data) => renderDropZone(spec, backstage.shared.providers, data)),\n      grid: make$2((spec, backstage) => renderGrid(spec, backstage.shared)),\n      listbox: make$2((spec, backstage, data) => renderListBox(spec, backstage, data)),\n      selectbox: make$2((spec, backstage, data) => renderSelectBox(spec, backstage.shared.providers, data)),\n      sizeinput: make$2((spec, backstage) => renderSizeInput(spec, backstage.shared.providers)),\n      slider: make$2((spec, backstage, data) => renderSlider(spec, backstage.shared.providers, data)),\n      urlinput: make$2((spec, backstage, data) => renderUrlInput(spec, backstage, backstage.urlinput, data)),\n      customeditor: make$2(renderCustomEditor),\n      htmlpanel: make$2(renderHtmlPanel),\n      imagepreview: make$2((spec, _, data) => renderImagePreview(spec, data)),\n      table: make$2((spec, backstage) => renderTable(spec, backstage.shared.providers)),\n      panel: make$2((spec, backstage) => renderPanel(spec, backstage))\n    };\n    const noFormParts = {\n      field: (_name, spec) => spec,\n      record: constant$1([])\n    };\n    const interpretInForm = (parts, spec, dialogData, oldBackstage) => {\n      const newBackstage = deepMerge(oldBackstage, { shared: { interpreter: childSpec => interpretParts(parts, childSpec, dialogData, newBackstage) } });\n      return interpretParts(parts, spec, dialogData, newBackstage);\n    };\n    const interpretParts = (parts, spec, dialogData, backstage) => get$g(factories, spec.type).fold(() => {\n      console.error(`Unknown factory type \"${ spec.type }\", defaulting to container: `, spec);\n      return spec;\n    }, factory => factory(parts, spec, dialogData, backstage));\n    const interpretWithoutForm = (spec, dialogData, backstage) => interpretParts(noFormParts, spec, dialogData, backstage);\n\n    const labelPrefix = 'layout-inset';\n    const westEdgeX = anchor => anchor.x;\n    const middleX = (anchor, element) => anchor.x + anchor.width / 2 - element.width / 2;\n    const eastEdgeX = (anchor, element) => anchor.x + anchor.width - element.width;\n    const northY = anchor => anchor.y;\n    const southY = (anchor, element) => anchor.y + anchor.height - element.height;\n    const centreY = (anchor, element) => anchor.y + anchor.height / 2 - element.height / 2;\n    const southwest = (anchor, element, bubbles) => nu$6(eastEdgeX(anchor, element), southY(anchor, element), bubbles.insetSouthwest(), northwest$3(), 'southwest', boundsRestriction(anchor, {\n      right: 0,\n      bottom: 3\n    }), labelPrefix);\n    const southeast = (anchor, element, bubbles) => nu$6(westEdgeX(anchor), southY(anchor, element), bubbles.insetSoutheast(), northeast$3(), 'southeast', boundsRestriction(anchor, {\n      left: 1,\n      bottom: 3\n    }), labelPrefix);\n    const northwest = (anchor, element, bubbles) => nu$6(eastEdgeX(anchor, element), northY(anchor), bubbles.insetNorthwest(), southwest$3(), 'northwest', boundsRestriction(anchor, {\n      right: 0,\n      top: 2\n    }), labelPrefix);\n    const northeast = (anchor, element, bubbles) => nu$6(westEdgeX(anchor), northY(anchor), bubbles.insetNortheast(), southeast$3(), 'northeast', boundsRestriction(anchor, {\n      left: 1,\n      top: 2\n    }), labelPrefix);\n    const north = (anchor, element, bubbles) => nu$6(middleX(anchor, element), northY(anchor), bubbles.insetNorth(), south$3(), 'north', boundsRestriction(anchor, { top: 2 }), labelPrefix);\n    const south = (anchor, element, bubbles) => nu$6(middleX(anchor, element), southY(anchor, element), bubbles.insetSouth(), north$3(), 'south', boundsRestriction(anchor, { bottom: 3 }), labelPrefix);\n    const east = (anchor, element, bubbles) => nu$6(eastEdgeX(anchor, element), centreY(anchor, element), bubbles.insetEast(), west$3(), 'east', boundsRestriction(anchor, { right: 0 }), labelPrefix);\n    const west = (anchor, element, bubbles) => nu$6(westEdgeX(anchor), centreY(anchor, element), bubbles.insetWest(), east$3(), 'west', boundsRestriction(anchor, { left: 1 }), labelPrefix);\n    const lookupPreserveLayout = lastPlacement => {\n      switch (lastPlacement) {\n      case 'north':\n        return north;\n      case 'northeast':\n        return northeast;\n      case 'northwest':\n        return northwest;\n      case 'south':\n        return south;\n      case 'southeast':\n        return southeast;\n      case 'southwest':\n        return southwest;\n      case 'east':\n        return east;\n      case 'west':\n        return west;\n      }\n    };\n    const preserve = (anchor, element, bubbles, placee, bounds) => {\n      const layout = getPlacement(placee).map(lookupPreserveLayout).getOr(north);\n      return layout(anchor, element, bubbles, placee, bounds);\n    };\n    const lookupFlippedLayout = lastPlacement => {\n      switch (lastPlacement) {\n      case 'north':\n        return south;\n      case 'northeast':\n        return southeast;\n      case 'northwest':\n        return southwest;\n      case 'south':\n        return north;\n      case 'southeast':\n        return northeast;\n      case 'southwest':\n        return northwest;\n      case 'east':\n        return west;\n      case 'west':\n        return east;\n      }\n    };\n    const flip = (anchor, element, bubbles, placee, bounds) => {\n      const layout = getPlacement(placee).map(lookupFlippedLayout).getOr(north);\n      return layout(anchor, element, bubbles, placee, bounds);\n    };\n\n    const bubbleAlignments$2 = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: [],\n      alignRight: [],\n      right: [],\n      left: [],\n      bottom: [],\n      top: []\n    };\n    const getInlineDialogAnchor = (contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor) => {\n      const bubbleSize = 12;\n      const overrides = { maxHeightFunction: expandable$1() };\n      const editableAreaAnchor = () => ({\n        type: 'node',\n        root: getContentContainer(getRootNode(contentAreaElement())),\n        node: Optional.from(contentAreaElement()),\n        bubble: nu$5(bubbleSize, bubbleSize, bubbleAlignments$2),\n        layouts: {\n          onRtl: () => [northeast],\n          onLtr: () => [northwest]\n        },\n        overrides\n      });\n      const standardAnchor = () => ({\n        type: 'hotspot',\n        hotspot: lazyAnchorbar(),\n        bubble: nu$5(-bubbleSize, bubbleSize, bubbleAlignments$2),\n        layouts: {\n          onRtl: () => [southeast$2],\n          onLtr: () => [southwest$2]\n        },\n        overrides\n      });\n      return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getBannerAnchor = (contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor) => {\n      const editableAreaAnchor = () => ({\n        type: 'node',\n        root: getContentContainer(getRootNode(contentAreaElement())),\n        node: Optional.from(contentAreaElement()),\n        layouts: {\n          onRtl: () => [north],\n          onLtr: () => [north]\n        }\n      });\n      const standardAnchor = () => ({\n        type: 'hotspot',\n        hotspot: lazyAnchorbar(),\n        layouts: {\n          onRtl: () => [south$2],\n          onLtr: () => [south$2]\n        }\n      });\n      return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getCursorAnchor = (editor, bodyElement) => () => ({\n      type: 'selection',\n      root: bodyElement(),\n      getSelection: () => {\n        const rng = editor.selection.getRng();\n        return Optional.some(SimSelection.range(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset));\n      }\n    });\n    const getNodeAnchor$1 = bodyElement => element => ({\n      type: 'node',\n      root: bodyElement(),\n      node: element\n    });\n    const getAnchors = (editor, lazyAnchorbar, isToolbarTop) => {\n      const useFixedToolbarContainer = useFixedContainer(editor);\n      const bodyElement = () => SugarElement.fromDom(editor.getBody());\n      const contentAreaElement = () => SugarElement.fromDom(editor.getContentAreaContainer());\n      const lazyUseEditableAreaAnchor = () => useFixedToolbarContainer || !isToolbarTop();\n      return {\n        inlineDialog: getInlineDialogAnchor(contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor),\n        banner: getBannerAnchor(contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor),\n        cursor: getCursorAnchor(editor, bodyElement),\n        node: getNodeAnchor$1(bodyElement)\n      };\n    };\n\n    const colorPicker = editor => (callback, value) => {\n      const dialog = colorPickerDialog(editor);\n      dialog(callback, value);\n    };\n    const hasCustomColors = editor => () => hasCustomColors$1(editor);\n    const getColors = editor => () => getColors$2(editor);\n    const getColorCols = editor => () => getColorCols$1(editor);\n    const ColorInputBackstage = editor => ({\n      colorPicker: colorPicker(editor),\n      hasCustomColors: hasCustomColors(editor),\n      getColors: getColors(editor),\n      getColorCols: getColorCols(editor)\n    });\n\n    const isDraggableModal = editor => () => isDraggableModal$1(editor);\n    const DialogBackstage = editor => ({ isDraggableModal: isDraggableModal(editor) });\n\n    const HeaderBackstage = editor => {\n      const mode = Cell(isToolbarLocationBottom(editor) ? 'bottom' : 'top');\n      return {\n        isPositionedAtTop: () => mode.get() === 'top',\n        getDockingMode: mode.get,\n        setDockingMode: mode.set\n      };\n    };\n\n    const isNestedFormat = format => hasNonNullableKey(format, 'items');\n    const isFormatReference = format => hasNonNullableKey(format, 'format');\n    const defaultStyleFormats = [\n      {\n        title: 'Headings',\n        items: [\n          {\n            title: 'Heading 1',\n            format: 'h1'\n          },\n          {\n            title: 'Heading 2',\n            format: 'h2'\n          },\n          {\n            title: 'Heading 3',\n            format: 'h3'\n          },\n          {\n            title: 'Heading 4',\n            format: 'h4'\n          },\n          {\n            title: 'Heading 5',\n            format: 'h5'\n          },\n          {\n            title: 'Heading 6',\n            format: 'h6'\n          }\n        ]\n      },\n      {\n        title: 'Inline',\n        items: [\n          {\n            title: 'Bold',\n            format: 'bold'\n          },\n          {\n            title: 'Italic',\n            format: 'italic'\n          },\n          {\n            title: 'Underline',\n            format: 'underline'\n          },\n          {\n            title: 'Strikethrough',\n            format: 'strikethrough'\n          },\n          {\n            title: 'Superscript',\n            format: 'superscript'\n          },\n          {\n            title: 'Subscript',\n            format: 'subscript'\n          },\n          {\n            title: 'Code',\n            format: 'code'\n          }\n        ]\n      },\n      {\n        title: 'Blocks',\n        items: [\n          {\n            title: 'Paragraph',\n            format: 'p'\n          },\n          {\n            title: 'Blockquote',\n            format: 'blockquote'\n          },\n          {\n            title: 'Div',\n            format: 'div'\n          },\n          {\n            title: 'Pre',\n            format: 'pre'\n          }\n        ]\n      },\n      {\n        title: 'Align',\n        items: [\n          {\n            title: 'Left',\n            format: 'alignleft'\n          },\n          {\n            title: 'Center',\n            format: 'aligncenter'\n          },\n          {\n            title: 'Right',\n            format: 'alignright'\n          },\n          {\n            title: 'Justify',\n            format: 'alignjustify'\n          }\n        ]\n      }\n    ];\n    const isNestedFormats = format => has$2(format, 'items');\n    const isBlockFormat = format => has$2(format, 'block');\n    const isInlineFormat = format => has$2(format, 'inline');\n    const isSelectorFormat = format => has$2(format, 'selector');\n    const mapFormats = userFormats => foldl(userFormats, (acc, fmt) => {\n      if (isNestedFormats(fmt)) {\n        const result = mapFormats(fmt.items);\n        return {\n          customFormats: acc.customFormats.concat(result.customFormats),\n          formats: acc.formats.concat([{\n              title: fmt.title,\n              items: result.formats\n            }])\n        };\n      } else if (isInlineFormat(fmt) || isBlockFormat(fmt) || isSelectorFormat(fmt)) {\n        const formatName = isString(fmt.name) ? fmt.name : fmt.title.toLowerCase();\n        const formatNameWithPrefix = `custom-${ formatName }`;\n        return {\n          customFormats: acc.customFormats.concat([{\n              name: formatNameWithPrefix,\n              format: fmt\n            }]),\n          formats: acc.formats.concat([{\n              title: fmt.title,\n              format: formatNameWithPrefix,\n              icon: fmt.icon\n            }])\n        };\n      } else {\n        return {\n          ...acc,\n          formats: acc.formats.concat(fmt)\n        };\n      }\n    }, {\n      customFormats: [],\n      formats: []\n    });\n    const registerCustomFormats = (editor, userFormats) => {\n      const result = mapFormats(userFormats);\n      const registerFormats = customFormats => {\n        each$1(customFormats, fmt => {\n          if (!editor.formatter.has(fmt.name)) {\n            editor.formatter.register(fmt.name, fmt.format);\n          }\n        });\n      };\n      if (editor.formatter) {\n        registerFormats(result.customFormats);\n      } else {\n        editor.on('init', () => {\n          registerFormats(result.customFormats);\n        });\n      }\n      return result.formats;\n    };\n    const getStyleFormats = editor => getUserStyleFormats(editor).map(userFormats => {\n      const registeredUserFormats = registerCustomFormats(editor, userFormats);\n      return shouldMergeStyleFormats(editor) ? defaultStyleFormats.concat(registeredUserFormats) : registeredUserFormats;\n    }).getOr(defaultStyleFormats);\n\n    const isSeparator$1 = format => {\n      const keys$1 = keys(format);\n      return keys$1.length === 1 && contains$2(keys$1, 'title');\n    };\n    const processBasic = (item, isSelectedFor, getPreviewFor) => ({\n      ...item,\n      type: 'formatter',\n      isSelected: isSelectedFor(item.format),\n      getStylePreview: getPreviewFor(item.format)\n    });\n    const register$a = (editor, formats, isSelectedFor, getPreviewFor) => {\n      const enrichSupported = item => processBasic(item, isSelectedFor, getPreviewFor);\n      const enrichMenu = item => {\n        const newItems = doEnrich(item.items);\n        return {\n          ...item,\n          type: 'submenu',\n          getStyleItems: constant$1(newItems)\n        };\n      };\n      const enrichCustom = item => {\n        const formatName = isString(item.name) ? item.name : generate$6(item.title);\n        const formatNameWithPrefix = `custom-${ formatName }`;\n        const newItem = {\n          ...item,\n          type: 'formatter',\n          format: formatNameWithPrefix,\n          isSelected: isSelectedFor(formatNameWithPrefix),\n          getStylePreview: getPreviewFor(formatNameWithPrefix)\n        };\n        editor.formatter.register(formatName, newItem);\n        return newItem;\n      };\n      const doEnrich = items => map$2(items, item => {\n        if (isNestedFormat(item)) {\n          return enrichMenu(item);\n        } else if (isFormatReference(item)) {\n          return enrichSupported(item);\n        } else if (isSeparator$1(item)) {\n          return {\n            ...item,\n            type: 'separator'\n          };\n        } else {\n          return enrichCustom(item);\n        }\n      });\n      return doEnrich(formats);\n    };\n\n    const init$8 = editor => {\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = format => () => {\n        const fmt = editor.formatter.get(format);\n        return fmt !== undefined ? Optional.some({\n          tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n          styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n        }) : Optional.none();\n      };\n      const settingsFormats = Cell([]);\n      const eventsFormats = Cell([]);\n      const replaceSettings = Cell(false);\n      editor.on('PreInit', _e => {\n        const formats = getStyleFormats(editor);\n        const enriched = register$a(editor, formats, isSelectedFor, getPreviewFor);\n        settingsFormats.set(enriched);\n      });\n      editor.on('addStyleModifications', e => {\n        const modifications = register$a(editor, e.items, isSelectedFor, getPreviewFor);\n        eventsFormats.set(modifications);\n        replaceSettings.set(e.replace);\n      });\n      const getData = () => {\n        const fromSettings = replaceSettings.get() ? [] : settingsFormats.get();\n        const fromEvents = eventsFormats.get();\n        return fromSettings.concat(fromEvents);\n      };\n      return { getData };\n    };\n\n    const isElement = node => isNonNullable(node) && node.nodeType === 1;\n    const trim = global$1.trim;\n    const hasContentEditableState = value => {\n      return node => {\n        if (isElement(node)) {\n          if (node.contentEditable === value) {\n            return true;\n          }\n          if (node.getAttribute('data-mce-contenteditable') === value) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    const isContentEditableTrue = hasContentEditableState('true');\n    const isContentEditableFalse = hasContentEditableState('false');\n    const create = (type, title, url, level, attach) => ({\n      type,\n      title,\n      url,\n      level,\n      attach\n    });\n    const isChildOfContentEditableTrue = node => {\n      let tempNode = node;\n      while (tempNode = tempNode.parentNode) {\n        const value = tempNode.contentEditable;\n        if (value && value !== 'inherit') {\n          return isContentEditableTrue(tempNode);\n        }\n      }\n      return false;\n    };\n    const select = (selector, root) => {\n      return map$2(descendants(SugarElement.fromDom(root), selector), element => {\n        return element.dom;\n      });\n    };\n    const getElementText = elm => {\n      return elm.innerText || elm.textContent;\n    };\n    const getOrGenerateId = elm => {\n      return elm.id ? elm.id : generate$6('h');\n    };\n    const isAnchor = elm => {\n      return elm && elm.nodeName === 'A' && (elm.id || elm.name) !== undefined;\n    };\n    const isValidAnchor = elm => {\n      return isAnchor(elm) && isEditable(elm);\n    };\n    const isHeader = elm => {\n      return elm && /^(H[1-6])$/.test(elm.nodeName);\n    };\n    const isEditable = elm => {\n      return isChildOfContentEditableTrue(elm) && !isContentEditableFalse(elm);\n    };\n    const isValidHeader = elm => {\n      return isHeader(elm) && isEditable(elm);\n    };\n    const getLevel = elm => {\n      return isHeader(elm) ? parseInt(elm.nodeName.substr(1), 10) : 0;\n    };\n    const headerTarget = elm => {\n      var _a;\n      const headerId = getOrGenerateId(elm);\n      const attach = () => {\n        elm.id = headerId;\n      };\n      return create('header', (_a = getElementText(elm)) !== null && _a !== void 0 ? _a : '', '#' + headerId, getLevel(elm), attach);\n    };\n    const anchorTarget = elm => {\n      const anchorId = elm.id || elm.name;\n      const anchorText = getElementText(elm);\n      return create('anchor', anchorText ? anchorText : '#' + anchorId, '#' + anchorId, 0, noop);\n    };\n    const getHeaderTargets = elms => {\n      return map$2(filter$2(elms, isValidHeader), headerTarget);\n    };\n    const getAnchorTargets = elms => {\n      return map$2(filter$2(elms, isValidAnchor), anchorTarget);\n    };\n    const getTargetElements = elm => {\n      const elms = select('h1,h2,h3,h4,h5,h6,a:not([href])', elm);\n      return elms;\n    };\n    const hasTitle = target => {\n      return trim(target.title).length > 0;\n    };\n    const find = elm => {\n      const elms = getTargetElements(elm);\n      return filter$2(getHeaderTargets(elms).concat(getAnchorTargets(elms)), hasTitle);\n    };\n    const LinkTargets = { find };\n\n    const STORAGE_KEY = 'tinymce-url-history';\n    const HISTORY_LENGTH = 5;\n    const isHttpUrl = url => isString(url) && /^https?/.test(url);\n    const isArrayOfUrl = a => isArray(a) && a.length <= HISTORY_LENGTH && forall(a, isHttpUrl);\n    const isRecordOfUrlArray = r => isObject(r) && find$4(r, value => !isArrayOfUrl(value)).isNone();\n    const getAllHistory = () => {\n      const unparsedHistory = global$4.getItem(STORAGE_KEY);\n      if (unparsedHistory === null) {\n        return {};\n      }\n      let history;\n      try {\n        history = JSON.parse(unparsedHistory);\n      } catch (e) {\n        if (e instanceof SyntaxError) {\n          console.log('Local storage ' + STORAGE_KEY + ' was not valid JSON', e);\n          return {};\n        }\n        throw e;\n      }\n      if (!isRecordOfUrlArray(history)) {\n        console.log('Local storage ' + STORAGE_KEY + ' was not valid format', history);\n        return {};\n      }\n      return history;\n    };\n    const setAllHistory = history => {\n      if (!isRecordOfUrlArray(history)) {\n        throw new Error('Bad format for history:\\n' + JSON.stringify(history));\n      }\n      global$4.setItem(STORAGE_KEY, JSON.stringify(history));\n    };\n    const getHistory = fileType => {\n      const history = getAllHistory();\n      return get$g(history, fileType).getOr([]);\n    };\n    const addToHistory = (url, fileType) => {\n      if (!isHttpUrl(url)) {\n        return;\n      }\n      const history = getAllHistory();\n      const items = get$g(history, fileType).getOr([]);\n      const itemsWithoutUrl = filter$2(items, item => item !== url);\n      history[fileType] = [url].concat(itemsWithoutUrl).slice(0, HISTORY_LENGTH);\n      setAllHistory(history);\n    };\n\n    const isTruthy = value => !!value;\n    const makeMap = value => map$1(global$1.makeMap(value, /[, ]/), isTruthy);\n    const getPicker = editor => Optional.from(getFilePickerCallback(editor));\n    const getPickerTypes = editor => {\n      const optFileTypes = Optional.from(getFilePickerTypes(editor)).filter(isTruthy).map(makeMap);\n      return getPicker(editor).fold(never, _picker => optFileTypes.fold(always, types => keys(types).length > 0 ? types : false));\n    };\n    const getPickerSetting = (editor, filetype) => {\n      const pickerTypes = getPickerTypes(editor);\n      if (isBoolean(pickerTypes)) {\n        return pickerTypes ? getPicker(editor) : Optional.none();\n      } else {\n        return pickerTypes[filetype] ? getPicker(editor) : Optional.none();\n      }\n    };\n    const getUrlPicker = (editor, filetype) => getPickerSetting(editor, filetype).map(picker => entry => Future.nu(completer => {\n      const handler = (value, meta) => {\n        if (!isString(value)) {\n          throw new Error('Expected value to be string');\n        }\n        if (meta !== undefined && !isObject(meta)) {\n          throw new Error('Expected meta to be a object');\n        }\n        const r = {\n          value,\n          meta\n        };\n        completer(r);\n      };\n      const meta = {\n        filetype,\n        fieldname: entry.fieldname,\n        ...Optional.from(entry.meta).getOr({})\n      };\n      picker.call(editor, handler, entry.value, meta);\n    }));\n    const getTextSetting = value => Optional.from(value).filter(isString).getOrUndefined();\n    const getLinkInformation = editor => {\n      if (!useTypeaheadUrls(editor)) {\n        return Optional.none();\n      }\n      return Optional.some({\n        targets: LinkTargets.find(editor.getBody()),\n        anchorTop: getTextSetting(getAnchorTop(editor)),\n        anchorBottom: getTextSetting(getAnchorBottom(editor))\n      });\n    };\n    const getValidationHandler = editor => Optional.from(getFilePickerValidatorHandler(editor));\n    const UrlInputBackstage = editor => ({\n      getHistory,\n      addToHistory,\n      getLinkInformation: () => getLinkInformation(editor),\n      getValidationHandler: () => getValidationHandler(editor),\n      getUrlPicker: filetype => getUrlPicker(editor, filetype)\n    });\n\n    const init$7 = (lazySink, editor, lazyAnchorbar) => {\n      const contextMenuState = Cell(false);\n      const toolbar = HeaderBackstage(editor);\n      const backstage = {\n        shared: {\n          providers: {\n            icons: () => editor.ui.registry.getAll().icons,\n            menuItems: () => editor.ui.registry.getAll().menuItems,\n            translate: global$8.translate,\n            isDisabled: () => editor.mode.isReadOnly() || !editor.ui.isEnabled(),\n            getOption: editor.options.get\n          },\n          interpreter: s => interpretWithoutForm(s, {}, backstage),\n          anchors: getAnchors(editor, lazyAnchorbar, toolbar.isPositionedAtTop),\n          header: toolbar,\n          getSink: lazySink\n        },\n        urlinput: UrlInputBackstage(editor),\n        styles: init$8(editor),\n        colorinput: ColorInputBackstage(editor),\n        dialog: DialogBackstage(editor),\n        isContextMenuOpen: () => contextMenuState.get(),\n        setContextMenuState: state => contextMenuState.set(state)\n      };\n      return backstage;\n    };\n\n    const setup$b = (editor, mothership, uiMothership) => {\n      const broadcastEvent = (name, evt) => {\n        each$1([\n          mothership,\n          uiMothership\n        ], ship => {\n          ship.broadcastEvent(name, evt);\n        });\n      };\n      const broadcastOn = (channel, message) => {\n        each$1([\n          mothership,\n          uiMothership\n        ], ship => {\n          ship.broadcastOn([channel], message);\n        });\n      };\n      const fireDismissPopups = evt => broadcastOn(dismissPopups(), { target: evt.target });\n      const doc = getDocument();\n      const onTouchstart = bind(doc, 'touchstart', fireDismissPopups);\n      const onTouchmove = bind(doc, 'touchmove', evt => broadcastEvent(documentTouchmove(), evt));\n      const onTouchend = bind(doc, 'touchend', evt => broadcastEvent(documentTouchend(), evt));\n      const onMousedown = bind(doc, 'mousedown', fireDismissPopups);\n      const onMouseup = bind(doc, 'mouseup', evt => {\n        if (evt.raw.button === 0) {\n          broadcastOn(mouseReleased(), { target: evt.target });\n        }\n      });\n      const onContentClick = raw => broadcastOn(dismissPopups(), { target: SugarElement.fromDom(raw.target) });\n      const onContentMouseup = raw => {\n        if (raw.button === 0) {\n          broadcastOn(mouseReleased(), { target: SugarElement.fromDom(raw.target) });\n        }\n      };\n      const onContentMousedown = () => {\n        each$1(editor.editorManager.get(), loopEditor => {\n          if (editor !== loopEditor) {\n            loopEditor.dispatch('DismissPopups', { relatedTarget: editor });\n          }\n        });\n      };\n      const onWindowScroll = evt => broadcastEvent(windowScroll(), fromRawEvent(evt));\n      const onWindowResize = evt => {\n        broadcastOn(repositionPopups(), {});\n        broadcastEvent(windowResize(), fromRawEvent(evt));\n      };\n      const onEditorResize = () => broadcastOn(repositionPopups(), {});\n      const onEditorProgress = evt => {\n        if (evt.state) {\n          broadcastOn(dismissPopups(), { target: SugarElement.fromDom(editor.getContainer()) });\n        }\n      };\n      const onDismissPopups = event => {\n        broadcastOn(dismissPopups(), { target: SugarElement.fromDom(event.relatedTarget.getContainer()) });\n      };\n      editor.on('PostRender', () => {\n        editor.on('click', onContentClick);\n        editor.on('tap', onContentClick);\n        editor.on('mouseup', onContentMouseup);\n        editor.on('mousedown', onContentMousedown);\n        editor.on('ScrollWindow', onWindowScroll);\n        editor.on('ResizeWindow', onWindowResize);\n        editor.on('ResizeEditor', onEditorResize);\n        editor.on('AfterProgressState', onEditorProgress);\n        editor.on('DismissPopups', onDismissPopups);\n      });\n      editor.on('remove', () => {\n        editor.off('click', onContentClick);\n        editor.off('tap', onContentClick);\n        editor.off('mouseup', onContentMouseup);\n        editor.off('mousedown', onContentMousedown);\n        editor.off('ScrollWindow', onWindowScroll);\n        editor.off('ResizeWindow', onWindowResize);\n        editor.off('ResizeEditor', onEditorResize);\n        editor.off('AfterProgressState', onEditorProgress);\n        editor.off('DismissPopups', onDismissPopups);\n        onMousedown.unbind();\n        onTouchstart.unbind();\n        onTouchmove.unbind();\n        onTouchend.unbind();\n        onMouseup.unbind();\n      });\n      editor.on('detach', () => {\n        detachSystem(mothership);\n        detachSystem(uiMothership);\n        mothership.destroy();\n        uiMothership.destroy();\n      });\n    };\n\n    const parts$a = AlloyParts;\n    const partType = PartType;\n\n    const schema$f = constant$1([\n      defaulted('shell', false),\n      required$1('makeItem'),\n      defaulted('setupItem', noop),\n      SketchBehaviours.field('listBehaviours', [Replacing])\n    ]);\n    const customListDetail = () => ({ behaviours: derive$1([Replacing.config({})]) });\n    const itemsPart = optional({\n      name: 'items',\n      overrides: customListDetail\n    });\n    const parts$9 = constant$1([itemsPart]);\n    const name = constant$1('CustomList');\n\n    const factory$d = (detail, components, _spec, _external) => {\n      const setItems = (list, items) => {\n        getListContainer(list).fold(() => {\n          console.error('Custom List was defined to not be a shell, but no item container was specified in components');\n          throw new Error('Custom List was defined to not be a shell, but no item container was specified in components');\n        }, container => {\n          const itemComps = Replacing.contents(container);\n          const numListsRequired = items.length;\n          const numListsToAdd = numListsRequired - itemComps.length;\n          const itemsToAdd = numListsToAdd > 0 ? range$2(numListsToAdd, () => detail.makeItem()) : [];\n          const itemsToRemove = itemComps.slice(numListsRequired);\n          each$1(itemsToRemove, item => Replacing.remove(container, item));\n          each$1(itemsToAdd, item => Replacing.append(container, item));\n          const builtLists = Replacing.contents(container);\n          each$1(builtLists, (item, i) => {\n            detail.setupItem(list, item, items[i], i);\n          });\n        });\n      };\n      const extra = detail.shell ? {\n        behaviours: [Replacing.config({})],\n        components: []\n      } : {\n        behaviours: [],\n        components\n      };\n      const getListContainer = component => detail.shell ? Optional.some(component) : getPart(component, detail, 'items');\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: extra.components,\n        behaviours: augment(detail.listBehaviours, extra.behaviours),\n        apis: { setItems }\n      };\n    };\n    const CustomList = composite({\n      name: name(),\n      configFields: schema$f(),\n      partFields: parts$9(),\n      factory: factory$d,\n      apis: {\n        setItems: (apis, list, items) => {\n          apis.setItems(list, items);\n        }\n      }\n    });\n\n    const schema$e = constant$1([\n      required$1('dom'),\n      defaulted('shell', true),\n      field('toolbarBehaviours', [Replacing])\n    ]);\n    const enhanceGroups = () => ({ behaviours: derive$1([Replacing.config({})]) });\n    const parts$8 = constant$1([optional({\n        name: 'groups',\n        overrides: enhanceGroups\n      })]);\n\n    const factory$c = (detail, components, _spec, _externals) => {\n      const setGroups = (toolbar, groups) => {\n        getGroupContainer(toolbar).fold(() => {\n          console.error('Toolbar was defined to not be a shell, but no groups container was specified in components');\n          throw new Error('Toolbar was defined to not be a shell, but no groups container was specified in components');\n        }, container => {\n          Replacing.set(container, groups);\n        });\n      };\n      const getGroupContainer = component => detail.shell ? Optional.some(component) : getPart(component, detail, 'groups');\n      const extra = detail.shell ? {\n        behaviours: [Replacing.config({})],\n        components: []\n      } : {\n        behaviours: [],\n        components\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: extra.components,\n        behaviours: augment(detail.toolbarBehaviours, extra.behaviours),\n        apis: { setGroups },\n        domModification: { attributes: { role: 'group' } }\n      };\n    };\n    const Toolbar = composite({\n      name: 'Toolbar',\n      configFields: schema$e(),\n      partFields: parts$8(),\n      factory: factory$c,\n      apis: {\n        setGroups: (apis, toolbar, groups) => {\n          apis.setGroups(toolbar, groups);\n        }\n      }\n    });\n\n    const setup$a = noop;\n    const isDocked$2 = never;\n    const getBehaviours$1 = constant$1([]);\n\n    var StaticHeader = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setup: setup$a,\n        isDocked: isDocked$2,\n        getBehaviours: getBehaviours$1\n    });\n\n    const getOffsetParent = element => {\n      const isFixed = is$1(getRaw(element, 'position'), 'fixed');\n      const offsetParent$1 = isFixed ? Optional.none() : offsetParent(element);\n      return offsetParent$1.orThunk(() => {\n        const marker = SugarElement.fromTag('span');\n        return parent(element).bind(parent => {\n          append$2(parent, marker);\n          const offsetParent$1 = offsetParent(marker);\n          remove$5(marker);\n          return offsetParent$1;\n        });\n      });\n    };\n    const getOrigin = element => getOffsetParent(element).map(absolute$3).getOrThunk(() => SugarPosition(0, 0));\n\n    const morphAdt = Adt.generate([\n      { static: [] },\n      { absolute: ['positionCss'] },\n      { fixed: ['positionCss'] }\n    ]);\n    const appear = (component, contextualInfo) => {\n      const elem = component.element;\n      add$2(elem, contextualInfo.transitionClass);\n      remove$2(elem, contextualInfo.fadeOutClass);\n      add$2(elem, contextualInfo.fadeInClass);\n      contextualInfo.onShow(component);\n    };\n    const disappear = (component, contextualInfo) => {\n      const elem = component.element;\n      add$2(elem, contextualInfo.transitionClass);\n      remove$2(elem, contextualInfo.fadeInClass);\n      add$2(elem, contextualInfo.fadeOutClass);\n      contextualInfo.onHide(component);\n    };\n    const isPartiallyVisible = (box, viewport) => box.y < viewport.bottom && box.bottom > viewport.y;\n    const isTopCompletelyVisible = (box, viewport) => box.y >= viewport.y;\n    const isBottomCompletelyVisible = (box, viewport) => box.bottom <= viewport.bottom;\n    const isVisibleForModes = (modes, box, viewport) => forall(modes, mode => {\n      switch (mode) {\n      case 'bottom':\n        return isBottomCompletelyVisible(box, viewport);\n      case 'top':\n        return isTopCompletelyVisible(box, viewport);\n      }\n    });\n    const getPrior = (elem, state) => state.getInitialPos().map(pos => bounds(pos.bounds.x, pos.bounds.y, get$c(elem), get$d(elem)));\n    const storePrior = (elem, box, state) => {\n      state.setInitialPos({\n        style: getAllRaw(elem),\n        position: get$e(elem, 'position') || 'static',\n        bounds: box\n      });\n    };\n    const revertToOriginal = (elem, box, state) => state.getInitialPos().bind(position => {\n      state.clearInitialPos();\n      switch (position.position) {\n      case 'static':\n        return Optional.some(morphAdt.static());\n      case 'absolute':\n        const offsetBox = getOffsetParent(elem).map(box$1).getOrThunk(() => box$1(body()));\n        return Optional.some(morphAdt.absolute(NuPositionCss('absolute', get$g(position.style, 'left').map(_left => box.x - offsetBox.x), get$g(position.style, 'top').map(_top => box.y - offsetBox.y), get$g(position.style, 'right').map(_right => offsetBox.right - box.right), get$g(position.style, 'bottom').map(_bottom => offsetBox.bottom - box.bottom))));\n      default:\n        return Optional.none();\n      }\n    });\n    const morphToOriginal = (elem, viewport, state) => getPrior(elem, state).filter(box => isVisibleForModes(state.getModes(), box, viewport)).bind(box => revertToOriginal(elem, box, state));\n    const morphToFixed = (elem, viewport, state) => {\n      const box = box$1(elem);\n      if (!isVisibleForModes(state.getModes(), box, viewport)) {\n        storePrior(elem, box, state);\n        const winBox = win();\n        const left = box.x - winBox.x;\n        const top = viewport.y - winBox.y;\n        const bottom = winBox.bottom - viewport.bottom;\n        const isTop = box.y <= viewport.y;\n        return Optional.some(morphAdt.fixed(NuPositionCss('fixed', Optional.some(left), isTop ? Optional.some(top) : Optional.none(), Optional.none(), !isTop ? Optional.some(bottom) : Optional.none())));\n      } else {\n        return Optional.none();\n      }\n    };\n    const getMorph = (component, viewport, state) => {\n      const elem = component.element;\n      const isDocked = is$1(getRaw(elem, 'position'), 'fixed');\n      return isDocked ? morphToOriginal(elem, viewport, state) : morphToFixed(elem, viewport, state);\n    };\n    const getMorphToOriginal = (component, state) => {\n      const elem = component.element;\n      return getPrior(elem, state).bind(box => revertToOriginal(elem, box, state));\n    };\n\n    const morphToStatic = (component, config, state) => {\n      state.setDocked(false);\n      each$1([\n        'left',\n        'right',\n        'top',\n        'bottom',\n        'position'\n      ], prop => remove$6(component.element, prop));\n      config.onUndocked(component);\n    };\n    const morphToCoord = (component, config, state, position) => {\n      const isDocked = position.position === 'fixed';\n      state.setDocked(isDocked);\n      applyPositionCss(component.element, position);\n      const method = isDocked ? config.onDocked : config.onUndocked;\n      method(component);\n    };\n    const updateVisibility = (component, config, state, viewport, morphToDocked = false) => {\n      config.contextual.each(contextInfo => {\n        contextInfo.lazyContext(component).each(box => {\n          const isVisible = isPartiallyVisible(box, viewport);\n          if (isVisible !== state.isVisible()) {\n            state.setVisible(isVisible);\n            if (morphToDocked && !isVisible) {\n              add$1(component.element, [contextInfo.fadeOutClass]);\n              contextInfo.onHide(component);\n            } else {\n              const method = isVisible ? appear : disappear;\n              method(component, contextInfo);\n            }\n          }\n        });\n      });\n    };\n    const refreshInternal = (component, config, state) => {\n      const viewport = config.lazyViewport(component);\n      const isDocked = state.isDocked();\n      if (isDocked) {\n        updateVisibility(component, config, state, viewport);\n      }\n      getMorph(component, viewport, state).each(morph => {\n        morph.fold(() => morphToStatic(component, config, state), position => morphToCoord(component, config, state, position), position => {\n          updateVisibility(component, config, state, viewport, true);\n          morphToCoord(component, config, state, position);\n        });\n      });\n    };\n    const resetInternal = (component, config, state) => {\n      const elem = component.element;\n      state.setDocked(false);\n      getMorphToOriginal(component, state).each(morph => {\n        morph.fold(() => morphToStatic(component, config, state), position => morphToCoord(component, config, state, position), noop);\n      });\n      state.setVisible(true);\n      config.contextual.each(contextInfo => {\n        remove$1(elem, [\n          contextInfo.fadeInClass,\n          contextInfo.fadeOutClass,\n          contextInfo.transitionClass\n        ]);\n        contextInfo.onShow(component);\n      });\n      refresh$4(component, config, state);\n    };\n    const refresh$4 = (component, config, state) => {\n      if (component.getSystem().isConnected()) {\n        refreshInternal(component, config, state);\n      }\n    };\n    const reset = (component, config, state) => {\n      if (state.isDocked()) {\n        resetInternal(component, config, state);\n      }\n    };\n    const isDocked$1 = (component, config, state) => state.isDocked();\n    const setModes = (component, config, state, modes) => state.setModes(modes);\n    const getModes = (component, config, state) => state.getModes();\n\n    var DockingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        refresh: refresh$4,\n        reset: reset,\n        isDocked: isDocked$1,\n        getModes: getModes,\n        setModes: setModes\n    });\n\n    const events$5 = (dockInfo, dockState) => derive$2([\n      runOnSource(transitionend(), (component, simulatedEvent) => {\n        dockInfo.contextual.each(contextInfo => {\n          if (has(component.element, contextInfo.transitionClass)) {\n            remove$1(component.element, [\n              contextInfo.transitionClass,\n              contextInfo.fadeInClass\n            ]);\n            const notify = dockState.isVisible() ? contextInfo.onShown : contextInfo.onHidden;\n            notify(component);\n          }\n          simulatedEvent.stop();\n        });\n      }),\n      run$1(windowScroll(), (component, _) => {\n        refresh$4(component, dockInfo, dockState);\n      }),\n      run$1(windowResize(), (component, _) => {\n        reset(component, dockInfo, dockState);\n      })\n    ]);\n\n    var ActiveDocking = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$5\n    });\n\n    var DockingSchema = [\n      optionObjOf('contextual', [\n        requiredString('fadeInClass'),\n        requiredString('fadeOutClass'),\n        requiredString('transitionClass'),\n        requiredFunction('lazyContext'),\n        onHandler('onShow'),\n        onHandler('onShown'),\n        onHandler('onHide'),\n        onHandler('onHidden')\n      ]),\n      defaultedFunction('lazyViewport', win),\n      defaultedArrayOf('modes', [\n        'top',\n        'bottom'\n      ], string),\n      onHandler('onDocked'),\n      onHandler('onUndocked')\n    ];\n\n    const init$6 = spec => {\n      const docked = Cell(false);\n      const visible = Cell(true);\n      const initialBounds = value$2();\n      const modes = Cell(spec.modes);\n      const readState = () => `docked:  ${ docked.get() }, visible: ${ visible.get() }, modes: ${ modes.get().join(',') }`;\n      return nu$8({\n        isDocked: docked.get,\n        setDocked: docked.set,\n        getInitialPos: initialBounds.get,\n        setInitialPos: initialBounds.set,\n        clearInitialPos: initialBounds.clear,\n        isVisible: visible.get,\n        setVisible: visible.set,\n        getModes: modes.get,\n        setModes: modes.set,\n        readState\n      });\n    };\n\n    var DockingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$6\n    });\n\n    const Docking = create$3({\n      fields: DockingSchema,\n      name: 'docking',\n      active: ActiveDocking,\n      apis: DockingApis,\n      state: DockingState\n    });\n\n    const toolbarHeightChange = constant$1(generate$6('toolbar-height-change'));\n\n    const visibility = {\n      fadeInClass: 'tox-editor-dock-fadein',\n      fadeOutClass: 'tox-editor-dock-fadeout',\n      transitionClass: 'tox-editor-dock-transition'\n    };\n    const editorStickyOnClass = 'tox-tinymce--toolbar-sticky-on';\n    const editorStickyOffClass = 'tox-tinymce--toolbar-sticky-off';\n    const scrollFromBehindHeader = (e, containerHeader) => {\n      const doc = owner$4(containerHeader);\n      const win = defaultView(containerHeader);\n      const viewHeight = win.dom.innerHeight;\n      const scrollPos = get$b(doc);\n      const markerElement = SugarElement.fromDom(e.elm);\n      const markerPos = absolute$2(markerElement);\n      const markerHeight = get$d(markerElement);\n      const markerTop = markerPos.y;\n      const markerBottom = markerTop + markerHeight;\n      const editorHeaderPos = absolute$3(containerHeader);\n      const editorHeaderHeight = get$d(containerHeader);\n      const editorHeaderTop = editorHeaderPos.top;\n      const editorHeaderBottom = editorHeaderTop + editorHeaderHeight;\n      const editorHeaderDockedAtTop = Math.abs(editorHeaderTop - scrollPos.top) < 2;\n      const editorHeaderDockedAtBottom = Math.abs(editorHeaderBottom - (scrollPos.top + viewHeight)) < 2;\n      if (editorHeaderDockedAtTop && markerTop < editorHeaderBottom) {\n        to(scrollPos.left, markerTop - editorHeaderHeight, doc);\n      } else if (editorHeaderDockedAtBottom && markerBottom > editorHeaderTop) {\n        const y = markerTop - viewHeight + markerHeight + editorHeaderHeight;\n        to(scrollPos.left, y, doc);\n      }\n    };\n    const isDockedMode = (header, mode) => contains$2(Docking.getModes(header), mode);\n    const updateIframeContentFlow = header => {\n      const getOccupiedHeight = elm => getOuter$2(elm) + (parseInt(get$e(elm, 'margin-top'), 10) || 0) + (parseInt(get$e(elm, 'margin-bottom'), 10) || 0);\n      const elm = header.element;\n      parentElement(elm).each(parentElem => {\n        const padding = 'padding-' + Docking.getModes(header)[0];\n        if (Docking.isDocked(header)) {\n          const parentWidth = get$c(parentElem);\n          set$8(elm, 'width', parentWidth + 'px');\n          set$8(parentElem, padding, getOccupiedHeight(elm) + 'px');\n        } else {\n          remove$6(elm, 'width');\n          remove$6(parentElem, padding);\n        }\n      });\n    };\n    const updateSinkVisibility = (sinkElem, visible) => {\n      if (visible) {\n        remove$2(sinkElem, visibility.fadeOutClass);\n        add$1(sinkElem, [\n          visibility.transitionClass,\n          visibility.fadeInClass\n        ]);\n      } else {\n        remove$2(sinkElem, visibility.fadeInClass);\n        add$1(sinkElem, [\n          visibility.fadeOutClass,\n          visibility.transitionClass\n        ]);\n      }\n    };\n    const updateEditorClasses = (editor, docked) => {\n      const editorContainer = SugarElement.fromDom(editor.getContainer());\n      if (docked) {\n        add$2(editorContainer, editorStickyOnClass);\n        remove$2(editorContainer, editorStickyOffClass);\n      } else {\n        add$2(editorContainer, editorStickyOffClass);\n        remove$2(editorContainer, editorStickyOnClass);\n      }\n    };\n    const restoreFocus = (headerElem, focusedElem) => {\n      const ownerDoc = owner$4(focusedElem);\n      active$1(ownerDoc).filter(activeElm => !eq(focusedElem, activeElm)).filter(activeElm => eq(activeElm, SugarElement.fromDom(ownerDoc.dom.body)) || contains(headerElem, activeElm)).each(() => focus$3(focusedElem));\n    };\n    const findFocusedElem = (rootElm, lazySink) => search(rootElm).orThunk(() => lazySink().toOptional().bind(sink => search(sink.element)));\n    const setup$9 = (editor, sharedBackstage, lazyHeader) => {\n      if (!editor.inline) {\n        if (!sharedBackstage.header.isPositionedAtTop()) {\n          editor.on('ResizeEditor', () => {\n            lazyHeader().each(Docking.reset);\n          });\n        }\n        editor.on('ResizeWindow ResizeEditor', () => {\n          lazyHeader().each(updateIframeContentFlow);\n        });\n        editor.on('SkinLoaded', () => {\n          lazyHeader().each(comp => {\n            Docking.isDocked(comp) ? Docking.reset(comp) : Docking.refresh(comp);\n          });\n        });\n        editor.on('FullscreenStateChanged', () => {\n          lazyHeader().each(Docking.reset);\n        });\n      }\n      editor.on('AfterScrollIntoView', e => {\n        lazyHeader().each(header => {\n          Docking.refresh(header);\n          const headerElem = header.element;\n          if (isVisible(headerElem)) {\n            scrollFromBehindHeader(e, headerElem);\n          }\n        });\n      });\n      editor.on('PostRender', () => {\n        updateEditorClasses(editor, false);\n      });\n    };\n    const isDocked = lazyHeader => lazyHeader().map(Docking.isDocked).getOr(false);\n    const getIframeBehaviours = () => [Receiving.config({ channels: { [toolbarHeightChange()]: { onReceive: updateIframeContentFlow } } })];\n    const getBehaviours = (editor, sharedBackstage) => {\n      const focusedElm = value$2();\n      const lazySink = sharedBackstage.getSink;\n      const runOnSinkElement = f => {\n        lazySink().each(sink => f(sink.element));\n      };\n      const onDockingSwitch = comp => {\n        if (!editor.inline) {\n          updateIframeContentFlow(comp);\n        }\n        updateEditorClasses(editor, Docking.isDocked(comp));\n        comp.getSystem().broadcastOn([repositionPopups()], {});\n        lazySink().each(sink => sink.getSystem().broadcastOn([repositionPopups()], {}));\n      };\n      const additionalBehaviours = editor.inline ? [] : getIframeBehaviours();\n      return [\n        Focusing.config({}),\n        Docking.config({\n          contextual: {\n            lazyContext: comp => {\n              const headerHeight = getOuter$2(comp.element);\n              const container = editor.inline ? editor.getContentAreaContainer() : editor.getContainer();\n              const box = box$1(SugarElement.fromDom(container));\n              const boxHeight = box.height - headerHeight;\n              const topBound = box.y + (isDockedMode(comp, 'top') ? 0 : headerHeight);\n              return Optional.some(bounds(box.x, topBound, box.width, boxHeight));\n            },\n            onShow: () => {\n              runOnSinkElement(elem => updateSinkVisibility(elem, true));\n            },\n            onShown: comp => {\n              runOnSinkElement(elem => remove$1(elem, [\n                visibility.transitionClass,\n                visibility.fadeInClass\n              ]));\n              focusedElm.get().each(elem => {\n                restoreFocus(comp.element, elem);\n                focusedElm.clear();\n              });\n            },\n            onHide: comp => {\n              findFocusedElem(comp.element, lazySink).fold(focusedElm.clear, focusedElm.set);\n              runOnSinkElement(elem => updateSinkVisibility(elem, false));\n            },\n            onHidden: () => {\n              runOnSinkElement(elem => remove$1(elem, [visibility.transitionClass]));\n            },\n            ...visibility\n          },\n          lazyViewport: comp => {\n            const win$1 = win();\n            const offset = getStickyToolbarOffset(editor);\n            const top = win$1.y + (isDockedMode(comp, 'top') ? offset : 0);\n            const height = win$1.height - (isDockedMode(comp, 'bottom') ? offset : 0);\n            return bounds(win$1.x, top, win$1.width, height);\n          },\n          modes: [sharedBackstage.header.getDockingMode()],\n          onDocked: onDockingSwitch,\n          onUndocked: onDockingSwitch\n        }),\n        ...additionalBehaviours\n      ];\n    };\n\n    var StickyHeader = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setup: setup$9,\n        isDocked: isDocked,\n        getBehaviours: getBehaviours\n    });\n\n    const renderHeader = spec => {\n      const editor = spec.editor;\n      const getBehaviours$2 = spec.sticky ? getBehaviours : getBehaviours$1;\n      return {\n        uid: spec.uid,\n        dom: spec.dom,\n        components: spec.components,\n        behaviours: derive$1(getBehaviours$2(editor, spec.sharedBackstage))\n      };\n    };\n\n    const groupToolbarButtonSchema = objOf([\n      type,\n      requiredOf('items', oneOf([\n        arrOfObj([\n          name$1,\n          requiredArrayOf('items', string)\n        ]),\n        string\n      ]))\n    ].concat(baseToolbarButtonFields));\n    const createGroupToolbarButton = spec => asRaw('GroupToolbarButton', groupToolbarButtonSchema, spec);\n\n    const baseMenuButtonFields = [\n      optionString('text'),\n      optionString('tooltip'),\n      optionString('icon'),\n      defaultedOf('search', false, oneOf([\n        boolean,\n        objOf([optionString('placeholder')])\n      ], x => {\n        if (isBoolean(x)) {\n          return x ? Optional.some({ placeholder: Optional.none() }) : Optional.none();\n        } else {\n          return Optional.some(x);\n        }\n      })),\n      requiredFunction('fetch'),\n      defaultedFunction('onSetup', () => noop)\n    ];\n\n    const MenuButtonSchema = objOf([\n      type,\n      ...baseMenuButtonFields\n    ]);\n    const createMenuButton = spec => asRaw('menubutton', MenuButtonSchema, spec);\n\n    const splitButtonSchema = objOf([\n      type,\n      optionalTooltip,\n      optionalIcon,\n      optionalText,\n      optionalSelect,\n      fetch$1,\n      onSetup,\n      defaultedStringEnum('presets', 'normal', [\n        'normal',\n        'color',\n        'listpreview'\n      ]),\n      defaultedColumns(1),\n      onAction,\n      onItemAction\n    ]);\n    const createSplitButton = spec => asRaw('SplitButton', splitButtonSchema, spec);\n\n    const factory$b = (detail, spec) => {\n      const setMenus = (comp, menus) => {\n        const newMenus = map$2(menus, m => {\n          const buttonSpec = {\n            type: 'menubutton',\n            text: m.text,\n            fetch: callback => {\n              callback(m.getItems());\n            }\n          };\n          const internal = createMenuButton(buttonSpec).mapError(errInfo => formatError(errInfo)).getOrDie();\n          return renderMenuButton(internal, 'tox-mbtn', spec.backstage, Optional.some('menuitem'));\n        });\n        Replacing.set(comp, newMenus);\n      };\n      const apis = {\n        focus: Keying.focusIn,\n        setMenus\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: [],\n        behaviours: derive$1([\n          Replacing.config({}),\n          config('menubar-events', [\n            runOnAttached(component => {\n              detail.onSetup(component);\n            }),\n            run$1(mouseover(), (comp, se) => {\n              descendant(comp.element, '.' + 'tox-mbtn--active').each(activeButton => {\n                closest$1(se.event.target, '.' + 'tox-mbtn').each(hoveredButton => {\n                  if (!eq(activeButton, hoveredButton)) {\n                    comp.getSystem().getByDom(activeButton).each(activeComp => {\n                      comp.getSystem().getByDom(hoveredButton).each(hoveredComp => {\n                        Dropdown.expand(hoveredComp);\n                        Dropdown.close(activeComp);\n                        Focusing.focus(hoveredComp);\n                      });\n                    });\n                  }\n                });\n              });\n            }),\n            run$1(focusShifted(), (comp, se) => {\n              se.event.prevFocus.bind(prev => comp.getSystem().getByDom(prev).toOptional()).each(prev => {\n                se.event.newFocus.bind(nu => comp.getSystem().getByDom(nu).toOptional()).each(nu => {\n                  if (Dropdown.isOpen(prev)) {\n                    Dropdown.expand(nu);\n                    Dropdown.close(prev);\n                  }\n                });\n              });\n            })\n          ]),\n          Keying.config({\n            mode: 'flow',\n            selector: '.' + 'tox-mbtn',\n            onEscape: comp => {\n              detail.onEscape(comp);\n              return Optional.some(true);\n            }\n          }),\n          Tabstopping.config({})\n        ]),\n        apis,\n        domModification: { attributes: { role: 'menubar' } }\n      };\n    };\n    var SilverMenubar = single({\n      factory: factory$b,\n      name: 'silver.Menubar',\n      configFields: [\n        required$1('dom'),\n        required$1('uid'),\n        required$1('onEscape'),\n        required$1('backstage'),\n        defaulted('onSetup', noop)\n      ],\n      apis: {\n        focus: (apis, comp) => {\n          apis.focus(comp);\n        },\n        setMenus: (apis, comp, menus) => {\n          apis.setMenus(comp, menus);\n        }\n      }\n    });\n\n    const promotionMessage = '\\u26A1\\ufe0fUpgrade';\n    const promotionLink = 'https://www.tiny.cloud/tinymce-self-hosted-premium-features/?utm_source=TinyMCE&utm_medium=SPAP&utm_campaign=SPAP&utm_id=editorreferral';\n    const renderPromotion = spec => {\n      return {\n        uid: spec.uid,\n        dom: spec.dom,\n        components: [{\n            dom: {\n              tag: 'a',\n              attributes: {\n                'href': promotionLink,\n                'rel': 'noopener',\n                'target': '_blank',\n                'aria-hidden': 'true'\n              },\n              classes: ['tox-promotion-link'],\n              innerHtml: promotionMessage\n            }\n          }]\n      };\n    };\n\n    const getAnimationRoot = (component, slideConfig) => slideConfig.getAnimationRoot.fold(() => component.element, get => get(component));\n\n    const getDimensionProperty = slideConfig => slideConfig.dimension.property;\n    const getDimension = (slideConfig, elem) => slideConfig.dimension.getDimension(elem);\n    const disableTransitions = (component, slideConfig) => {\n      const root = getAnimationRoot(component, slideConfig);\n      remove$1(root, [\n        slideConfig.shrinkingClass,\n        slideConfig.growingClass\n      ]);\n    };\n    const setShrunk = (component, slideConfig) => {\n      remove$2(component.element, slideConfig.openClass);\n      add$2(component.element, slideConfig.closedClass);\n      set$8(component.element, getDimensionProperty(slideConfig), '0px');\n      reflow(component.element);\n    };\n    const setGrown = (component, slideConfig) => {\n      remove$2(component.element, slideConfig.closedClass);\n      add$2(component.element, slideConfig.openClass);\n      remove$6(component.element, getDimensionProperty(slideConfig));\n    };\n    const doImmediateShrink = (component, slideConfig, slideState, _calculatedSize) => {\n      slideState.setCollapsed();\n      set$8(component.element, getDimensionProperty(slideConfig), getDimension(slideConfig, component.element));\n      disableTransitions(component, slideConfig);\n      setShrunk(component, slideConfig);\n      slideConfig.onStartShrink(component);\n      slideConfig.onShrunk(component);\n    };\n    const doStartShrink = (component, slideConfig, slideState, calculatedSize) => {\n      const size = calculatedSize.getOrThunk(() => getDimension(slideConfig, component.element));\n      slideState.setCollapsed();\n      set$8(component.element, getDimensionProperty(slideConfig), size);\n      reflow(component.element);\n      const root = getAnimationRoot(component, slideConfig);\n      remove$2(root, slideConfig.growingClass);\n      add$2(root, slideConfig.shrinkingClass);\n      setShrunk(component, slideConfig);\n      slideConfig.onStartShrink(component);\n    };\n    const doStartSmartShrink = (component, slideConfig, slideState) => {\n      const size = getDimension(slideConfig, component.element);\n      const shrinker = size === '0px' ? doImmediateShrink : doStartShrink;\n      shrinker(component, slideConfig, slideState, Optional.some(size));\n    };\n    const doStartGrow = (component, slideConfig, slideState) => {\n      const root = getAnimationRoot(component, slideConfig);\n      const wasShrinking = has(root, slideConfig.shrinkingClass);\n      const beforeSize = getDimension(slideConfig, component.element);\n      setGrown(component, slideConfig);\n      const fullSize = getDimension(slideConfig, component.element);\n      const startPartialGrow = () => {\n        set$8(component.element, getDimensionProperty(slideConfig), beforeSize);\n        reflow(component.element);\n      };\n      const startCompleteGrow = () => {\n        setShrunk(component, slideConfig);\n      };\n      const setStartSize = wasShrinking ? startPartialGrow : startCompleteGrow;\n      setStartSize();\n      remove$2(root, slideConfig.shrinkingClass);\n      add$2(root, slideConfig.growingClass);\n      setGrown(component, slideConfig);\n      set$8(component.element, getDimensionProperty(slideConfig), fullSize);\n      slideState.setExpanded();\n      slideConfig.onStartGrow(component);\n    };\n    const refresh$3 = (component, slideConfig, slideState) => {\n      if (slideState.isExpanded()) {\n        remove$6(component.element, getDimensionProperty(slideConfig));\n        const fullSize = getDimension(slideConfig, component.element);\n        set$8(component.element, getDimensionProperty(slideConfig), fullSize);\n      }\n    };\n    const grow = (component, slideConfig, slideState) => {\n      if (!slideState.isExpanded()) {\n        doStartGrow(component, slideConfig, slideState);\n      }\n    };\n    const shrink = (component, slideConfig, slideState) => {\n      if (slideState.isExpanded()) {\n        doStartSmartShrink(component, slideConfig, slideState);\n      }\n    };\n    const immediateShrink = (component, slideConfig, slideState) => {\n      if (slideState.isExpanded()) {\n        doImmediateShrink(component, slideConfig, slideState);\n      }\n    };\n    const hasGrown = (component, slideConfig, slideState) => slideState.isExpanded();\n    const hasShrunk = (component, slideConfig, slideState) => slideState.isCollapsed();\n    const isGrowing = (component, slideConfig, _slideState) => {\n      const root = getAnimationRoot(component, slideConfig);\n      return has(root, slideConfig.growingClass) === true;\n    };\n    const isShrinking = (component, slideConfig, _slideState) => {\n      const root = getAnimationRoot(component, slideConfig);\n      return has(root, slideConfig.shrinkingClass) === true;\n    };\n    const isTransitioning = (component, slideConfig, slideState) => isGrowing(component, slideConfig) || isShrinking(component, slideConfig);\n    const toggleGrow = (component, slideConfig, slideState) => {\n      const f = slideState.isExpanded() ? doStartSmartShrink : doStartGrow;\n      f(component, slideConfig, slideState);\n    };\n    const immediateGrow = (component, slideConfig, slideState) => {\n      if (!slideState.isExpanded()) {\n        setGrown(component, slideConfig);\n        set$8(component.element, getDimensionProperty(slideConfig), getDimension(slideConfig, component.element));\n        disableTransitions(component, slideConfig);\n        slideState.setExpanded();\n        slideConfig.onStartGrow(component);\n        slideConfig.onGrown(component);\n      }\n    };\n\n    var SlidingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        refresh: refresh$3,\n        grow: grow,\n        shrink: shrink,\n        immediateShrink: immediateShrink,\n        hasGrown: hasGrown,\n        hasShrunk: hasShrunk,\n        isGrowing: isGrowing,\n        isShrinking: isShrinking,\n        isTransitioning: isTransitioning,\n        toggleGrow: toggleGrow,\n        disableTransitions: disableTransitions,\n        immediateGrow: immediateGrow\n    });\n\n    const exhibit = (base, slideConfig, _slideState) => {\n      const expanded = slideConfig.expanded;\n      return expanded ? nu$7({\n        classes: [slideConfig.openClass],\n        styles: {}\n      }) : nu$7({\n        classes: [slideConfig.closedClass],\n        styles: wrap$1(slideConfig.dimension.property, '0px')\n      });\n    };\n    const events$4 = (slideConfig, slideState) => derive$2([runOnSource(transitionend(), (component, simulatedEvent) => {\n        const raw = simulatedEvent.event.raw;\n        if (raw.propertyName === slideConfig.dimension.property) {\n          disableTransitions(component, slideConfig);\n          if (slideState.isExpanded()) {\n            remove$6(component.element, slideConfig.dimension.property);\n          }\n          const notify = slideState.isExpanded() ? slideConfig.onGrown : slideConfig.onShrunk;\n          notify(component);\n        }\n      })]);\n\n    var ActiveSliding = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit,\n        events: events$4\n    });\n\n    var SlidingSchema = [\n      required$1('closedClass'),\n      required$1('openClass'),\n      required$1('shrinkingClass'),\n      required$1('growingClass'),\n      option$3('getAnimationRoot'),\n      onHandler('onShrunk'),\n      onHandler('onStartShrink'),\n      onHandler('onGrown'),\n      onHandler('onStartGrow'),\n      defaulted('expanded', false),\n      requiredOf('dimension', choose$1('property', {\n        width: [\n          output$1('property', 'width'),\n          output$1('getDimension', elem => get$c(elem) + 'px')\n        ],\n        height: [\n          output$1('property', 'height'),\n          output$1('getDimension', elem => get$d(elem) + 'px')\n        ]\n      }))\n    ];\n\n    const init$5 = spec => {\n      const state = Cell(spec.expanded);\n      const readState = () => 'expanded: ' + state.get();\n      return nu$8({\n        isExpanded: () => state.get() === true,\n        isCollapsed: () => state.get() === false,\n        setCollapsed: curry(state.set, false),\n        setExpanded: curry(state.set, true),\n        readState\n      });\n    };\n\n    var SlidingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$5\n    });\n\n    const Sliding = create$3({\n      fields: SlidingSchema,\n      name: 'sliding',\n      active: ActiveSliding,\n      apis: SlidingApis,\n      state: SlidingState\n    });\n\n    const owner = 'container';\n    const schema$d = [field('slotBehaviours', [])];\n    const getPartName = name => '<alloy.field.' + name + '>';\n    const sketch = sSpec => {\n      const parts = (() => {\n        const record = [];\n        const slot = (name, config) => {\n          record.push(name);\n          return generateOne$1(owner, getPartName(name), config);\n        };\n        return {\n          slot,\n          record: constant$1(record)\n        };\n      })();\n      const spec = sSpec(parts);\n      const partNames = parts.record();\n      const fieldParts = map$2(partNames, n => required({\n        name: n,\n        pname: getPartName(n)\n      }));\n      return composite$1(owner, schema$d, fieldParts, make$1, spec);\n    };\n    const make$1 = (detail, components) => {\n      const getSlotNames = _ => getAllPartNames(detail);\n      const getSlot = (container, key) => getPart(container, detail, key);\n      const onSlot = (f, def) => (container, key) => getPart(container, detail, key).map(slot => f(slot, key)).getOr(def);\n      const onSlots = f => (container, keys) => {\n        each$1(keys, key => f(container, key));\n      };\n      const doShowing = (comp, _key) => get$f(comp.element, 'aria-hidden') !== 'true';\n      const doShow = (comp, key) => {\n        if (!doShowing(comp)) {\n          const element = comp.element;\n          remove$6(element, 'display');\n          remove$7(element, 'aria-hidden');\n          emitWith(comp, slotVisibility(), {\n            name: key,\n            visible: true\n          });\n        }\n      };\n      const doHide = (comp, key) => {\n        if (doShowing(comp)) {\n          const element = comp.element;\n          set$8(element, 'display', 'none');\n          set$9(element, 'aria-hidden', 'true');\n          emitWith(comp, slotVisibility(), {\n            name: key,\n            visible: false\n          });\n        }\n      };\n      const isShowing = onSlot(doShowing, false);\n      const hideSlot = onSlot(doHide);\n      const hideSlots = onSlots(hideSlot);\n      const hideAllSlots = container => hideSlots(container, getSlotNames());\n      const showSlot = onSlot(doShow);\n      const apis = {\n        getSlotNames,\n        getSlot,\n        isShowing,\n        hideSlot,\n        hideAllSlots,\n        showSlot\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: get$3(detail.slotBehaviours),\n        apis\n      };\n    };\n    const slotApis = map$1({\n      getSlotNames: (apis, c) => apis.getSlotNames(c),\n      getSlot: (apis, c, key) => apis.getSlot(c, key),\n      isShowing: (apis, c, key) => apis.isShowing(c, key),\n      hideSlot: (apis, c, key) => apis.hideSlot(c, key),\n      hideAllSlots: (apis, c) => apis.hideAllSlots(c),\n      showSlot: (apis, c, key) => apis.showSlot(c, key)\n    }, value => makeApi(value));\n    const SlotContainer = {\n      ...slotApis,\n      ...{ sketch }\n    };\n\n    const sidebarSchema = objOf([\n      optionalIcon,\n      optionalTooltip,\n      defaultedFunction('onShow', noop),\n      defaultedFunction('onHide', noop),\n      onSetup\n    ]);\n    const createSidebar = spec => asRaw('sidebar', sidebarSchema, spec);\n\n    const setup$8 = editor => {\n      const {sidebars} = editor.ui.registry.getAll();\n      each$1(keys(sidebars), name => {\n        const spec = sidebars[name];\n        const isActive = () => is$1(Optional.from(editor.queryCommandValue('ToggleSidebar')), name);\n        editor.ui.registry.addToggleButton(name, {\n          icon: spec.icon,\n          tooltip: spec.tooltip,\n          onAction: buttonApi => {\n            editor.execCommand('ToggleSidebar', false, name);\n            buttonApi.setActive(isActive());\n          },\n          onSetup: buttonApi => {\n            buttonApi.setActive(isActive());\n            const handleToggle = () => buttonApi.setActive(isActive());\n            editor.on('ToggleSidebar', handleToggle);\n            return () => {\n              editor.off('ToggleSidebar', handleToggle);\n            };\n          }\n        });\n      });\n    };\n    const getApi = comp => ({ element: () => comp.element.dom });\n    const makePanels = (parts, panelConfigs) => {\n      const specs = map$2(keys(panelConfigs), name => {\n        const spec = panelConfigs[name];\n        const bridged = getOrDie(createSidebar(spec));\n        return {\n          name,\n          getApi,\n          onSetup: bridged.onSetup,\n          onShow: bridged.onShow,\n          onHide: bridged.onHide\n        };\n      });\n      return map$2(specs, spec => {\n        const editorOffCell = Cell(noop);\n        return parts.slot(spec.name, {\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar__pane']\n          },\n          behaviours: SimpleBehaviours.unnamedEvents([\n            onControlAttached(spec, editorOffCell),\n            onControlDetached(spec, editorOffCell),\n            run$1(slotVisibility(), (sidepanel, se) => {\n              const data = se.event;\n              const optSidePanelSpec = find$5(specs, config => config.name === data.name);\n              optSidePanelSpec.each(sidePanelSpec => {\n                const handler = data.visible ? sidePanelSpec.onShow : sidePanelSpec.onHide;\n                handler(sidePanelSpec.getApi(sidepanel));\n              });\n            })\n          ])\n        });\n      });\n    };\n    const makeSidebar = panelConfigs => SlotContainer.sketch(parts => ({\n      dom: {\n        tag: 'div',\n        classes: ['tox-sidebar__pane-container']\n      },\n      components: makePanels(parts, panelConfigs),\n      slotBehaviours: SimpleBehaviours.unnamedEvents([runOnAttached(slotContainer => SlotContainer.hideAllSlots(slotContainer))])\n    }));\n    const setSidebar = (sidebar, panelConfigs, showSidebar) => {\n      const optSlider = Composing.getCurrent(sidebar);\n      optSlider.each(slider => {\n        Replacing.set(slider, [makeSidebar(panelConfigs)]);\n        const configKey = showSidebar === null || showSidebar === void 0 ? void 0 : showSidebar.toLowerCase();\n        if (isString(configKey) && has$2(panelConfigs, configKey)) {\n          Composing.getCurrent(slider).each(slotContainer => {\n            SlotContainer.showSlot(slotContainer, configKey);\n            Sliding.immediateGrow(slider);\n            remove$6(slider.element, 'width');\n          });\n        }\n      });\n    };\n    const toggleSidebar = (sidebar, name) => {\n      const optSlider = Composing.getCurrent(sidebar);\n      optSlider.each(slider => {\n        const optSlotContainer = Composing.getCurrent(slider);\n        optSlotContainer.each(slotContainer => {\n          if (Sliding.hasGrown(slider)) {\n            if (SlotContainer.isShowing(slotContainer, name)) {\n              Sliding.shrink(slider);\n            } else {\n              SlotContainer.hideAllSlots(slotContainer);\n              SlotContainer.showSlot(slotContainer, name);\n            }\n          } else {\n            SlotContainer.hideAllSlots(slotContainer);\n            SlotContainer.showSlot(slotContainer, name);\n            Sliding.grow(slider);\n          }\n        });\n      });\n    };\n    const whichSidebar = sidebar => {\n      const optSlider = Composing.getCurrent(sidebar);\n      return optSlider.bind(slider => {\n        const sidebarOpen = Sliding.isGrowing(slider) || Sliding.hasGrown(slider);\n        if (sidebarOpen) {\n          const optSlotContainer = Composing.getCurrent(slider);\n          return optSlotContainer.bind(slotContainer => find$5(SlotContainer.getSlotNames(slotContainer), name => SlotContainer.isShowing(slotContainer, name)));\n        } else {\n          return Optional.none();\n        }\n      });\n    };\n    const fixSize = generate$6('FixSizeEvent');\n    const autoSize = generate$6('AutoSizeEvent');\n    const renderSidebar = spec => ({\n      uid: spec.uid,\n      dom: {\n        tag: 'div',\n        classes: ['tox-sidebar'],\n        attributes: { role: 'complementary' }\n      },\n      components: [{\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar__slider']\n          },\n          components: [],\n          behaviours: derive$1([\n            Tabstopping.config({}),\n            Focusing.config({}),\n            Sliding.config({\n              dimension: { property: 'width' },\n              closedClass: 'tox-sidebar--sliding-closed',\n              openClass: 'tox-sidebar--sliding-open',\n              shrinkingClass: 'tox-sidebar--sliding-shrinking',\n              growingClass: 'tox-sidebar--sliding-growing',\n              onShrunk: slider => {\n                const optSlotContainer = Composing.getCurrent(slider);\n                optSlotContainer.each(SlotContainer.hideAllSlots);\n                emit(slider, autoSize);\n              },\n              onGrown: slider => {\n                emit(slider, autoSize);\n              },\n              onStartGrow: slider => {\n                emitWith(slider, fixSize, { width: getRaw(slider.element, 'width').getOr('') });\n              },\n              onStartShrink: slider => {\n                emitWith(slider, fixSize, { width: get$c(slider.element) + 'px' });\n              }\n            }),\n            Replacing.config({}),\n            Composing.config({\n              find: comp => {\n                const children = Replacing.contents(comp);\n                return head(children);\n              }\n            })\n          ])\n        }],\n      behaviours: derive$1([\n        ComposingConfigs.childAt(0),\n        config('sidebar-sliding-events', [\n          run$1(fixSize, (comp, se) => {\n            set$8(comp.element, 'width', se.event.width);\n          }),\n          run$1(autoSize, (comp, _se) => {\n            remove$6(comp.element, 'width');\n          })\n        ])\n      ])\n    });\n\n    const block = (component, config, state, getBusySpec) => {\n      set$9(component.element, 'aria-busy', true);\n      const root = config.getRoot(component).getOr(component);\n      const blockerBehaviours = derive$1([\n        Keying.config({\n          mode: 'special',\n          onTab: () => Optional.some(true),\n          onShiftTab: () => Optional.some(true)\n        }),\n        Focusing.config({})\n      ]);\n      const blockSpec = getBusySpec(root, blockerBehaviours);\n      const blocker = root.getSystem().build(blockSpec);\n      Replacing.append(root, premade(blocker));\n      if (blocker.hasConfigured(Keying) && config.focus) {\n        Keying.focusIn(blocker);\n      }\n      if (!state.isBlocked()) {\n        config.onBlock(component);\n      }\n      state.blockWith(() => Replacing.remove(root, blocker));\n    };\n    const unblock = (component, config, state) => {\n      remove$7(component.element, 'aria-busy');\n      if (state.isBlocked()) {\n        config.onUnblock(component);\n      }\n      state.clear();\n    };\n\n    var BlockingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        block: block,\n        unblock: unblock\n    });\n\n    var BlockingSchema = [\n      defaultedFunction('getRoot', Optional.none),\n      defaultedBoolean('focus', true),\n      onHandler('onBlock'),\n      onHandler('onUnblock')\n    ];\n\n    const init$4 = () => {\n      const blocker = destroyable();\n      const blockWith = destroy => {\n        blocker.set({ destroy });\n      };\n      return nu$8({\n        readState: blocker.isSet,\n        blockWith,\n        clear: blocker.clear,\n        isBlocked: blocker.isSet\n      });\n    };\n\n    var BlockingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$4\n    });\n\n    const Blocking = create$3({\n      fields: BlockingSchema,\n      name: 'blocking',\n      apis: BlockingApis,\n      state: BlockingState\n    });\n\n    const getAttrs = elem => {\n      const attributes = elem.dom.attributes !== undefined ? elem.dom.attributes : [];\n      return foldl(attributes, (b, attr) => {\n        if (attr.name === 'class') {\n          return b;\n        } else {\n          return {\n            ...b,\n            [attr.name]: attr.value\n          };\n        }\n      }, {});\n    };\n    const getClasses = elem => Array.prototype.slice.call(elem.dom.classList, 0);\n    const fromHtml = html => {\n      const elem = SugarElement.fromHtml(html);\n      const children$1 = children(elem);\n      const attrs = getAttrs(elem);\n      const classes = getClasses(elem);\n      const contents = children$1.length === 0 ? {} : { innerHtml: get$9(elem) };\n      return {\n        tag: name$3(elem),\n        classes,\n        attributes: attrs,\n        ...contents\n      };\n    };\n\n    const getBusySpec$1 = providerBackstage => (_root, _behaviours) => ({\n      dom: {\n        tag: 'div',\n        attributes: {\n          'aria-label': providerBackstage.translate('Loading...'),\n          'tabindex': '0'\n        },\n        classes: ['tox-throbber__busy-spinner']\n      },\n      components: [{ dom: fromHtml('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>') }]\n    });\n    const focusBusyComponent = throbber => Composing.getCurrent(throbber).each(comp => focus$3(comp.element));\n    const toggleEditorTabIndex = (editor, state) => {\n      const tabIndexAttr = 'tabindex';\n      const dataTabIndexAttr = `data-mce-${ tabIndexAttr }`;\n      Optional.from(editor.iframeElement).map(SugarElement.fromDom).each(iframe => {\n        if (state) {\n          getOpt(iframe, tabIndexAttr).each(tabIndex => set$9(iframe, dataTabIndexAttr, tabIndex));\n          set$9(iframe, tabIndexAttr, -1);\n        } else {\n          remove$7(iframe, tabIndexAttr);\n          getOpt(iframe, dataTabIndexAttr).each(tabIndex => {\n            set$9(iframe, tabIndexAttr, tabIndex);\n            remove$7(iframe, dataTabIndexAttr);\n          });\n        }\n      });\n    };\n    const toggleThrobber = (editor, comp, state, providerBackstage) => {\n      const element = comp.element;\n      toggleEditorTabIndex(editor, state);\n      if (state) {\n        Blocking.block(comp, getBusySpec$1(providerBackstage));\n        remove$6(element, 'display');\n        remove$7(element, 'aria-hidden');\n        if (editor.hasFocus()) {\n          focusBusyComponent(comp);\n        }\n      } else {\n        const throbberFocus = Composing.getCurrent(comp).exists(busyComp => hasFocus(busyComp.element));\n        Blocking.unblock(comp);\n        set$8(element, 'display', 'none');\n        set$9(element, 'aria-hidden', 'true');\n        if (throbberFocus) {\n          editor.focus();\n        }\n      }\n    };\n    const renderThrobber = spec => ({\n      uid: spec.uid,\n      dom: {\n        tag: 'div',\n        attributes: { 'aria-hidden': 'true' },\n        classes: ['tox-throbber'],\n        styles: { display: 'none' }\n      },\n      behaviours: derive$1([\n        Replacing.config({}),\n        Blocking.config({ focus: false }),\n        Composing.config({ find: comp => head(comp.components()) })\n      ]),\n      components: []\n    });\n    const isFocusEvent = event => event.type === 'focusin';\n    const isPasteBinTarget = event => {\n      if (isFocusEvent(event)) {\n        const node = event.composed ? head(event.composedPath()) : Optional.from(event.target);\n        return node.map(SugarElement.fromDom).filter(isElement$1).exists(targetElm => has(targetElm, 'mce-pastebin'));\n      } else {\n        return false;\n      }\n    };\n    const setup$7 = (editor, lazyThrobber, sharedBackstage) => {\n      const throbberState = Cell(false);\n      const timer = value$2();\n      const stealFocus = e => {\n        if (throbberState.get() && !isPasteBinTarget(e)) {\n          e.preventDefault();\n          focusBusyComponent(lazyThrobber());\n          editor.editorManager.setActive(editor);\n        }\n      };\n      if (!editor.inline) {\n        editor.on('PreInit', () => {\n          editor.dom.bind(editor.getWin(), 'focusin', stealFocus);\n          editor.on('BeforeExecCommand', e => {\n            if (e.command.toLowerCase() === 'mcefocus' && e.value !== true) {\n              stealFocus(e);\n            }\n          });\n        });\n      }\n      const toggle = state => {\n        if (state !== throbberState.get()) {\n          throbberState.set(state);\n          toggleThrobber(editor, lazyThrobber(), state, sharedBackstage.providers);\n          fireAfterProgressState(editor, state);\n        }\n      };\n      editor.on('ProgressState', e => {\n        timer.on(clearTimeout);\n        if (isNumber(e.time)) {\n          const timerId = global$9.setEditorTimeout(editor, () => toggle(e.state), e.time);\n          timer.set(timerId);\n        } else {\n          toggle(e.state);\n          timer.clear();\n        }\n      });\n    };\n\n    const generate$1 = (xs, f) => {\n      const init = {\n        len: 0,\n        list: []\n      };\n      const r = foldl(xs, (b, a) => {\n        const value = f(a, b.len);\n        return value.fold(constant$1(b), v => ({\n          len: v.finish,\n          list: b.list.concat([v])\n        }));\n      }, init);\n      return r.list;\n    };\n\n    const output = (within, extra, withinWidth) => ({\n      within,\n      extra,\n      withinWidth\n    });\n    const apportion = (units, total, len) => {\n      const parray = generate$1(units, (unit, current) => {\n        const width = len(unit);\n        return Optional.some({\n          element: unit,\n          start: current,\n          finish: current + width,\n          width\n        });\n      });\n      const within = filter$2(parray, unit => unit.finish <= total);\n      const withinWidth = foldr(within, (acc, el) => acc + el.width, 0);\n      const extra = parray.slice(within.length);\n      return {\n        within,\n        extra,\n        withinWidth\n      };\n    };\n    const toUnit = parray => map$2(parray, unit => unit.element);\n    const fitLast = (within, extra, withinWidth) => {\n      const fits = toUnit(within.concat(extra));\n      return output(fits, [], withinWidth);\n    };\n    const overflow = (within, extra, overflower, withinWidth) => {\n      const fits = toUnit(within).concat([overflower]);\n      return output(fits, toUnit(extra), withinWidth);\n    };\n    const fitAll = (within, extra, withinWidth) => output(toUnit(within), [], withinWidth);\n    const tryFit = (total, units, len) => {\n      const divide = apportion(units, total, len);\n      return divide.extra.length === 0 ? Optional.some(divide) : Optional.none();\n    };\n    const partition = (total, units, len, overflower) => {\n      const divide = tryFit(total, units, len).getOrThunk(() => apportion(units, total - len(overflower), len));\n      const within = divide.within;\n      const extra = divide.extra;\n      const withinWidth = divide.withinWidth;\n      if (extra.length === 1 && extra[0].width <= len(overflower)) {\n        return fitLast(within, extra, withinWidth);\n      } else if (extra.length >= 1) {\n        return overflow(within, extra, overflower, withinWidth);\n      } else {\n        return fitAll(within, extra, withinWidth);\n      }\n    };\n\n    const setGroups$1 = (toolbar, storedGroups) => {\n      const bGroups = map$2(storedGroups, g => premade(g));\n      Toolbar.setGroups(toolbar, bGroups);\n    };\n    const findFocusedComp = comps => findMap(comps, comp => search(comp.element).bind(focusedElm => comp.getSystem().getByDom(focusedElm).toOptional()));\n    const refresh$2 = (toolbar, detail, setOverflow) => {\n      const builtGroups = detail.builtGroups.get();\n      if (builtGroups.length === 0) {\n        return;\n      }\n      const primary = getPartOrDie(toolbar, detail, 'primary');\n      const overflowGroup = Coupling.getCoupled(toolbar, 'overflowGroup');\n      set$8(primary.element, 'visibility', 'hidden');\n      const groups = builtGroups.concat([overflowGroup]);\n      const focusedComp = findFocusedComp(groups);\n      setOverflow([]);\n      setGroups$1(primary, groups);\n      const availableWidth = get$c(primary.element);\n      const overflows = partition(availableWidth, detail.builtGroups.get(), comp => get$c(comp.element), overflowGroup);\n      if (overflows.extra.length === 0) {\n        Replacing.remove(primary, overflowGroup);\n        setOverflow([]);\n      } else {\n        setGroups$1(primary, overflows.within);\n        setOverflow(overflows.extra);\n      }\n      remove$6(primary.element, 'visibility');\n      reflow(primary.element);\n      focusedComp.each(Focusing.focus);\n    };\n\n    const schema$c = constant$1([\n      field('splitToolbarBehaviours', [Coupling]),\n      customField('builtGroups', () => Cell([]))\n    ]);\n\n    const schema$b = constant$1([\n      markers$1(['overflowToggledClass']),\n      optionFunction('getOverflowBounds'),\n      required$1('lazySink'),\n      customField('overflowGroups', () => Cell([]))\n    ].concat(schema$c()));\n    const parts$7 = constant$1([\n      required({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'primary'\n      }),\n      external({\n        schema: schema$e(),\n        name: 'overflow'\n      }),\n      external({ name: 'overflow-button' }),\n      external({ name: 'overflow-group' })\n    ]);\n\n    const expandable = constant$1((element, available) => {\n      setMax(element, Math.floor(available));\n    });\n\n    const schema$a = constant$1([\n      markers$1(['toggledClass']),\n      required$1('lazySink'),\n      requiredFunction('fetch'),\n      optionFunction('getBounds'),\n      optionObjOf('fireDismissalEventInstead', [defaulted('event', dismissRequested())]),\n      schema$y()\n    ]);\n    const parts$6 = constant$1([\n      external({\n        name: 'button',\n        overrides: detail => ({\n          dom: { attributes: { 'aria-haspopup': 'true' } },\n          buttonBehaviours: derive$1([Toggling.config({\n              toggleClass: detail.markers.toggledClass,\n              aria: { mode: 'expanded' },\n              toggleOnExecute: false\n            })])\n        })\n      }),\n      external({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'toolbar',\n        overrides: detail => {\n          return {\n            toolbarBehaviours: derive$1([Keying.config({\n                mode: 'cyclic',\n                onEscape: comp => {\n                  getPart(comp, detail, 'button').each(Focusing.focus);\n                  return Optional.none();\n                }\n              })])\n          };\n        }\n      })\n    ]);\n\n    const toggle = (button, externals) => {\n      const toolbarSandbox = Coupling.getCoupled(button, 'toolbarSandbox');\n      if (Sandboxing.isOpen(toolbarSandbox)) {\n        Sandboxing.close(toolbarSandbox);\n      } else {\n        Sandboxing.open(toolbarSandbox, externals.toolbar());\n      }\n    };\n    const position = (button, toolbar, detail, layouts) => {\n      const bounds = detail.getBounds.map(bounder => bounder());\n      const sink = detail.lazySink(button).getOrDie();\n      Positioning.positionWithinBounds(sink, toolbar, {\n        anchor: {\n          type: 'hotspot',\n          hotspot: button,\n          layouts,\n          overrides: { maxWidthFunction: expandable() }\n        }\n      }, bounds);\n    };\n    const setGroups = (button, toolbar, detail, layouts, groups) => {\n      Toolbar.setGroups(toolbar, groups);\n      position(button, toolbar, detail, layouts);\n      Toggling.on(button);\n    };\n    const makeSandbox = (button, spec, detail) => {\n      const ariaControls = manager();\n      const onOpen = (sandbox, toolbar) => {\n        detail.fetch().get(groups => {\n          setGroups(button, toolbar, detail, spec.layouts, groups);\n          ariaControls.link(button.element);\n          Keying.focusIn(toolbar);\n        });\n      };\n      const onClose = () => {\n        Toggling.off(button);\n        Focusing.focus(button);\n        ariaControls.unlink(button.element);\n      };\n      return {\n        dom: {\n          tag: 'div',\n          attributes: { id: ariaControls.id }\n        },\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'special',\n            onEscape: comp => {\n              Sandboxing.close(comp);\n              return Optional.some(true);\n            }\n          }),\n          Sandboxing.config({\n            onOpen,\n            onClose,\n            isPartOf: (container, data, queryElem) => {\n              return isPartOf$1(data, queryElem) || isPartOf$1(button, queryElem);\n            },\n            getAttachPoint: () => {\n              return detail.lazySink(button).getOrDie();\n            }\n          }),\n          Receiving.config({\n            channels: {\n              ...receivingChannel$1({\n                isExtraPart: never,\n                ...detail.fireDismissalEventInstead.map(fe => ({ fireEventInstead: { event: fe.event } })).getOr({})\n              }),\n              ...receivingChannel({\n                doReposition: () => {\n                  Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each(toolbar => {\n                    position(button, toolbar, detail, spec.layouts);\n                  });\n                }\n              })\n            }\n          })\n        ])\n      };\n    };\n    const factory$a = (detail, components, spec, externals) => ({\n      ...Button.sketch({\n        ...externals.button(),\n        action: button => {\n          toggle(button, externals);\n        },\n        buttonBehaviours: SketchBehaviours.augment({ dump: externals.button().buttonBehaviours }, [Coupling.config({\n            others: {\n              toolbarSandbox: button => {\n                return makeSandbox(button, spec, detail);\n              }\n            }\n          })])\n      }),\n      apis: {\n        setGroups: (button, groups) => {\n          Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each(toolbar => {\n            setGroups(button, toolbar, detail, spec.layouts, groups);\n          });\n        },\n        reposition: button => {\n          Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each(toolbar => {\n            position(button, toolbar, detail, spec.layouts);\n          });\n        },\n        toggle: button => {\n          toggle(button, externals);\n        },\n        getToolbar: button => {\n          return Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox'));\n        },\n        isOpen: button => {\n          return Sandboxing.isOpen(Coupling.getCoupled(button, 'toolbarSandbox'));\n        }\n      }\n    });\n    const FloatingToolbarButton = composite({\n      name: 'FloatingToolbarButton',\n      factory: factory$a,\n      configFields: schema$a(),\n      partFields: parts$6(),\n      apis: {\n        setGroups: (apis, button, groups) => {\n          apis.setGroups(button, groups);\n        },\n        reposition: (apis, button) => {\n          apis.reposition(button);\n        },\n        toggle: (apis, button) => {\n          apis.toggle(button);\n        },\n        getToolbar: (apis, button) => apis.getToolbar(button),\n        isOpen: (apis, button) => apis.isOpen(button)\n      }\n    });\n\n    const schema$9 = constant$1([\n      required$1('items'),\n      markers$1(['itemSelector']),\n      field('tgroupBehaviours', [Keying])\n    ]);\n    const parts$5 = constant$1([group({\n        name: 'items',\n        unit: 'item'\n      })]);\n\n    const factory$9 = (detail, components, _spec, _externals) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components,\n      behaviours: augment(detail.tgroupBehaviours, [Keying.config({\n          mode: 'flow',\n          selector: detail.markers.itemSelector\n        })]),\n      domModification: { attributes: { role: 'toolbar' } }\n    });\n    const ToolbarGroup = composite({\n      name: 'ToolbarGroup',\n      configFields: schema$9(),\n      partFields: parts$5(),\n      factory: factory$9\n    });\n\n    const buildGroups = comps => map$2(comps, g => premade(g));\n    const refresh$1 = (toolbar, memFloatingToolbarButton, detail) => {\n      refresh$2(toolbar, detail, overflowGroups => {\n        detail.overflowGroups.set(overflowGroups);\n        memFloatingToolbarButton.getOpt(toolbar).each(floatingToolbarButton => {\n          FloatingToolbarButton.setGroups(floatingToolbarButton, buildGroups(overflowGroups));\n        });\n      });\n    };\n    const factory$8 = (detail, components, spec, externals) => {\n      const memFloatingToolbarButton = record(FloatingToolbarButton.sketch({\n        fetch: () => Future.nu(resolve => {\n          resolve(buildGroups(detail.overflowGroups.get()));\n        }),\n        layouts: {\n          onLtr: () => [\n            southwest$2,\n            southeast$2\n          ],\n          onRtl: () => [\n            southeast$2,\n            southwest$2\n          ],\n          onBottomLtr: () => [\n            northwest$2,\n            northeast$2\n          ],\n          onBottomRtl: () => [\n            northeast$2,\n            northwest$2\n          ]\n        },\n        getBounds: spec.getOverflowBounds,\n        lazySink: detail.lazySink,\n        fireDismissalEventInstead: {},\n        markers: { toggledClass: detail.markers.overflowToggledClass },\n        parts: {\n          button: externals['overflow-button'](),\n          toolbar: externals.overflow()\n        }\n      }));\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.splitToolbarBehaviours, [Coupling.config({\n            others: {\n              overflowGroup: () => {\n                return ToolbarGroup.sketch({\n                  ...externals['overflow-group'](),\n                  items: [memFloatingToolbarButton.asSpec()]\n                });\n              }\n            }\n          })]),\n        apis: {\n          setGroups: (toolbar, groups) => {\n            detail.builtGroups.set(map$2(groups, toolbar.getSystem().build));\n            refresh$1(toolbar, memFloatingToolbarButton, detail);\n          },\n          refresh: toolbar => refresh$1(toolbar, memFloatingToolbarButton, detail),\n          toggle: toolbar => {\n            memFloatingToolbarButton.getOpt(toolbar).each(floatingToolbarButton => {\n              FloatingToolbarButton.toggle(floatingToolbarButton);\n            });\n          },\n          isOpen: toolbar => memFloatingToolbarButton.getOpt(toolbar).map(FloatingToolbarButton.isOpen).getOr(false),\n          reposition: toolbar => {\n            memFloatingToolbarButton.getOpt(toolbar).each(floatingToolbarButton => {\n              FloatingToolbarButton.reposition(floatingToolbarButton);\n            });\n          },\n          getOverflow: toolbar => memFloatingToolbarButton.getOpt(toolbar).bind(FloatingToolbarButton.getToolbar)\n        },\n        domModification: { attributes: { role: 'group' } }\n      };\n    };\n    const SplitFloatingToolbar = composite({\n      name: 'SplitFloatingToolbar',\n      configFields: schema$b(),\n      partFields: parts$7(),\n      factory: factory$8,\n      apis: {\n        setGroups: (apis, toolbar, groups) => {\n          apis.setGroups(toolbar, groups);\n        },\n        refresh: (apis, toolbar) => {\n          apis.refresh(toolbar);\n        },\n        reposition: (apis, toolbar) => {\n          apis.reposition(toolbar);\n        },\n        toggle: (apis, toolbar) => {\n          apis.toggle(toolbar);\n        },\n        isOpen: (apis, toolbar) => apis.isOpen(toolbar),\n        getOverflow: (apis, toolbar) => apis.getOverflow(toolbar)\n      }\n    });\n\n    const schema$8 = constant$1([\n      markers$1([\n        'closedClass',\n        'openClass',\n        'shrinkingClass',\n        'growingClass',\n        'overflowToggledClass'\n      ]),\n      onHandler('onOpened'),\n      onHandler('onClosed')\n    ].concat(schema$c()));\n    const parts$4 = constant$1([\n      required({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'primary'\n      }),\n      required({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'overflow',\n        overrides: detail => {\n          return {\n            toolbarBehaviours: derive$1([\n              Sliding.config({\n                dimension: { property: 'height' },\n                closedClass: detail.markers.closedClass,\n                openClass: detail.markers.openClass,\n                shrinkingClass: detail.markers.shrinkingClass,\n                growingClass: detail.markers.growingClass,\n                onShrunk: comp => {\n                  getPart(comp, detail, 'overflow-button').each(button => {\n                    Toggling.off(button);\n                    Focusing.focus(button);\n                  });\n                  detail.onClosed(comp);\n                },\n                onGrown: comp => {\n                  Keying.focusIn(comp);\n                  detail.onOpened(comp);\n                },\n                onStartGrow: comp => {\n                  getPart(comp, detail, 'overflow-button').each(Toggling.on);\n                }\n              }),\n              Keying.config({\n                mode: 'acyclic',\n                onEscape: comp => {\n                  getPart(comp, detail, 'overflow-button').each(Focusing.focus);\n                  return Optional.some(true);\n                }\n              })\n            ])\n          };\n        }\n      }),\n      external({\n        name: 'overflow-button',\n        overrides: detail => ({\n          buttonBehaviours: derive$1([Toggling.config({\n              toggleClass: detail.markers.overflowToggledClass,\n              aria: { mode: 'pressed' },\n              toggleOnExecute: false\n            })])\n        })\n      }),\n      external({ name: 'overflow-group' })\n    ]);\n\n    const isOpen = (toolbar, detail) => getPart(toolbar, detail, 'overflow').map(Sliding.hasGrown).getOr(false);\n    const toggleToolbar = (toolbar, detail) => {\n      getPart(toolbar, detail, 'overflow-button').bind(() => getPart(toolbar, detail, 'overflow')).each(overf => {\n        refresh(toolbar, detail);\n        Sliding.toggleGrow(overf);\n      });\n    };\n    const refresh = (toolbar, detail) => {\n      getPart(toolbar, detail, 'overflow').each(overflow => {\n        refresh$2(toolbar, detail, groups => {\n          const builtGroups = map$2(groups, g => premade(g));\n          Toolbar.setGroups(overflow, builtGroups);\n        });\n        getPart(toolbar, detail, 'overflow-button').each(button => {\n          if (Sliding.hasGrown(overflow)) {\n            Toggling.on(button);\n          }\n        });\n        Sliding.refresh(overflow);\n      });\n    };\n    const factory$7 = (detail, components, spec, externals) => {\n      const toolbarToggleEvent = 'alloy.toolbar.toggle';\n      const doSetGroups = (toolbar, groups) => {\n        const built = map$2(groups, toolbar.getSystem().build);\n        detail.builtGroups.set(built);\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.splitToolbarBehaviours, [\n          Coupling.config({\n            others: {\n              overflowGroup: toolbar => {\n                return ToolbarGroup.sketch({\n                  ...externals['overflow-group'](),\n                  items: [Button.sketch({\n                      ...externals['overflow-button'](),\n                      action: _button => {\n                        emit(toolbar, toolbarToggleEvent);\n                      }\n                    })]\n                });\n              }\n            }\n          }),\n          config('toolbar-toggle-events', [run$1(toolbarToggleEvent, toolbar => {\n              toggleToolbar(toolbar, detail);\n            })])\n        ]),\n        apis: {\n          setGroups: (toolbar, groups) => {\n            doSetGroups(toolbar, groups);\n            refresh(toolbar, detail);\n          },\n          refresh: toolbar => refresh(toolbar, detail),\n          toggle: toolbar => toggleToolbar(toolbar, detail),\n          isOpen: toolbar => isOpen(toolbar, detail)\n        },\n        domModification: { attributes: { role: 'group' } }\n      };\n    };\n    const SplitSlidingToolbar = composite({\n      name: 'SplitSlidingToolbar',\n      configFields: schema$8(),\n      partFields: parts$4(),\n      factory: factory$7,\n      apis: {\n        setGroups: (apis, toolbar, groups) => {\n          apis.setGroups(toolbar, groups);\n        },\n        refresh: (apis, toolbar) => {\n          apis.refresh(toolbar);\n        },\n        toggle: (apis, toolbar) => {\n          apis.toggle(toolbar);\n        },\n        isOpen: (apis, toolbar) => apis.isOpen(toolbar)\n      }\n    });\n\n    const renderToolbarGroupCommon = toolbarGroup => {\n      const attributes = toolbarGroup.title.fold(() => ({}), title => ({ attributes: { title } }));\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__group'],\n          ...attributes\n        },\n        components: [ToolbarGroup.parts.items({})],\n        items: toolbarGroup.items,\n        markers: { itemSelector: '*:not(.tox-split-button) > .tox-tbtn:not([disabled]), ' + '.tox-split-button:not([disabled]), ' + '.tox-toolbar-nav-js:not([disabled])' },\n        tgroupBehaviours: derive$1([\n          Tabstopping.config({}),\n          Focusing.config({})\n        ])\n      };\n    };\n    const renderToolbarGroup = toolbarGroup => ToolbarGroup.sketch(renderToolbarGroupCommon(toolbarGroup));\n    const getToolbarBehaviours = (toolbarSpec, modeName) => {\n      const onAttached = runOnAttached(component => {\n        const groups = map$2(toolbarSpec.initGroups, renderToolbarGroup);\n        Toolbar.setGroups(component, groups);\n      });\n      return derive$1([\n        DisablingConfigs.toolbarButton(toolbarSpec.providers.isDisabled),\n        receivingConfig(),\n        Keying.config({\n          mode: modeName,\n          onEscape: toolbarSpec.onEscape,\n          selector: '.tox-toolbar__group'\n        }),\n        config('toolbar-events', [onAttached])\n      ]);\n    };\n    const renderMoreToolbarCommon = toolbarSpec => {\n      const modeName = toolbarSpec.cyclicKeying ? 'cyclic' : 'acyclic';\n      return {\n        uid: toolbarSpec.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar-overlord']\n        },\n        parts: {\n          'overflow-group': renderToolbarGroupCommon({\n            title: Optional.none(),\n            items: []\n          }),\n          'overflow-button': renderIconButtonSpec({\n            name: 'more',\n            icon: Optional.some('more-drawer'),\n            enabled: true,\n            tooltip: Optional.some('More...'),\n            primary: false,\n            buttonType: Optional.none(),\n            borderless: false\n          }, Optional.none(), toolbarSpec.providers)\n        },\n        splitToolbarBehaviours: getToolbarBehaviours(toolbarSpec, modeName)\n      };\n    };\n    const renderFloatingMoreToolbar = toolbarSpec => {\n      const baseSpec = renderMoreToolbarCommon(toolbarSpec);\n      const overflowXOffset = 4;\n      const primary = SplitFloatingToolbar.parts.primary({\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__primary']\n        }\n      });\n      return SplitFloatingToolbar.sketch({\n        ...baseSpec,\n        lazySink: toolbarSpec.getSink,\n        getOverflowBounds: () => {\n          const headerElem = toolbarSpec.moreDrawerData.lazyHeader().element;\n          const headerBounds = absolute$2(headerElem);\n          const docElem = documentElement(headerElem);\n          const docBounds = absolute$2(docElem);\n          const height = Math.max(docElem.dom.scrollHeight, docBounds.height);\n          return bounds(headerBounds.x + overflowXOffset, docBounds.y, headerBounds.width - overflowXOffset * 2, height);\n        },\n        parts: {\n          ...baseSpec.parts,\n          overflow: {\n            dom: {\n              tag: 'div',\n              classes: ['tox-toolbar__overflow'],\n              attributes: toolbarSpec.attributes\n            }\n          }\n        },\n        components: [primary],\n        markers: { overflowToggledClass: 'tox-tbtn--enabled' }\n      });\n    };\n    const renderSlidingMoreToolbar = toolbarSpec => {\n      const primary = SplitSlidingToolbar.parts.primary({\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__primary']\n        }\n      });\n      const overflow = SplitSlidingToolbar.parts.overflow({\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__overflow']\n        }\n      });\n      const baseSpec = renderMoreToolbarCommon(toolbarSpec);\n      return SplitSlidingToolbar.sketch({\n        ...baseSpec,\n        components: [\n          primary,\n          overflow\n        ],\n        markers: {\n          openClass: 'tox-toolbar__overflow--open',\n          closedClass: 'tox-toolbar__overflow--closed',\n          growingClass: 'tox-toolbar__overflow--growing',\n          shrinkingClass: 'tox-toolbar__overflow--shrinking',\n          overflowToggledClass: 'tox-tbtn--enabled'\n        },\n        onOpened: comp => {\n          comp.getSystem().broadcastOn([toolbarHeightChange()], { type: 'opened' });\n        },\n        onClosed: comp => {\n          comp.getSystem().broadcastOn([toolbarHeightChange()], { type: 'closed' });\n        }\n      });\n    };\n    const renderToolbar = toolbarSpec => {\n      const modeName = toolbarSpec.cyclicKeying ? 'cyclic' : 'acyclic';\n      return Toolbar.sketch({\n        uid: toolbarSpec.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar'].concat(toolbarSpec.type === ToolbarMode$1.scrolling ? ['tox-toolbar--scrolling'] : [])\n        },\n        components: [Toolbar.parts.groups({})],\n        toolbarBehaviours: getToolbarBehaviours(toolbarSpec, modeName)\n      });\n    };\n\n    const factory$6 = (detail, components, _spec) => {\n      const apis = {\n        getSocket: comp => {\n          return parts$a.getPart(comp, detail, 'socket');\n        },\n        setSidebar: (comp, panelConfigs, showSidebar) => {\n          parts$a.getPart(comp, detail, 'sidebar').each(sidebar => setSidebar(sidebar, panelConfigs, showSidebar));\n        },\n        toggleSidebar: (comp, name) => {\n          parts$a.getPart(comp, detail, 'sidebar').each(sidebar => toggleSidebar(sidebar, name));\n        },\n        whichSidebar: comp => {\n          return parts$a.getPart(comp, detail, 'sidebar').bind(whichSidebar).getOrNull();\n        },\n        getHeader: comp => {\n          return parts$a.getPart(comp, detail, 'header');\n        },\n        getToolbar: comp => {\n          return parts$a.getPart(comp, detail, 'toolbar');\n        },\n        setToolbar: (comp, groups) => {\n          parts$a.getPart(comp, detail, 'toolbar').each(toolbar => {\n            const renderedGroups = map$2(groups, renderToolbarGroup);\n            toolbar.getApis().setGroups(toolbar, renderedGroups);\n          });\n        },\n        setToolbars: (comp, toolbars) => {\n          parts$a.getPart(comp, detail, 'multiple-toolbar').each(mToolbar => {\n            const renderedToolbars = map$2(toolbars, g => map$2(g, renderToolbarGroup));\n            CustomList.setItems(mToolbar, renderedToolbars);\n          });\n        },\n        refreshToolbar: comp => {\n          const toolbar = parts$a.getPart(comp, detail, 'toolbar');\n          toolbar.each(toolbar => toolbar.getApis().refresh(toolbar));\n        },\n        toggleToolbarDrawer: comp => {\n          parts$a.getPart(comp, detail, 'toolbar').each(toolbar => {\n            mapFrom(toolbar.getApis().toggle, toggle => toggle(toolbar));\n          });\n        },\n        isToolbarDrawerToggled: comp => {\n          return parts$a.getPart(comp, detail, 'toolbar').bind(toolbar => Optional.from(toolbar.getApis().isOpen).map(isOpen => isOpen(toolbar))).getOr(false);\n        },\n        getThrobber: comp => {\n          return parts$a.getPart(comp, detail, 'throbber');\n        },\n        focusToolbar: comp => {\n          const optToolbar = parts$a.getPart(comp, detail, 'toolbar').orThunk(() => parts$a.getPart(comp, detail, 'multiple-toolbar'));\n          optToolbar.each(toolbar => {\n            Keying.focusIn(toolbar);\n          });\n        },\n        setMenubar: (comp, menus) => {\n          parts$a.getPart(comp, detail, 'menubar').each(menubar => {\n            SilverMenubar.setMenus(menubar, menus);\n          });\n        },\n        focusMenubar: comp => {\n          parts$a.getPart(comp, detail, 'menubar').each(menubar => {\n            SilverMenubar.focus(menubar);\n          });\n        }\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        apis,\n        behaviours: detail.behaviours\n      };\n    };\n    const partMenubar = partType.optional({\n      factory: SilverMenubar,\n      name: 'menubar',\n      schema: [required$1('backstage')]\n    });\n    const toolbarFactory = spec => {\n      if (spec.type === ToolbarMode$1.sliding) {\n        return renderSlidingMoreToolbar;\n      } else if (spec.type === ToolbarMode$1.floating) {\n        return renderFloatingMoreToolbar;\n      } else {\n        return renderToolbar;\n      }\n    };\n    const partMultipleToolbar = partType.optional({\n      factory: {\n        sketch: spec => CustomList.sketch({\n          uid: spec.uid,\n          dom: spec.dom,\n          listBehaviours: derive$1([Keying.config({\n              mode: 'acyclic',\n              selector: '.tox-toolbar'\n            })]),\n          makeItem: () => renderToolbar({\n            type: spec.type,\n            uid: generate$6('multiple-toolbar-item'),\n            cyclicKeying: false,\n            initGroups: [],\n            providers: spec.providers,\n            onEscape: () => {\n              spec.onEscape();\n              return Optional.some(true);\n            }\n          }),\n          setupItem: (_mToolbar, tc, data, _index) => {\n            Toolbar.setGroups(tc, data);\n          },\n          shell: true\n        })\n      },\n      name: 'multiple-toolbar',\n      schema: [\n        required$1('dom'),\n        required$1('onEscape')\n      ]\n    });\n    const partToolbar = partType.optional({\n      factory: {\n        sketch: spec => {\n          const renderer = toolbarFactory(spec);\n          const toolbarSpec = {\n            type: spec.type,\n            uid: spec.uid,\n            onEscape: () => {\n              spec.onEscape();\n              return Optional.some(true);\n            },\n            cyclicKeying: false,\n            initGroups: [],\n            getSink: spec.getSink,\n            providers: spec.providers,\n            moreDrawerData: {\n              lazyToolbar: spec.lazyToolbar,\n              lazyMoreButton: spec.lazyMoreButton,\n              lazyHeader: spec.lazyHeader\n            },\n            attributes: spec.attributes\n          };\n          return renderer(toolbarSpec);\n        }\n      },\n      name: 'toolbar',\n      schema: [\n        required$1('dom'),\n        required$1('onEscape'),\n        required$1('getSink')\n      ]\n    });\n    const partHeader = partType.optional({\n      factory: { sketch: renderHeader },\n      name: 'header',\n      schema: [required$1('dom')]\n    });\n    const partPromotion = partType.optional({\n      factory: { sketch: renderPromotion },\n      name: 'promotion',\n      schema: [required$1('dom')]\n    });\n    const partSocket = partType.optional({\n      name: 'socket',\n      schema: [required$1('dom')]\n    });\n    const partSidebar = partType.optional({\n      factory: { sketch: renderSidebar },\n      name: 'sidebar',\n      schema: [required$1('dom')]\n    });\n    const partThrobber = partType.optional({\n      factory: { sketch: renderThrobber },\n      name: 'throbber',\n      schema: [required$1('dom')]\n    });\n    var OuterContainer = composite({\n      name: 'OuterContainer',\n      factory: factory$6,\n      configFields: [\n        required$1('dom'),\n        required$1('behaviours')\n      ],\n      partFields: [\n        partHeader,\n        partMenubar,\n        partToolbar,\n        partMultipleToolbar,\n        partSocket,\n        partSidebar,\n        partPromotion,\n        partThrobber\n      ],\n      apis: {\n        getSocket: (apis, comp) => {\n          return apis.getSocket(comp);\n        },\n        setSidebar: (apis, comp, panelConfigs, showSidebar) => {\n          apis.setSidebar(comp, panelConfigs, showSidebar);\n        },\n        toggleSidebar: (apis, comp, name) => {\n          apis.toggleSidebar(comp, name);\n        },\n        whichSidebar: (apis, comp) => {\n          return apis.whichSidebar(comp);\n        },\n        getHeader: (apis, comp) => {\n          return apis.getHeader(comp);\n        },\n        getToolbar: (apis, comp) => {\n          return apis.getToolbar(comp);\n        },\n        setToolbar: (apis, comp, groups) => {\n          apis.setToolbar(comp, groups);\n        },\n        setToolbars: (apis, comp, toolbars) => {\n          apis.setToolbars(comp, toolbars);\n        },\n        refreshToolbar: (apis, comp) => {\n          return apis.refreshToolbar(comp);\n        },\n        toggleToolbarDrawer: (apis, comp) => {\n          apis.toggleToolbarDrawer(comp);\n        },\n        isToolbarDrawerToggled: (apis, comp) => {\n          return apis.isToolbarDrawerToggled(comp);\n        },\n        getThrobber: (apis, comp) => {\n          return apis.getThrobber(comp);\n        },\n        setMenubar: (apis, comp, menus) => {\n          apis.setMenubar(comp, menus);\n        },\n        focusMenubar: (apis, comp) => {\n          apis.focusMenubar(comp);\n        },\n        focusToolbar: (apis, comp) => {\n          apis.focusToolbar(comp);\n        }\n      }\n    });\n\n    const defaultMenubar = 'file edit view insert format tools table help';\n    const defaultMenus = {\n      file: {\n        title: 'File',\n        items: 'newdocument restoredraft | preview | export print | deleteallconversations'\n      },\n      edit: {\n        title: 'Edit',\n        items: 'undo redo | cut copy paste pastetext | selectall | searchreplace'\n      },\n      view: {\n        title: 'View',\n        items: 'code | visualaid visualchars visualblocks | spellchecker | preview fullscreen | showcomments'\n      },\n      insert: {\n        title: 'Insert',\n        items: 'image link media addcomment pageembed template codesample inserttable | charmap emoticons hr | pagebreak nonbreaking anchor tableofcontents footnotes | mergetags | insertdatetime'\n      },\n      format: {\n        title: 'Format',\n        items: 'bold italic underline strikethrough superscript subscript codeformat | styles blocks fontfamily fontsize align lineheight | forecolor backcolor | language | removeformat'\n      },\n      tools: {\n        title: 'Tools',\n        items: 'spellchecker spellcheckerlanguage | autocorrect capitalization | a11ycheck code wordcount'\n      },\n      table: {\n        title: 'Table',\n        items: 'inserttable | cell row column | advtablesort | tableprops deletetable'\n      },\n      help: {\n        title: 'Help',\n        items: 'help'\n      }\n    };\n    const make = (menu, registry, editor) => {\n      const removedMenuItems = getRemovedMenuItems(editor).split(/[ ,]/);\n      return {\n        text: menu.title,\n        getItems: () => bind$3(menu.items, i => {\n          const itemName = i.toLowerCase();\n          if (itemName.trim().length === 0) {\n            return [];\n          } else if (exists(removedMenuItems, removedMenuItem => removedMenuItem === itemName)) {\n            return [];\n          } else if (itemName === 'separator' || itemName === '|') {\n            return [{ type: 'separator' }];\n          } else if (registry.menuItems[itemName]) {\n            return [registry.menuItems[itemName]];\n          } else {\n            return [];\n          }\n        })\n      };\n    };\n    const parseItemsString = items => {\n      return items.split(' ');\n    };\n    const identifyMenus = (editor, registry) => {\n      const rawMenuData = {\n        ...defaultMenus,\n        ...registry.menus\n      };\n      const userDefinedMenus = keys(registry.menus).length > 0;\n      const menubar = registry.menubar === undefined || registry.menubar === true ? parseItemsString(defaultMenubar) : parseItemsString(registry.menubar === false ? '' : registry.menubar);\n      const validMenus = filter$2(menubar, menuName => {\n        const isDefaultMenu = has$2(defaultMenus, menuName);\n        if (userDefinedMenus) {\n          return isDefaultMenu || get$g(registry.menus, menuName).exists(menu => has$2(menu, 'items'));\n        } else {\n          return isDefaultMenu;\n        }\n      });\n      const menus = map$2(validMenus, menuName => {\n        const menuData = rawMenuData[menuName];\n        return make({\n          title: menuData.title,\n          items: parseItemsString(menuData.items)\n        }, registry, editor);\n      });\n      return filter$2(menus, menu => {\n        const isNotSeparator = item => isString(item) || item.type !== 'separator';\n        return menu.getItems().length > 0 && exists(menu.getItems(), isNotSeparator);\n      });\n    };\n\n    const fireSkinLoaded = editor => {\n      const done = () => {\n        editor._skinLoaded = true;\n        fireSkinLoaded$1(editor);\n      };\n      return () => {\n        if (editor.initialized) {\n          done();\n        } else {\n          editor.on('init', done);\n        }\n      };\n    };\n    const fireSkinLoadError = (editor, err) => () => fireSkinLoadError$1(editor, { message: err });\n\n    const loadStylesheet = (editor, stylesheetUrl, styleSheetLoader) => {\n      editor.on('remove', () => styleSheetLoader.unload(stylesheetUrl));\n      return styleSheetLoader.load(stylesheetUrl);\n    };\n    const loadUiSkins = (editor, skinUrl) => {\n      const skinUiCss = skinUrl + '/skin.min.css';\n      return loadStylesheet(editor, skinUiCss, editor.ui.styleSheetLoader);\n    };\n    const loadShadowDomUiSkins = (editor, skinUrl) => {\n      const isInShadowRoot$1 = isInShadowRoot(SugarElement.fromDom(editor.getElement()));\n      if (isInShadowRoot$1) {\n        const shadowDomSkinCss = skinUrl + '/skin.shadowdom.min.css';\n        return loadStylesheet(editor, shadowDomSkinCss, global$7.DOM.styleSheetLoader);\n      } else {\n        return Promise.resolve();\n      }\n    };\n    const loadSkin = (isInline, editor) => {\n      const skinUrl = getSkinUrl(editor);\n      if (skinUrl) {\n        editor.contentCSS.push(skinUrl + (isInline ? '/content.inline' : '/content') + '.min.css');\n      }\n      if (!isSkinDisabled(editor) && isString(skinUrl)) {\n        Promise.all([\n          loadUiSkins(editor, skinUrl),\n          loadShadowDomUiSkins(editor, skinUrl)\n        ]).then(fireSkinLoaded(editor), fireSkinLoadError(editor, 'Skin could not be loaded'));\n      } else {\n        fireSkinLoaded(editor)();\n      }\n    };\n    const iframe = curry(loadSkin, false);\n    const inline = curry(loadSkin, true);\n\n    const onSetupFormatToggle = (editor, name) => api => {\n      const boundCallback = unbindable();\n      const init = () => {\n        api.setActive(editor.formatter.match(name));\n        const binding = editor.formatter.formatChanged(name, api.setActive);\n        boundCallback.set(binding);\n      };\n      editor.initialized ? init() : editor.once('init', init);\n      return () => {\n        editor.off('init', init);\n        boundCallback.clear();\n      };\n    };\n    const onSetupEvent = (editor, event, f) => api => {\n      const handleEvent = () => f(api);\n      const init = () => {\n        f(api);\n        editor.on(event, handleEvent);\n      };\n      editor.initialized ? init() : editor.once('init', init);\n      return () => {\n        editor.off('init', init);\n        editor.off(event, handleEvent);\n      };\n    };\n    const onActionToggleFormat$1 = editor => rawItem => () => {\n      editor.undoManager.transact(() => {\n        editor.focus();\n        editor.execCommand('mceToggleFormat', false, rawItem.format);\n      });\n    };\n    const onActionExecCommand = (editor, command) => () => editor.execCommand(command);\n\n    const generateSelectItems = (_editor, backstage, spec) => {\n      const generateItem = (rawItem, response, invalid, value) => {\n        const translatedText = backstage.shared.providers.translate(rawItem.title);\n        if (rawItem.type === 'separator') {\n          return Optional.some({\n            type: 'separator',\n            text: translatedText\n          });\n        } else if (rawItem.type === 'submenu') {\n          const items = bind$3(rawItem.getStyleItems(), si => validate(si, response, value));\n          if (response === 0 && items.length <= 0) {\n            return Optional.none();\n          } else {\n            return Optional.some({\n              type: 'nestedmenuitem',\n              text: translatedText,\n              enabled: items.length > 0,\n              getSubmenuItems: () => bind$3(rawItem.getStyleItems(), si => validate(si, response, value))\n            });\n          }\n        } else {\n          return Optional.some({\n            type: 'togglemenuitem',\n            text: translatedText,\n            icon: rawItem.icon,\n            active: rawItem.isSelected(value),\n            enabled: !invalid,\n            onAction: spec.onAction(rawItem),\n            ...rawItem.getStylePreview().fold(() => ({}), preview => ({ meta: { style: preview } }))\n          });\n        }\n      };\n      const validate = (item, response, value) => {\n        const invalid = item.type === 'formatter' && spec.isInvalid(item);\n        if (response === 0) {\n          return invalid ? [] : generateItem(item, response, false, value).toArray();\n        } else {\n          return generateItem(item, response, invalid, value).toArray();\n        }\n      };\n      const validateItems = preItems => {\n        const value = spec.getCurrentValue();\n        const response = spec.shouldHide ? 0 : 1;\n        return bind$3(preItems, item => validate(item, response, value));\n      };\n      const getFetch = (backstage, getStyleItems) => (comp, callback) => {\n        const preItems = getStyleItems();\n        const items = validateItems(preItems);\n        const menu = build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n          isHorizontalMenu: false,\n          search: Optional.none()\n        });\n        callback(menu);\n      };\n      return {\n        validateItems,\n        getFetch\n      };\n    };\n    const createMenuItems = (editor, backstage, spec) => {\n      const dataset = spec.dataset;\n      const getStyleItems = dataset.type === 'basic' ? () => map$2(dataset.data, d => processBasic(d, spec.isSelectedFor, spec.getPreviewFor)) : dataset.getData;\n      return {\n        items: generateSelectItems(editor, backstage, spec),\n        getStyleItems\n      };\n    };\n    const createSelectButton = (editor, backstage, spec) => {\n      const {items, getStyleItems} = createMenuItems(editor, backstage, spec);\n      const getApi = comp => ({ getComponent: constant$1(comp) });\n      const onSetup = onSetupEvent(editor, 'NodeChange', api => {\n        const comp = api.getComponent();\n        spec.updateText(comp);\n      });\n      return renderCommonDropdown({\n        text: spec.icon.isSome() ? Optional.none() : spec.text,\n        icon: spec.icon,\n        tooltip: Optional.from(spec.tooltip),\n        role: Optional.none(),\n        fetch: items.getFetch(backstage, getStyleItems),\n        onSetup,\n        getApi,\n        columns: 1,\n        presets: 'normal',\n        classes: spec.icon.isSome() ? [] : ['bespoke'],\n        dropdownBehaviours: []\n      }, 'tox-tbtn', backstage.shared);\n    };\n\n    const process = rawFormats => map$2(rawFormats, item => {\n      let title = item, format = item;\n      const values = item.split('=');\n      if (values.length > 1) {\n        title = values[0];\n        format = values[1];\n      }\n      return {\n        title,\n        format\n      };\n    });\n    const buildBasicStaticDataset = data => ({\n      type: 'basic',\n      data\n    });\n    var Delimiter;\n    (function (Delimiter) {\n      Delimiter[Delimiter['SemiColon'] = 0] = 'SemiColon';\n      Delimiter[Delimiter['Space'] = 1] = 'Space';\n    }(Delimiter || (Delimiter = {})));\n    const split = (rawFormats, delimiter) => {\n      if (delimiter === Delimiter.SemiColon) {\n        return rawFormats.replace(/;$/, '').split(';');\n      } else {\n        return rawFormats.split(' ');\n      }\n    };\n    const buildBasicSettingsDataset = (editor, settingName, delimiter) => {\n      const rawFormats = editor.options.get(settingName);\n      const data = process(split(rawFormats, delimiter));\n      return {\n        type: 'basic',\n        data\n      };\n    };\n\n    const alignMenuItems = [\n      {\n        title: 'Left',\n        icon: 'align-left',\n        format: 'alignleft',\n        command: 'JustifyLeft'\n      },\n      {\n        title: 'Center',\n        icon: 'align-center',\n        format: 'aligncenter',\n        command: 'JustifyCenter'\n      },\n      {\n        title: 'Right',\n        icon: 'align-right',\n        format: 'alignright',\n        command: 'JustifyRight'\n      },\n      {\n        title: 'Justify',\n        icon: 'align-justify',\n        format: 'alignjustify',\n        command: 'JustifyFull'\n      }\n    ];\n    const getSpec$4 = editor => {\n      const getMatchingValue = () => find$5(alignMenuItems, item => editor.formatter.match(item.format));\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = _format => Optional.none;\n      const updateSelectMenuIcon = comp => {\n        const match = getMatchingValue();\n        const alignment = match.fold(constant$1('left'), item => item.title.toLowerCase());\n        emitWith(comp, updateMenuIcon, { icon: `align-${ alignment }` });\n      };\n      const dataset = buildBasicStaticDataset(alignMenuItems);\n      const onAction = rawItem => () => find$5(alignMenuItems, item => item.format === rawItem.format).each(item => editor.execCommand(item.command));\n      return {\n        tooltip: 'Align',\n        text: Optional.none(),\n        icon: Optional.some('align-left'),\n        isSelectedFor,\n        getCurrentValue: Optional.none,\n        getPreviewFor,\n        onAction,\n        updateText: updateSelectMenuIcon,\n        dataset,\n        shouldHide: false,\n        isInvalid: item => !editor.formatter.canApply(item.format)\n      };\n    };\n    const createAlignButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$4(editor));\n    const createAlignMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$4(editor));\n      editor.ui.registry.addNestedMenuItem('align', {\n        text: backstage.shared.providers.translate('Align'),\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const findNearest = (editor, getStyles) => {\n      const styles = getStyles();\n      const formats = map$2(styles, style => style.format);\n      return Optional.from(editor.formatter.closest(formats)).bind(fmt => find$5(styles, data => data.format === fmt)).orThunk(() => someIf(editor.formatter.match('p'), {\n        title: 'Paragraph',\n        format: 'p'\n      }));\n    };\n\n    const getSpec$3 = editor => {\n      const fallbackFormat = 'Paragraph';\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = format => () => {\n        const fmt = editor.formatter.get(format);\n        if (fmt) {\n          return Optional.some({\n            tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n            styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n          });\n        } else {\n          return Optional.none();\n        }\n      };\n      const updateSelectMenuText = comp => {\n        const detectedFormat = findNearest(editor, () => dataset.data);\n        const text = detectedFormat.fold(constant$1(fallbackFormat), fmt => fmt.title);\n        emitWith(comp, updateMenuText, { text });\n      };\n      const dataset = buildBasicSettingsDataset(editor, 'block_formats', Delimiter.SemiColon);\n      return {\n        tooltip: 'Blocks',\n        text: Optional.some(fallbackFormat),\n        icon: Optional.none(),\n        isSelectedFor,\n        getCurrentValue: Optional.none,\n        getPreviewFor,\n        onAction: onActionToggleFormat$1(editor),\n        updateText: updateSelectMenuText,\n        dataset,\n        shouldHide: false,\n        isInvalid: item => !editor.formatter.canApply(item.format)\n      };\n    };\n    const createBlocksButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$3(editor));\n    const createBlocksMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$3(editor));\n      editor.ui.registry.addNestedMenuItem('blocks', {\n        text: 'Blocks',\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const systemStackFonts = [\n      '-apple-system',\n      'Segoe UI',\n      'Roboto',\n      'Helvetica Neue',\n      'sans-serif'\n    ];\n    const splitFonts = fontFamily => {\n      const fonts = fontFamily.split(/\\s*,\\s*/);\n      return map$2(fonts, font => font.replace(/^['\"]+|['\"]+$/g, ''));\n    };\n    const isSystemFontStack = fontFamily => {\n      const matchesSystemStack = () => {\n        const fonts = splitFonts(fontFamily.toLowerCase());\n        return forall(systemStackFonts, font => fonts.indexOf(font.toLowerCase()) > -1);\n      };\n      return fontFamily.indexOf('-apple-system') === 0 && matchesSystemStack();\n    };\n    const getSpec$2 = editor => {\n      const systemFont = 'System Font';\n      const getMatchingValue = () => {\n        const getFirstFont = fontFamily => fontFamily ? splitFonts(fontFamily)[0] : '';\n        const fontFamily = editor.queryCommandValue('FontName');\n        const items = dataset.data;\n        const font = fontFamily ? fontFamily.toLowerCase() : '';\n        const matchOpt = find$5(items, item => {\n          const format = item.format;\n          return format.toLowerCase() === font || getFirstFont(format).toLowerCase() === getFirstFont(font).toLowerCase();\n        }).orThunk(() => {\n          return someIf(isSystemFontStack(font), {\n            title: systemFont,\n            format: font\n          });\n        });\n        return {\n          matchOpt,\n          font: fontFamily\n        };\n      };\n      const isSelectedFor = item => valueOpt => valueOpt.exists(value => value.format === item);\n      const getCurrentValue = () => {\n        const {matchOpt} = getMatchingValue();\n        return matchOpt;\n      };\n      const getPreviewFor = item => () => Optional.some({\n        tag: 'div',\n        styles: item.indexOf('dings') === -1 ? { 'font-family': item } : {}\n      });\n      const onAction = rawItem => () => {\n        editor.undoManager.transact(() => {\n          editor.focus();\n          editor.execCommand('FontName', false, rawItem.format);\n        });\n      };\n      const updateSelectMenuText = comp => {\n        const {matchOpt, font} = getMatchingValue();\n        const text = matchOpt.fold(constant$1(font), item => item.title);\n        emitWith(comp, updateMenuText, { text });\n      };\n      const dataset = buildBasicSettingsDataset(editor, 'font_family_formats', Delimiter.SemiColon);\n      return {\n        tooltip: 'Fonts',\n        text: Optional.some(systemFont),\n        icon: Optional.none(),\n        isSelectedFor,\n        getCurrentValue,\n        getPreviewFor,\n        onAction,\n        updateText: updateSelectMenuText,\n        dataset,\n        shouldHide: false,\n        isInvalid: never\n      };\n    };\n    const createFontFamilyButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$2(editor));\n    const createFontFamilyMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$2(editor));\n      editor.ui.registry.addNestedMenuItem('fontfamily', {\n        text: backstage.shared.providers.translate('Fonts'),\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const legacyFontSizes = {\n      '8pt': '1',\n      '10pt': '2',\n      '12pt': '3',\n      '14pt': '4',\n      '18pt': '5',\n      '24pt': '6',\n      '36pt': '7'\n    };\n    const keywordFontSizes = {\n      'xx-small': '7pt',\n      'x-small': '8pt',\n      'small': '10pt',\n      'medium': '12pt',\n      'large': '14pt',\n      'x-large': '18pt',\n      'xx-large': '24pt'\n    };\n    const round = (number, precision) => {\n      const factor = Math.pow(10, precision);\n      return Math.round(number * factor) / factor;\n    };\n    const toPt = (fontSize, precision) => {\n      if (/[0-9.]+px$/.test(fontSize)) {\n        return round(parseInt(fontSize, 10) * 72 / 96, precision || 0) + 'pt';\n      } else {\n        return get$g(keywordFontSizes, fontSize).getOr(fontSize);\n      }\n    };\n    const toLegacy = fontSize => get$g(legacyFontSizes, fontSize).getOr('');\n    const getSpec$1 = editor => {\n      const getMatchingValue = () => {\n        let matchOpt = Optional.none();\n        const items = dataset.data;\n        const fontSize = editor.queryCommandValue('FontSize');\n        if (fontSize) {\n          for (let precision = 3; matchOpt.isNone() && precision >= 0; precision--) {\n            const pt = toPt(fontSize, precision);\n            const legacy = toLegacy(pt);\n            matchOpt = find$5(items, item => item.format === fontSize || item.format === pt || item.format === legacy);\n          }\n        }\n        return {\n          matchOpt,\n          size: fontSize\n        };\n      };\n      const isSelectedFor = item => valueOpt => valueOpt.exists(value => value.format === item);\n      const getCurrentValue = () => {\n        const {matchOpt} = getMatchingValue();\n        return matchOpt;\n      };\n      const getPreviewFor = constant$1(Optional.none);\n      const onAction = rawItem => () => {\n        editor.undoManager.transact(() => {\n          editor.focus();\n          editor.execCommand('FontSize', false, rawItem.format);\n        });\n      };\n      const updateSelectMenuText = comp => {\n        const {matchOpt, size} = getMatchingValue();\n        const text = matchOpt.fold(constant$1(size), match => match.title);\n        emitWith(comp, updateMenuText, { text });\n      };\n      const dataset = buildBasicSettingsDataset(editor, 'font_size_formats', Delimiter.Space);\n      return {\n        tooltip: 'Font sizes',\n        text: Optional.some('12pt'),\n        icon: Optional.none(),\n        isSelectedFor,\n        getPreviewFor,\n        getCurrentValue,\n        onAction,\n        updateText: updateSelectMenuText,\n        dataset,\n        shouldHide: false,\n        isInvalid: never\n      };\n    };\n    const createFontSizeButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$1(editor));\n    const createFontSizeMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$1(editor));\n      editor.ui.registry.addNestedMenuItem('fontsize', {\n        text: 'Font sizes',\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const getSpec = (editor, dataset) => {\n      const fallbackFormat = 'Paragraph';\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = format => () => {\n        const fmt = editor.formatter.get(format);\n        return fmt !== undefined ? Optional.some({\n          tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n          styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n        }) : Optional.none();\n      };\n      const updateSelectMenuText = comp => {\n        const getFormatItems = fmt => {\n          if (isNestedFormat(fmt)) {\n            return bind$3(fmt.items, getFormatItems);\n          } else if (isFormatReference(fmt)) {\n            return [{\n                title: fmt.title,\n                format: fmt.format\n              }];\n          } else {\n            return [];\n          }\n        };\n        const flattenedItems = bind$3(getStyleFormats(editor), getFormatItems);\n        const detectedFormat = findNearest(editor, constant$1(flattenedItems));\n        const text = detectedFormat.fold(constant$1(fallbackFormat), fmt => fmt.title);\n        emitWith(comp, updateMenuText, { text });\n      };\n      return {\n        tooltip: 'Formats',\n        text: Optional.some(fallbackFormat),\n        icon: Optional.none(),\n        isSelectedFor,\n        getCurrentValue: Optional.none,\n        getPreviewFor,\n        onAction: onActionToggleFormat$1(editor),\n        updateText: updateSelectMenuText,\n        shouldHide: shouldAutoHideStyleFormats(editor),\n        isInvalid: item => !editor.formatter.canApply(item.format),\n        dataset\n      };\n    };\n    const createStylesButton = (editor, backstage) => {\n      const dataset = {\n        type: 'advanced',\n        ...backstage.styles\n      };\n      return createSelectButton(editor, backstage, getSpec(editor, dataset));\n    };\n    const createStylesMenu = (editor, backstage) => {\n      const dataset = {\n        type: 'advanced',\n        ...backstage.styles\n      };\n      const menuItems = createMenuItems(editor, backstage, getSpec(editor, dataset));\n      editor.ui.registry.addNestedMenuItem('styles', {\n        text: 'Formats',\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const events$3 = (reflectingConfig, reflectingState) => {\n      const update = (component, data) => {\n        reflectingConfig.updateState.each(updateState => {\n          const newState = updateState(component, data);\n          reflectingState.set(newState);\n        });\n        reflectingConfig.renderComponents.each(renderComponents => {\n          const newComponents = renderComponents(data, reflectingState.get());\n          const replacer = reflectingConfig.reuseDom ? withReuse : withoutReuse;\n          replacer(component, newComponents);\n        });\n      };\n      return derive$2([\n        run$1(receive(), (component, message) => {\n          const receivingData = message;\n          if (!receivingData.universal) {\n            const channel = reflectingConfig.channel;\n            if (contains$2(receivingData.channels, channel)) {\n              update(component, receivingData.data);\n            }\n          }\n        }),\n        runOnAttached((comp, _se) => {\n          reflectingConfig.initialData.each(rawData => {\n            update(comp, rawData);\n          });\n        })\n      ]);\n    };\n\n    var ActiveReflecting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$3\n    });\n\n    const getState = (component, replaceConfig, reflectState) => reflectState;\n\n    var ReflectingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getState: getState\n    });\n\n    var ReflectingSchema = [\n      required$1('channel'),\n      option$3('renderComponents'),\n      option$3('updateState'),\n      option$3('initialData'),\n      defaultedBoolean('reuseDom', true)\n    ];\n\n    const init$3 = () => {\n      const cell = Cell(Optional.none());\n      const clear = () => cell.set(Optional.none());\n      const readState = () => cell.get().getOr('none');\n      return {\n        readState,\n        get: cell.get,\n        set: cell.set,\n        clear\n      };\n    };\n\n    var ReflectingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$3\n    });\n\n    const Reflecting = create$3({\n      fields: ReflectingSchema,\n      name: 'reflecting',\n      active: ActiveReflecting,\n      apis: ReflectingApis,\n      state: ReflectingState\n    });\n\n    const schema$7 = constant$1([\n      required$1('toggleClass'),\n      required$1('fetch'),\n      onStrictHandler('onExecute'),\n      defaulted('getHotspot', Optional.some),\n      defaulted('getAnchorOverrides', constant$1({})),\n      schema$y(),\n      onStrictHandler('onItemExecute'),\n      option$3('lazySink'),\n      required$1('dom'),\n      onHandler('onOpen'),\n      field('splitDropdownBehaviours', [\n        Coupling,\n        Keying,\n        Focusing\n      ]),\n      defaulted('matchWidth', false),\n      defaulted('useMinWidth', false),\n      defaulted('eventOrder', {}),\n      option$3('role')\n    ].concat(sandboxFields()));\n    const arrowPart = required({\n      factory: Button,\n      schema: [required$1('dom')],\n      name: 'arrow',\n      defaults: () => {\n        return { buttonBehaviours: derive$1([Focusing.revoke()]) };\n      },\n      overrides: detail => {\n        return {\n          dom: {\n            tag: 'span',\n            attributes: { role: 'presentation' }\n          },\n          action: arrow => {\n            arrow.getSystem().getByUid(detail.uid).each(emitExecute);\n          },\n          buttonBehaviours: derive$1([Toggling.config({\n              toggleOnExecute: false,\n              toggleClass: detail.toggleClass\n            })])\n        };\n      }\n    });\n    const buttonPart = required({\n      factory: Button,\n      schema: [required$1('dom')],\n      name: 'button',\n      defaults: () => {\n        return { buttonBehaviours: derive$1([Focusing.revoke()]) };\n      },\n      overrides: detail => {\n        return {\n          dom: {\n            tag: 'span',\n            attributes: { role: 'presentation' }\n          },\n          action: btn => {\n            btn.getSystem().getByUid(detail.uid).each(splitDropdown => {\n              detail.onExecute(splitDropdown, btn);\n            });\n          }\n        };\n      }\n    });\n    const parts$3 = constant$1([\n      arrowPart,\n      buttonPart,\n      optional({\n        factory: {\n          sketch: spec => {\n            return {\n              uid: spec.uid,\n              dom: {\n                tag: 'span',\n                styles: { display: 'none' },\n                attributes: { 'aria-hidden': 'true' },\n                innerHtml: spec.text\n              }\n            };\n          }\n        },\n        schema: [required$1('text')],\n        name: 'aria-descriptor'\n      }),\n      external({\n        schema: [tieredMenuMarkers()],\n        name: 'menu',\n        defaults: detail => {\n          return {\n            onExecute: (tmenu, item) => {\n              tmenu.getSystem().getByUid(detail.uid).each(splitDropdown => {\n                detail.onItemExecute(splitDropdown, tmenu, item);\n              });\n            }\n          };\n        }\n      }),\n      partType$1()\n    ]);\n\n    const factory$5 = (detail, components, spec, externals) => {\n      const switchToMenu = sandbox => {\n        Composing.getCurrent(sandbox).each(current => {\n          Highlighting.highlightFirst(current);\n          Keying.focusIn(current);\n        });\n      };\n      const action = component => {\n        const onOpenSync = switchToMenu;\n        togglePopup(detail, identity, component, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n      };\n      const openMenu = comp => {\n        action(comp);\n        return Optional.some(true);\n      };\n      const executeOnButton = comp => {\n        const button = getPartOrDie(comp, detail, 'button');\n        emitExecute(button);\n        return Optional.some(true);\n      };\n      const buttonEvents = {\n        ...derive$2([runOnAttached((component, _simulatedEvent) => {\n            const ariaDescriptor = getPart(component, detail, 'aria-descriptor');\n            ariaDescriptor.each(descriptor => {\n              const descriptorId = generate$6('aria');\n              set$9(descriptor.element, 'id', descriptorId);\n              set$9(component.element, 'aria-describedby', descriptorId);\n            });\n          })]),\n        ...events$a(Optional.some(action))\n      };\n      const apis = {\n        repositionMenus: comp => {\n          if (Toggling.isOn(comp)) {\n            repositionMenus(comp);\n          }\n        }\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        apis,\n        eventOrder: {\n          ...detail.eventOrder,\n          [execute$5()]: [\n            'disabling',\n            'toggling',\n            'alloy.base.behaviour'\n          ]\n        },\n        events: buttonEvents,\n        behaviours: augment(detail.splitDropdownBehaviours, [\n          Coupling.config({\n            others: {\n              sandbox: hotspot => {\n                const arrow = getPartOrDie(hotspot, detail, 'arrow');\n                const extras = {\n                  onOpen: () => {\n                    Toggling.on(arrow);\n                    Toggling.on(hotspot);\n                  },\n                  onClose: () => {\n                    Toggling.off(arrow);\n                    Toggling.off(hotspot);\n                  }\n                };\n                return makeSandbox$1(detail, hotspot, extras);\n              }\n            }\n          }),\n          Keying.config({\n            mode: 'special',\n            onSpace: executeOnButton,\n            onEnter: executeOnButton,\n            onDown: openMenu\n          }),\n          Focusing.config({}),\n          Toggling.config({\n            toggleOnExecute: false,\n            aria: { mode: 'expanded' }\n          })\n        ]),\n        domModification: {\n          attributes: {\n            'role': detail.role.getOr('button'),\n            'aria-haspopup': true\n          }\n        }\n      };\n    };\n    const SplitDropdown = composite({\n      name: 'SplitDropdown',\n      configFields: schema$7(),\n      partFields: parts$3(),\n      factory: factory$5,\n      apis: { repositionMenus: (apis, comp) => apis.repositionMenus(comp) }\n    });\n\n    const getButtonApi = component => ({\n      isEnabled: () => !Disabling.isDisabled(component),\n      setEnabled: state => Disabling.set(component, !state)\n    });\n    const getToggleApi = component => ({\n      setActive: state => {\n        Toggling.set(component, state);\n      },\n      isActive: () => Toggling.isOn(component),\n      isEnabled: () => !Disabling.isDisabled(component),\n      setEnabled: state => Disabling.set(component, !state)\n    });\n    const getTooltipAttributes = (tooltip, providersBackstage) => tooltip.map(tooltip => ({\n      'aria-label': providersBackstage.translate(tooltip),\n      'title': providersBackstage.translate(tooltip)\n    })).getOr({});\n    const focusButtonEvent = generate$6('focus-button');\n    const renderCommonStructure = (icon, text, tooltip, receiver, behaviours, providersBackstage) => {\n      return {\n        dom: {\n          tag: 'button',\n          classes: ['tox-tbtn'].concat(text.isSome() ? ['tox-tbtn--select'] : []),\n          attributes: getTooltipAttributes(tooltip, providersBackstage)\n        },\n        components: componentRenderPipeline([\n          icon.map(iconName => renderIconFromPack(iconName, providersBackstage.icons)),\n          text.map(text => renderLabel(text, 'tox-tbtn', providersBackstage))\n        ]),\n        eventOrder: {\n          [mousedown()]: [\n            'focusing',\n            'alloy.base.behaviour',\n            'common-button-display-events'\n          ]\n        },\n        buttonBehaviours: derive$1([\n          DisablingConfigs.toolbarButton(providersBackstage.isDisabled),\n          receivingConfig(),\n          config('common-button-display-events', [run$1(mousedown(), (button, se) => {\n              se.event.prevent();\n              emit(button, focusButtonEvent);\n            })])\n        ].concat(receiver.map(r => Reflecting.config({\n          channel: r,\n          initialData: {\n            icon,\n            text\n          },\n          renderComponents: (data, _state) => componentRenderPipeline([\n            data.icon.map(iconName => renderIconFromPack(iconName, providersBackstage.icons)),\n            data.text.map(text => renderLabel(text, 'tox-tbtn', providersBackstage))\n          ])\n        })).toArray()).concat(behaviours.getOr([])))\n      };\n    };\n    const renderFloatingToolbarButton = (spec, backstage, identifyButtons, attributes) => {\n      const sharedBackstage = backstage.shared;\n      return FloatingToolbarButton.sketch({\n        lazySink: sharedBackstage.getSink,\n        fetch: () => Future.nu(resolve => {\n          resolve(map$2(identifyButtons(spec.items), renderToolbarGroup));\n        }),\n        markers: { toggledClass: 'tox-tbtn--enabled' },\n        parts: {\n          button: renderCommonStructure(spec.icon, spec.text, spec.tooltip, Optional.none(), Optional.none(), sharedBackstage.providers),\n          toolbar: {\n            dom: {\n              tag: 'div',\n              classes: ['tox-toolbar__overflow'],\n              attributes\n            }\n          }\n        }\n      });\n    };\n    const renderCommonToolbarButton = (spec, specialisation, providersBackstage) => {\n      const editorOffCell = Cell(noop);\n      const structure = renderCommonStructure(spec.icon, spec.text, spec.tooltip, Optional.none(), Optional.none(), providersBackstage);\n      return Button.sketch({\n        dom: structure.dom,\n        components: structure.components,\n        eventOrder: toolbarButtonEventOrder,\n        buttonBehaviours: derive$1([\n          config('toolbar-button-events', [\n            onToolbarButtonExecute({\n              onAction: spec.onAction,\n              getApi: specialisation.getApi\n            }),\n            onControlAttached(specialisation, editorOffCell),\n            onControlDetached(specialisation, editorOffCell)\n          ]),\n          DisablingConfigs.toolbarButton(() => !spec.enabled || providersBackstage.isDisabled()),\n          receivingConfig()\n        ].concat(specialisation.toolbarButtonBehaviours))\n      });\n    };\n    const renderToolbarButton = (spec, providersBackstage) => renderToolbarButtonWith(spec, providersBackstage, []);\n    const renderToolbarButtonWith = (spec, providersBackstage, bonusEvents) => renderCommonToolbarButton(spec, {\n      toolbarButtonBehaviours: bonusEvents.length > 0 ? [config('toolbarButtonWith', bonusEvents)] : [],\n      getApi: getButtonApi,\n      onSetup: spec.onSetup\n    }, providersBackstage);\n    const renderToolbarToggleButton = (spec, providersBackstage) => renderToolbarToggleButtonWith(spec, providersBackstage, []);\n    const renderToolbarToggleButtonWith = (spec, providersBackstage, bonusEvents) => renderCommonToolbarButton(spec, {\n      toolbarButtonBehaviours: [\n        Replacing.config({}),\n        Toggling.config({\n          toggleClass: 'tox-tbtn--enabled',\n          aria: { mode: 'pressed' },\n          toggleOnExecute: false\n        })\n      ].concat(bonusEvents.length > 0 ? [config('toolbarToggleButtonWith', bonusEvents)] : []),\n      getApi: getToggleApi,\n      onSetup: spec.onSetup\n    }, providersBackstage);\n    const fetchChoices = (getApi, spec, providersBackstage) => comp => Future.nu(callback => spec.fetch(callback)).map(items => Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'), items, value => {\n      spec.onItemAction(getApi(comp), value);\n    }, spec.columns, spec.presets, ItemResponse$1.CLOSE_ON_EXECUTE, spec.select.getOr(never), providersBackstage), {\n      movement: deriveMenuMovement(spec.columns, spec.presets),\n      menuBehaviours: SimpleBehaviours.unnamedEvents(spec.columns !== 'auto' ? [] : [runOnAttached((comp, _se) => {\n          detectSize(comp, 4, classForPreset(spec.presets)).each(({numRows, numColumns}) => {\n            Keying.setGridSize(comp, numRows, numColumns);\n          });\n        })])\n    }))));\n    const renderSplitButton = (spec, sharedBackstage) => {\n      const displayChannel = generate$6('channel-update-split-dropdown-display');\n      const getApi = comp => ({\n        isEnabled: () => !Disabling.isDisabled(comp),\n        setEnabled: state => Disabling.set(comp, !state),\n        setIconFill: (id, value) => {\n          descendant(comp.element, 'svg path[id=\"' + id + '\"], rect[id=\"' + id + '\"]').each(underlinePath => {\n            set$9(underlinePath, 'fill', value);\n          });\n        },\n        setActive: state => {\n          set$9(comp.element, 'aria-pressed', state);\n          descendant(comp.element, 'span').each(button => {\n            comp.getSystem().getByDom(button).each(buttonComp => Toggling.set(buttonComp, state));\n          });\n        },\n        isActive: () => descendant(comp.element, 'span').exists(button => comp.getSystem().getByDom(button).exists(Toggling.isOn))\n      });\n      const editorOffCell = Cell(noop);\n      const specialisation = {\n        getApi,\n        onSetup: spec.onSetup\n      };\n      return SplitDropdown.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-split-button'],\n          attributes: {\n            'aria-pressed': false,\n            ...getTooltipAttributes(spec.tooltip, sharedBackstage.providers)\n          }\n        },\n        onExecute: button => {\n          spec.onAction(getApi(button));\n        },\n        onItemExecute: (_a, _b, _c) => {\n        },\n        splitDropdownBehaviours: derive$1([\n          DisablingConfigs.splitButton(sharedBackstage.providers.isDisabled),\n          receivingConfig(),\n          config('split-dropdown-events', [\n            run$1(focusButtonEvent, Focusing.focus),\n            onControlAttached(specialisation, editorOffCell),\n            onControlDetached(specialisation, editorOffCell)\n          ]),\n          Unselecting.config({})\n        ]),\n        eventOrder: {\n          [attachedToDom()]: [\n            'alloy.base.behaviour',\n            'split-dropdown-events'\n          ]\n        },\n        toggleClass: 'tox-tbtn--enabled',\n        lazySink: sharedBackstage.getSink,\n        fetch: fetchChoices(getApi, spec, sharedBackstage.providers),\n        parts: { menu: part(false, spec.columns, spec.presets) },\n        components: [\n          SplitDropdown.parts.button(renderCommonStructure(spec.icon, spec.text, Optional.none(), Optional.some(displayChannel), Optional.some([Toggling.config({\n              toggleClass: 'tox-tbtn--enabled',\n              toggleOnExecute: false\n            })]), sharedBackstage.providers)),\n          SplitDropdown.parts.arrow({\n            dom: {\n              tag: 'button',\n              classes: [\n                'tox-tbtn',\n                'tox-split-button__chevron'\n              ],\n              innerHtml: get$2('chevron-down', sharedBackstage.providers.icons)\n            },\n            buttonBehaviours: derive$1([\n              DisablingConfigs.splitButton(sharedBackstage.providers.isDisabled),\n              receivingConfig(),\n              addFocusableBehaviour()\n            ])\n          }),\n          SplitDropdown.parts['aria-descriptor']({ text: sharedBackstage.providers.translate('To open the popup, press Shift+Enter') })\n        ]\n      });\n    };\n\n    const defaultToolbar = [\n      {\n        name: 'history',\n        items: [\n          'undo',\n          'redo'\n        ]\n      },\n      {\n        name: 'styles',\n        items: ['styles']\n      },\n      {\n        name: 'formatting',\n        items: [\n          'bold',\n          'italic'\n        ]\n      },\n      {\n        name: 'alignment',\n        items: [\n          'alignleft',\n          'aligncenter',\n          'alignright',\n          'alignjustify'\n        ]\n      },\n      {\n        name: 'indentation',\n        items: [\n          'outdent',\n          'indent'\n        ]\n      },\n      {\n        name: 'permanent pen',\n        items: ['permanentpen']\n      },\n      {\n        name: 'comments',\n        items: ['addcomment']\n      }\n    ];\n    const renderFromBridge = (bridgeBuilder, render) => (spec, backstage, editor) => {\n      const internal = bridgeBuilder(spec).mapError(errInfo => formatError(errInfo)).getOrDie();\n      return render(internal, backstage, editor);\n    };\n    const types = {\n      button: renderFromBridge(createToolbarButton, (s, backstage) => renderToolbarButton(s, backstage.shared.providers)),\n      togglebutton: renderFromBridge(createToggleButton, (s, backstage) => renderToolbarToggleButton(s, backstage.shared.providers)),\n      menubutton: renderFromBridge(createMenuButton, (s, backstage) => renderMenuButton(s, 'tox-tbtn', backstage, Optional.none())),\n      splitbutton: renderFromBridge(createSplitButton, (s, backstage) => renderSplitButton(s, backstage.shared)),\n      grouptoolbarbutton: renderFromBridge(createGroupToolbarButton, (s, backstage, editor) => {\n        const buttons = editor.ui.registry.getAll().buttons;\n        const identify = toolbar => identifyButtons(editor, {\n          buttons,\n          toolbar,\n          allowToolbarGroups: false\n        }, backstage, Optional.none());\n        const attributes = { [Attribute]: backstage.shared.header.isPositionedAtTop() ? AttributeValue.TopToBottom : AttributeValue.BottomToTop };\n        switch (getToolbarMode(editor)) {\n        case ToolbarMode$1.floating:\n          return renderFloatingToolbarButton(s, backstage, identify, attributes);\n        default:\n          throw new Error('Toolbar groups are only supported when using floating toolbar mode');\n        }\n      })\n    };\n    const extractFrom = (spec, backstage, editor) => get$g(types, spec.type).fold(() => {\n      console.error('skipping button defined by', spec);\n      return Optional.none();\n    }, render => Optional.some(render(spec, backstage, editor)));\n    const bespokeButtons = {\n      styles: createStylesButton,\n      fontsize: createFontSizeButton,\n      fontfamily: createFontFamilyButton,\n      blocks: createBlocksButton,\n      align: createAlignButton\n    };\n    const removeUnusedDefaults = buttons => {\n      const filteredItemGroups = map$2(defaultToolbar, group => {\n        const items = filter$2(group.items, subItem => has$2(buttons, subItem) || has$2(bespokeButtons, subItem));\n        return {\n          name: group.name,\n          items\n        };\n      });\n      return filter$2(filteredItemGroups, group => group.items.length > 0);\n    };\n    const convertStringToolbar = strToolbar => {\n      const groupsStrings = strToolbar.split('|');\n      return map$2(groupsStrings, g => ({ items: g.trim().split(' ') }));\n    };\n    const isToolbarGroupSettingArray = toolbar => isArrayOf(toolbar, t => has$2(t, 'name') && has$2(t, 'items'));\n    const createToolbar = toolbarConfig => {\n      const toolbar = toolbarConfig.toolbar;\n      const buttons = toolbarConfig.buttons;\n      if (toolbar === false) {\n        return [];\n      } else if (toolbar === undefined || toolbar === true) {\n        return removeUnusedDefaults(buttons);\n      } else if (isString(toolbar)) {\n        return convertStringToolbar(toolbar);\n      } else if (isToolbarGroupSettingArray(toolbar)) {\n        return toolbar;\n      } else {\n        console.error('Toolbar type should be string, string[], boolean or ToolbarGroup[]');\n        return [];\n      }\n    };\n    const lookupButton = (editor, buttons, toolbarItem, allowToolbarGroups, backstage, prefixes) => get$g(buttons, toolbarItem.toLowerCase()).orThunk(() => prefixes.bind(ps => findMap(ps, prefix => get$g(buttons, prefix + toolbarItem.toLowerCase())))).fold(() => get$g(bespokeButtons, toolbarItem.toLowerCase()).map(r => r(editor, backstage)), spec => {\n      if (spec.type === 'grouptoolbarbutton' && !allowToolbarGroups) {\n        console.warn(`Ignoring the '${ toolbarItem }' toolbar button. Group toolbar buttons are only supported when using floating toolbar mode and cannot be nested.`);\n        return Optional.none();\n      } else {\n        return extractFrom(spec, backstage, editor);\n      }\n    });\n    const identifyButtons = (editor, toolbarConfig, backstage, prefixes) => {\n      const toolbarGroups = createToolbar(toolbarConfig);\n      const groups = map$2(toolbarGroups, group => {\n        const items = bind$3(group.items, toolbarItem => {\n          return toolbarItem.trim().length === 0 ? [] : lookupButton(editor, toolbarConfig.buttons, toolbarItem, toolbarConfig.allowToolbarGroups, backstage, prefixes).toArray();\n        });\n        return {\n          title: Optional.from(editor.translate(group.name)),\n          items\n        };\n      });\n      return filter$2(groups, group => group.items.length > 0);\n    };\n\n    const setToolbar = (editor, uiComponents, rawUiConfig, backstage) => {\n      const comp = uiComponents.outerContainer;\n      const toolbarConfig = rawUiConfig.toolbar;\n      const toolbarButtonsConfig = rawUiConfig.buttons;\n      if (isArrayOf(toolbarConfig, isString)) {\n        const toolbars = toolbarConfig.map(t => {\n          const config = {\n            toolbar: t,\n            buttons: toolbarButtonsConfig,\n            allowToolbarGroups: rawUiConfig.allowToolbarGroups\n          };\n          return identifyButtons(editor, config, backstage, Optional.none());\n        });\n        OuterContainer.setToolbars(comp, toolbars);\n      } else {\n        OuterContainer.setToolbar(comp, identifyButtons(editor, rawUiConfig, backstage, Optional.none()));\n      }\n    };\n\n    const detection = detect$1();\n    const isiOS12 = detection.os.isiOS() && detection.os.version.major <= 12;\n    const setupEvents$1 = (editor, uiComponents) => {\n      const dom = editor.dom;\n      let contentWindow = editor.getWin();\n      const initialDocEle = editor.getDoc().documentElement;\n      const lastWindowDimensions = Cell(SugarPosition(contentWindow.innerWidth, contentWindow.innerHeight));\n      const lastDocumentDimensions = Cell(SugarPosition(initialDocEle.offsetWidth, initialDocEle.offsetHeight));\n      const resizeWindow = () => {\n        const outer = lastWindowDimensions.get();\n        if (outer.left !== contentWindow.innerWidth || outer.top !== contentWindow.innerHeight) {\n          lastWindowDimensions.set(SugarPosition(contentWindow.innerWidth, contentWindow.innerHeight));\n          fireResizeContent(editor);\n        }\n      };\n      const resizeDocument = () => {\n        const docEle = editor.getDoc().documentElement;\n        const inner = lastDocumentDimensions.get();\n        if (inner.left !== docEle.offsetWidth || inner.top !== docEle.offsetHeight) {\n          lastDocumentDimensions.set(SugarPosition(docEle.offsetWidth, docEle.offsetHeight));\n          fireResizeContent(editor);\n        }\n      };\n      const scroll = e => {\n        fireScrollContent(editor, e);\n      };\n      dom.bind(contentWindow, 'resize', resizeWindow);\n      dom.bind(contentWindow, 'scroll', scroll);\n      const elementLoad = capture(SugarElement.fromDom(editor.getBody()), 'load', resizeDocument);\n      const mothership = uiComponents.uiMothership.element;\n      editor.on('hide', () => {\n        set$8(mothership, 'display', 'none');\n      });\n      editor.on('show', () => {\n        remove$6(mothership, 'display');\n      });\n      editor.on('NodeChange', resizeDocument);\n      editor.on('remove', () => {\n        elementLoad.unbind();\n        dom.unbind(contentWindow, 'resize', resizeWindow);\n        dom.unbind(contentWindow, 'scroll', scroll);\n        contentWindow = null;\n      });\n    };\n    const render$1 = (editor, uiComponents, rawUiConfig, backstage, args) => {\n      const lastToolbarWidth = Cell(0);\n      const outerContainer = uiComponents.outerContainer;\n      iframe(editor);\n      const eTargetNode = SugarElement.fromDom(args.targetNode);\n      const uiRoot = getContentContainer(getRootNode(eTargetNode));\n      attachSystemAfter(eTargetNode, uiComponents.mothership);\n      attachSystem(uiRoot, uiComponents.uiMothership);\n      editor.on('PostRender', () => {\n        OuterContainer.setSidebar(outerContainer, rawUiConfig.sidebar, getSidebarShow(editor));\n        setToolbar(editor, uiComponents, rawUiConfig, backstage);\n        lastToolbarWidth.set(editor.getWin().innerWidth);\n        OuterContainer.setMenubar(outerContainer, identifyMenus(editor, rawUiConfig));\n        setupEvents$1(editor, uiComponents);\n      });\n      const socket = OuterContainer.getSocket(outerContainer).getOrDie('Could not find expected socket element');\n      if (isiOS12) {\n        setAll(socket.element, {\n          'overflow': 'scroll',\n          '-webkit-overflow-scrolling': 'touch'\n        });\n        const limit = first(() => {\n          editor.dispatch('ScrollContent');\n        }, 20);\n        const unbinder = bind(socket.element, 'scroll', limit.throttle);\n        editor.on('remove', unbinder.unbind);\n      }\n      setupReadonlyModeSwitch(editor, uiComponents);\n      editor.addCommand('ToggleSidebar', (_ui, value) => {\n        OuterContainer.toggleSidebar(outerContainer, value);\n        editor.dispatch('ToggleSidebar');\n      });\n      editor.addQueryValueHandler('ToggleSidebar', () => {\n        var _a;\n        return (_a = OuterContainer.whichSidebar(outerContainer)) !== null && _a !== void 0 ? _a : '';\n      });\n      const toolbarMode = getToolbarMode(editor);\n      const refreshDrawer = () => {\n        OuterContainer.refreshToolbar(uiComponents.outerContainer);\n      };\n      if (toolbarMode === ToolbarMode$1.sliding || toolbarMode === ToolbarMode$1.floating) {\n        editor.on('ResizeWindow ResizeEditor ResizeContent', () => {\n          const width = editor.getWin().innerWidth;\n          if (width !== lastToolbarWidth.get()) {\n            refreshDrawer();\n            lastToolbarWidth.set(width);\n          }\n        });\n      }\n      const api = {\n        setEnabled: state => {\n          broadcastReadonly(uiComponents, !state);\n        },\n        isEnabled: () => !Disabling.isDisabled(outerContainer)\n      };\n      return {\n        iframeContainer: socket.element.dom,\n        editorContainer: outerContainer.element.dom,\n        api\n      };\n    };\n\n    var Iframe = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        render: render$1\n    });\n\n    const parseToInt = val => {\n      const re = /^[0-9\\.]+(|px)$/i;\n      if (re.test('' + val)) {\n        return Optional.some(parseInt('' + val, 10));\n      }\n      return Optional.none();\n    };\n    const numToPx = val => isNumber(val) ? val + 'px' : val;\n    const calcCappedSize = (size, minSize, maxSize) => {\n      const minOverride = minSize.filter(min => size < min);\n      const maxOverride = maxSize.filter(max => size > max);\n      return minOverride.or(maxOverride).getOr(size);\n    };\n\n    const getHeight = editor => {\n      const baseHeight = getHeightOption(editor);\n      const minHeight = getMinHeightOption(editor);\n      const maxHeight = getMaxHeightOption(editor);\n      return parseToInt(baseHeight).map(height => calcCappedSize(height, minHeight, maxHeight));\n    };\n    const getHeightWithFallback = editor => {\n      const height = getHeight(editor);\n      return height.getOr(getHeightOption(editor));\n    };\n    const getWidth = editor => {\n      const baseWidth = getWidthOption(editor);\n      const minWidth = getMinWidthOption(editor);\n      const maxWidth = getMaxWidthOption(editor);\n      return parseToInt(baseWidth).map(width => calcCappedSize(width, minWidth, maxWidth));\n    };\n    const getWidthWithFallback = editor => {\n      const width = getWidth(editor);\n      return width.getOr(getWidthOption(editor));\n    };\n\n    const {ToolbarLocation, ToolbarMode} = Options;\n    const InlineHeader = (editor, targetElm, uiComponents, backstage, floatContainer) => {\n      const {uiMothership, outerContainer} = uiComponents;\n      const DOM = global$7.DOM;\n      const useFixedToolbarContainer = useFixedContainer(editor);\n      const isSticky = isStickyToolbar(editor);\n      const editorMaxWidthOpt = getMaxWidthOption(editor).or(getWidth(editor));\n      const headerBackstage = backstage.shared.header;\n      const isPositionedAtTop = headerBackstage.isPositionedAtTop;\n      const toolbarMode = getToolbarMode(editor);\n      const isSplitToolbar = toolbarMode === ToolbarMode.sliding || toolbarMode === ToolbarMode.floating;\n      const visible = Cell(false);\n      const isVisible = () => visible.get() && !editor.removed;\n      const calcToolbarOffset = toolbar => isSplitToolbar ? toolbar.fold(constant$1(0), tbar => tbar.components().length > 1 ? get$d(tbar.components()[1].element) : 0) : 0;\n      const calcMode = container => {\n        switch (getToolbarLocation(editor)) {\n        case ToolbarLocation.auto:\n          const toolbar = OuterContainer.getToolbar(outerContainer);\n          const offset = calcToolbarOffset(toolbar);\n          const toolbarHeight = get$d(container.element) - offset;\n          const targetBounds = box$1(targetElm);\n          const roomAtTop = targetBounds.y > toolbarHeight;\n          if (roomAtTop) {\n            return 'top';\n          } else {\n            const doc = documentElement(targetElm);\n            const docHeight = Math.max(doc.dom.scrollHeight, get$d(doc));\n            const roomAtBottom = targetBounds.bottom < docHeight - toolbarHeight;\n            if (roomAtBottom) {\n              return 'bottom';\n            } else {\n              const winBounds = win();\n              const isRoomAtBottomViewport = winBounds.bottom < targetBounds.bottom - toolbarHeight;\n              return isRoomAtBottomViewport ? 'bottom' : 'top';\n            }\n          }\n        case ToolbarLocation.bottom:\n          return 'bottom';\n        case ToolbarLocation.top:\n        default:\n          return 'top';\n        }\n      };\n      const setupMode = mode => {\n        floatContainer.on(container => {\n          Docking.setModes(container, [mode]);\n          headerBackstage.setDockingMode(mode);\n          const verticalDir = isPositionedAtTop() ? AttributeValue.TopToBottom : AttributeValue.BottomToTop;\n          set$9(container.element, Attribute, verticalDir);\n        });\n      };\n      const updateChromeWidth = () => {\n        floatContainer.on(container => {\n          const maxWidth = editorMaxWidthOpt.getOrThunk(() => {\n            const bodyMargin = parseToInt(get$e(body(), 'margin-left')).getOr(0);\n            return get$c(body()) - absolute$3(targetElm).left + bodyMargin;\n          });\n          set$8(container.element, 'max-width', maxWidth + 'px');\n        });\n      };\n      const updateChromePosition = () => {\n        floatContainer.on(container => {\n          const toolbar = OuterContainer.getToolbar(outerContainer);\n          const offset = calcToolbarOffset(toolbar);\n          const targetBounds = box$1(targetElm);\n          const top = isPositionedAtTop() ? Math.max(targetBounds.y - get$d(container.element) + offset, 0) : targetBounds.bottom;\n          setAll(outerContainer.element, {\n            position: 'absolute',\n            top: Math.round(top) + 'px',\n            left: Math.round(targetBounds.x) + 'px'\n          });\n        });\n      };\n      const repositionPopups$1 = () => {\n        uiMothership.broadcastOn([repositionPopups()], {});\n      };\n      const updateChromeUi = (resetDocking = false) => {\n        if (!isVisible()) {\n          return;\n        }\n        if (!useFixedToolbarContainer) {\n          updateChromeWidth();\n        }\n        if (isSplitToolbar) {\n          OuterContainer.refreshToolbar(outerContainer);\n        }\n        if (!useFixedToolbarContainer) {\n          updateChromePosition();\n        }\n        if (isSticky) {\n          const action = resetDocking ? Docking.reset : Docking.refresh;\n          floatContainer.on(action);\n        }\n        repositionPopups$1();\n      };\n      const updateMode = (updateUi = true) => {\n        if (useFixedToolbarContainer || !isSticky || !isVisible()) {\n          return;\n        }\n        floatContainer.on(container => {\n          const currentMode = headerBackstage.getDockingMode();\n          const newMode = calcMode(container);\n          if (newMode !== currentMode) {\n            setupMode(newMode);\n            if (updateUi) {\n              updateChromeUi(true);\n            }\n          }\n        });\n      };\n      const show = () => {\n        visible.set(true);\n        set$8(outerContainer.element, 'display', 'flex');\n        DOM.addClass(editor.getBody(), 'mce-edit-focus');\n        remove$6(uiMothership.element, 'display');\n        updateMode(false);\n        updateChromeUi();\n      };\n      const hide = () => {\n        visible.set(false);\n        if (uiComponents.outerContainer) {\n          set$8(outerContainer.element, 'display', 'none');\n          DOM.removeClass(editor.getBody(), 'mce-edit-focus');\n        }\n        set$8(uiMothership.element, 'display', 'none');\n      };\n      return {\n        isVisible,\n        isPositionedAtTop,\n        show,\n        hide,\n        update: updateChromeUi,\n        updateMode,\n        repositionPopups: repositionPopups$1\n      };\n    };\n\n    const getTargetPosAndBounds = (targetElm, isToolbarTop) => {\n      const bounds = box$1(targetElm);\n      return {\n        pos: isToolbarTop ? bounds.y : bounds.bottom,\n        bounds\n      };\n    };\n    const setupEvents = (editor, targetElm, ui, toolbarPersist) => {\n      const prevPosAndBounds = Cell(getTargetPosAndBounds(targetElm, ui.isPositionedAtTop()));\n      const resizeContent = e => {\n        const {pos, bounds} = getTargetPosAndBounds(targetElm, ui.isPositionedAtTop());\n        const {\n          pos: prevPos,\n          bounds: prevBounds\n        } = prevPosAndBounds.get();\n        const hasResized = bounds.height !== prevBounds.height || bounds.width !== prevBounds.width;\n        prevPosAndBounds.set({\n          pos,\n          bounds\n        });\n        if (hasResized) {\n          fireResizeContent(editor, e);\n        }\n        if (ui.isVisible()) {\n          if (prevPos !== pos) {\n            ui.update(true);\n          } else if (hasResized) {\n            ui.updateMode();\n            ui.repositionPopups();\n          }\n        }\n      };\n      if (!toolbarPersist) {\n        editor.on('activate', ui.show);\n        editor.on('deactivate', ui.hide);\n      }\n      editor.on('SkinLoaded ResizeWindow', () => ui.update(true));\n      editor.on('NodeChange keydown', e => {\n        requestAnimationFrame(() => resizeContent(e));\n      });\n      editor.on('ScrollWindow', () => ui.updateMode());\n      const elementLoad = unbindable();\n      elementLoad.set(capture(SugarElement.fromDom(editor.getBody()), 'load', e => resizeContent(e.raw)));\n      editor.on('remove', () => {\n        elementLoad.clear();\n      });\n    };\n    const render = (editor, uiComponents, rawUiConfig, backstage, args) => {\n      const {mothership, uiMothership, outerContainer} = uiComponents;\n      const floatContainer = value$2();\n      const targetElm = SugarElement.fromDom(args.targetNode);\n      const ui = InlineHeader(editor, targetElm, uiComponents, backstage, floatContainer);\n      const toolbarPersist = isToolbarPersist(editor);\n      inline(editor);\n      const render = () => {\n        if (floatContainer.isSet()) {\n          ui.show();\n          return;\n        }\n        floatContainer.set(OuterContainer.getHeader(outerContainer).getOrDie());\n        const uiContainer = getUiContainer(editor);\n        attachSystem(uiContainer, mothership);\n        attachSystem(uiContainer, uiMothership);\n        setToolbar(editor, uiComponents, rawUiConfig, backstage);\n        OuterContainer.setMenubar(outerContainer, identifyMenus(editor, rawUiConfig));\n        ui.show();\n        setupEvents(editor, targetElm, ui, toolbarPersist);\n        editor.nodeChanged();\n      };\n      editor.on('show', render);\n      editor.on('hide', ui.hide);\n      if (!toolbarPersist) {\n        editor.on('focus', render);\n        editor.on('blur', ui.hide);\n      }\n      editor.on('init', () => {\n        if (editor.hasFocus() || toolbarPersist) {\n          render();\n        }\n      });\n      setupReadonlyModeSwitch(editor, uiComponents);\n      const api = {\n        show: render,\n        hide: ui.hide,\n        setEnabled: state => {\n          broadcastReadonly(uiComponents, !state);\n        },\n        isEnabled: () => !Disabling.isDisabled(outerContainer)\n      };\n      return {\n        editorContainer: outerContainer.element.dom,\n        api\n      };\n    };\n\n    var Inline = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        render: render\n    });\n\n    const showContextToolbarEvent = 'contexttoolbar-show';\n    const hideContextToolbarEvent = 'contexttoolbar-hide';\n\n    const getFormApi = input => ({\n      hide: () => emit(input, sandboxClose()),\n      getValue: () => Representing.getValue(input)\n    });\n    const runOnExecute = (memInput, original) => run$1(internalToolbarButtonExecute, (comp, se) => {\n      const input = memInput.get(comp);\n      const formApi = getFormApi(input);\n      original.onAction(formApi, se.event.buttonApi);\n    });\n    const renderContextButton = (memInput, button, providers) => {\n      const {primary, ...rest} = button.original;\n      const bridged = getOrDie(createToolbarButton({\n        ...rest,\n        type: 'button',\n        onAction: noop\n      }));\n      return renderToolbarButtonWith(bridged, providers, [runOnExecute(memInput, button)]);\n    };\n    const renderContextToggleButton = (memInput, button, providers) => {\n      const {primary, ...rest} = button.original;\n      const bridged = getOrDie(createToggleButton({\n        ...rest,\n        type: 'togglebutton',\n        onAction: noop\n      }));\n      return renderToolbarToggleButtonWith(bridged, providers, [runOnExecute(memInput, button)]);\n    };\n    const isToggleButton = button => button.type === 'contextformtogglebutton';\n    const generateOne = (memInput, button, providersBackstage) => {\n      if (isToggleButton(button)) {\n        return renderContextToggleButton(memInput, button, providersBackstage);\n      } else {\n        return renderContextButton(memInput, button, providersBackstage);\n      }\n    };\n    const generate = (memInput, buttons, providersBackstage) => {\n      const mementos = map$2(buttons, button => record(generateOne(memInput, button, providersBackstage)));\n      const asSpecs = () => map$2(mementos, mem => mem.asSpec());\n      const findPrimary = compInSystem => findMap(buttons, (button, i) => {\n        if (button.primary) {\n          return Optional.from(mementos[i]).bind(mem => mem.getOpt(compInSystem)).filter(not(Disabling.isDisabled));\n        } else {\n          return Optional.none();\n        }\n      });\n      return {\n        asSpecs,\n        findPrimary\n      };\n    };\n\n    const buildInitGroups = (ctx, providers) => {\n      const inputAttributes = ctx.label.fold(() => ({}), label => ({ 'aria-label': label }));\n      const memInput = record(Input.sketch({\n        inputClasses: [\n          'tox-toolbar-textfield',\n          'tox-toolbar-nav-js'\n        ],\n        data: ctx.initValue(),\n        inputAttributes,\n        selectOnFocus: true,\n        inputBehaviours: derive$1([Keying.config({\n            mode: 'special',\n            onEnter: input => commands.findPrimary(input).map(primary => {\n              emitExecute(primary);\n              return true;\n            }),\n            onLeft: (comp, se) => {\n              se.cut();\n              return Optional.none();\n            },\n            onRight: (comp, se) => {\n              se.cut();\n              return Optional.none();\n            }\n          })])\n      }));\n      const commands = generate(memInput, ctx.commands, providers);\n      return [\n        {\n          title: Optional.none(),\n          items: [memInput.asSpec()]\n        },\n        {\n          title: Optional.none(),\n          items: commands.asSpecs()\n        }\n      ];\n    };\n    const renderContextForm = (toolbarType, ctx, providers) => renderToolbar({\n      type: toolbarType,\n      uid: generate$6('context-toolbar'),\n      initGroups: buildInitGroups(ctx, providers),\n      onEscape: Optional.none,\n      cyclicKeying: true,\n      providers\n    });\n    const ContextForm = {\n      renderContextForm,\n      buildInitGroups\n    };\n\n    const isVerticalOverlap = (a, b, threshold = 0.01) => b.bottom - a.y >= threshold && a.bottom - b.y >= threshold;\n    const getRangeRect = rng => {\n      const rect = rng.getBoundingClientRect();\n      if (rect.height <= 0 && rect.width <= 0) {\n        const leaf$1 = leaf(SugarElement.fromDom(rng.startContainer), rng.startOffset).element;\n        const elm = isText(leaf$1) ? parent(leaf$1) : Optional.some(leaf$1);\n        return elm.filter(isElement$1).map(e => e.dom.getBoundingClientRect()).getOr(rect);\n      } else {\n        return rect;\n      }\n    };\n    const getSelectionBounds = editor => {\n      const rng = editor.selection.getRng();\n      const rect = getRangeRect(rng);\n      if (editor.inline) {\n        const scroll = get$b();\n        return bounds(scroll.left + rect.left, scroll.top + rect.top, rect.width, rect.height);\n      } else {\n        const bodyPos = absolute$2(SugarElement.fromDom(editor.getBody()));\n        return bounds(bodyPos.x + rect.left, bodyPos.y + rect.top, rect.width, rect.height);\n      }\n    };\n    const getAnchorElementBounds = (editor, lastElement) => lastElement.filter(elem => inBody(elem) && isHTMLElement(elem)).map(absolute$2).getOrThunk(() => getSelectionBounds(editor));\n    const getHorizontalBounds = (contentAreaBox, viewportBounds, margin) => {\n      const x = Math.max(contentAreaBox.x + margin, viewportBounds.x);\n      const right = Math.min(contentAreaBox.right - margin, viewportBounds.right);\n      return {\n        x,\n        width: right - x\n      };\n    };\n    const getVerticalBounds = (editor, contentAreaBox, viewportBounds, isToolbarLocationTop, toolbarType, margin) => {\n      const container = SugarElement.fromDom(editor.getContainer());\n      const header = descendant(container, '.tox-editor-header').getOr(container);\n      const headerBox = box$1(header);\n      const isToolbarBelowContentArea = headerBox.y >= contentAreaBox.bottom;\n      const isToolbarAbove = isToolbarLocationTop && !isToolbarBelowContentArea;\n      if (editor.inline && isToolbarAbove) {\n        return {\n          y: Math.max(headerBox.bottom + margin, viewportBounds.y),\n          bottom: viewportBounds.bottom\n        };\n      }\n      if (editor.inline && !isToolbarAbove) {\n        return {\n          y: viewportBounds.y,\n          bottom: Math.min(headerBox.y - margin, viewportBounds.bottom)\n        };\n      }\n      const containerBounds = toolbarType === 'line' ? box$1(container) : contentAreaBox;\n      if (isToolbarAbove) {\n        return {\n          y: Math.max(headerBox.bottom + margin, viewportBounds.y),\n          bottom: Math.min(containerBounds.bottom - margin, viewportBounds.bottom)\n        };\n      }\n      return {\n        y: Math.max(containerBounds.y + margin, viewportBounds.y),\n        bottom: Math.min(headerBox.y - margin, viewportBounds.bottom)\n      };\n    };\n    const getContextToolbarBounds = (editor, sharedBackstage, toolbarType, margin = 0) => {\n      const viewportBounds = getBounds$3(window);\n      const contentAreaBox = box$1(SugarElement.fromDom(editor.getContentAreaContainer()));\n      const toolbarOrMenubarEnabled = isMenubarEnabled(editor) || isToolbarEnabled(editor) || isMultipleToolbars(editor);\n      const {x, width} = getHorizontalBounds(contentAreaBox, viewportBounds, margin);\n      if (editor.inline && !toolbarOrMenubarEnabled) {\n        return bounds(x, viewportBounds.y, width, viewportBounds.height);\n      } else {\n        const isToolbarTop = sharedBackstage.header.isPositionedAtTop();\n        const {y, bottom} = getVerticalBounds(editor, contentAreaBox, viewportBounds, isToolbarTop, toolbarType, margin);\n        return bounds(x, y, width, bottom - y);\n      }\n    };\n\n    const bubbleSize$1 = 12;\n    const bubbleAlignments$1 = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: ['tox-pop--align-left'],\n      alignRight: ['tox-pop--align-right'],\n      right: ['tox-pop--right'],\n      left: ['tox-pop--left'],\n      bottom: ['tox-pop--bottom'],\n      top: ['tox-pop--top'],\n      inset: ['tox-pop--inset']\n    };\n    const anchorOverrides = {\n      maxHeightFunction: expandable$1(),\n      maxWidthFunction: expandable()\n    };\n    const isEntireElementSelected = (editor, elem) => {\n      const rng = editor.selection.getRng();\n      const leaf$1 = leaf(SugarElement.fromDom(rng.startContainer), rng.startOffset);\n      return rng.startContainer === rng.endContainer && rng.startOffset === rng.endOffset - 1 && eq(leaf$1.element, elem);\n    };\n    const preservePosition = (elem, position, f) => {\n      const currentPosition = getRaw(elem, 'position');\n      set$8(elem, 'position', position);\n      const result = f(elem);\n      currentPosition.each(pos => set$8(elem, 'position', pos));\n      return result;\n    };\n    const shouldUseInsetLayouts = position => position === 'node';\n    const determineInsetLayout = (editor, contextbar, elem, data, bounds) => {\n      const selectionBounds = getSelectionBounds(editor);\n      const isSameAnchorElement = data.lastElement().exists(prev => eq(elem, prev));\n      if (isEntireElementSelected(editor, elem)) {\n        return isSameAnchorElement ? preserve : north;\n      } else if (isSameAnchorElement) {\n        return preservePosition(contextbar, data.getMode(), () => {\n          const isOverlapping = isVerticalOverlap(selectionBounds, box$1(contextbar));\n          return isOverlapping && !data.isReposition() ? flip : preserve;\n        });\n      } else {\n        const yBounds = data.getMode() === 'fixed' ? bounds.y + get$b().top : bounds.y;\n        const contextbarHeight = get$d(contextbar) + bubbleSize$1;\n        return yBounds + contextbarHeight <= selectionBounds.y ? north : south;\n      }\n    };\n    const getAnchorSpec$2 = (editor, mobile, data, position) => {\n      const smartInsetLayout = elem => (anchor, element, bubbles, placee, bounds) => {\n        const layout = determineInsetLayout(editor, placee, elem, data, bounds);\n        const newAnchor = {\n          ...anchor,\n          y: bounds.y,\n          height: bounds.height\n        };\n        return {\n          ...layout(newAnchor, element, bubbles, placee, bounds),\n          alwaysFit: true\n        };\n      };\n      const getInsetLayouts = elem => shouldUseInsetLayouts(position) ? [smartInsetLayout(elem)] : [];\n      const desktopAnchorSpecLayouts = {\n        onLtr: elem => [\n          north$2,\n          south$2,\n          northeast$2,\n          southeast$2,\n          northwest$2,\n          southwest$2\n        ].concat(getInsetLayouts(elem)),\n        onRtl: elem => [\n          north$2,\n          south$2,\n          northwest$2,\n          southwest$2,\n          northeast$2,\n          southeast$2\n        ].concat(getInsetLayouts(elem))\n      };\n      const mobileAnchorSpecLayouts = {\n        onLtr: elem => [\n          south$2,\n          southeast$2,\n          southwest$2,\n          northeast$2,\n          northwest$2,\n          north$2\n        ].concat(getInsetLayouts(elem)),\n        onRtl: elem => [\n          south$2,\n          southwest$2,\n          southeast$2,\n          northwest$2,\n          northeast$2,\n          north$2\n        ].concat(getInsetLayouts(elem))\n      };\n      return mobile ? mobileAnchorSpecLayouts : desktopAnchorSpecLayouts;\n    };\n    const getAnchorLayout = (editor, position, isTouch, data) => {\n      if (position === 'line') {\n        return {\n          bubble: nu$5(bubbleSize$1, 0, bubbleAlignments$1),\n          layouts: {\n            onLtr: () => [east$2],\n            onRtl: () => [west$2]\n          },\n          overrides: anchorOverrides\n        };\n      } else {\n        return {\n          bubble: nu$5(0, bubbleSize$1, bubbleAlignments$1, 1 / bubbleSize$1),\n          layouts: getAnchorSpec$2(editor, isTouch, data, position),\n          overrides: anchorOverrides\n        };\n      }\n    };\n\n    const matchTargetWith = (elem, candidates) => {\n      const ctxs = filter$2(candidates, toolbarApi => toolbarApi.predicate(elem.dom));\n      const {pass, fail} = partition$3(ctxs, t => t.type === 'contexttoolbar');\n      return {\n        contextToolbars: pass,\n        contextForms: fail\n      };\n    };\n    const filterByPositionForStartNode = toolbars => {\n      if (toolbars.length <= 1) {\n        return toolbars;\n      } else {\n        const doesPositionExist = value => exists(toolbars, t => t.position === value);\n        const filterToolbarsByPosition = value => filter$2(toolbars, t => t.position === value);\n        const hasSelectionToolbars = doesPositionExist('selection');\n        const hasNodeToolbars = doesPositionExist('node');\n        if (hasSelectionToolbars || hasNodeToolbars) {\n          if (hasNodeToolbars && hasSelectionToolbars) {\n            const nodeToolbars = filterToolbarsByPosition('node');\n            const selectionToolbars = map$2(filterToolbarsByPosition('selection'), t => ({\n              ...t,\n              position: 'node'\n            }));\n            return nodeToolbars.concat(selectionToolbars);\n          } else {\n            return hasSelectionToolbars ? filterToolbarsByPosition('selection') : filterToolbarsByPosition('node');\n          }\n        } else {\n          return filterToolbarsByPosition('line');\n        }\n      }\n    };\n    const filterByPositionForAncestorNode = toolbars => {\n      if (toolbars.length <= 1) {\n        return toolbars;\n      } else {\n        const findPosition = value => find$5(toolbars, t => t.position === value);\n        const basePosition = findPosition('selection').orThunk(() => findPosition('node')).orThunk(() => findPosition('line')).map(t => t.position);\n        return basePosition.fold(() => [], pos => filter$2(toolbars, t => t.position === pos));\n      }\n    };\n    const matchStartNode = (elem, nodeCandidates, editorCandidates) => {\n      const nodeMatches = matchTargetWith(elem, nodeCandidates);\n      if (nodeMatches.contextForms.length > 0) {\n        return Optional.some({\n          elem,\n          toolbars: [nodeMatches.contextForms[0]]\n        });\n      } else {\n        const editorMatches = matchTargetWith(elem, editorCandidates);\n        if (editorMatches.contextForms.length > 0) {\n          return Optional.some({\n            elem,\n            toolbars: [editorMatches.contextForms[0]]\n          });\n        } else if (nodeMatches.contextToolbars.length > 0 || editorMatches.contextToolbars.length > 0) {\n          const toolbars = filterByPositionForStartNode(nodeMatches.contextToolbars.concat(editorMatches.contextToolbars));\n          return Optional.some({\n            elem,\n            toolbars\n          });\n        } else {\n          return Optional.none();\n        }\n      }\n    };\n    const matchAncestor = (isRoot, startNode, scopes) => {\n      if (isRoot(startNode)) {\n        return Optional.none();\n      } else {\n        return ancestor$2(startNode, ancestorElem => {\n          if (isElement$1(ancestorElem)) {\n            const {contextToolbars, contextForms} = matchTargetWith(ancestorElem, scopes.inNodeScope);\n            const toolbars = contextForms.length > 0 ? contextForms : filterByPositionForAncestorNode(contextToolbars);\n            return toolbars.length > 0 ? Optional.some({\n              elem: ancestorElem,\n              toolbars\n            }) : Optional.none();\n          } else {\n            return Optional.none();\n          }\n        }, isRoot);\n      }\n    };\n    const lookup$1 = (scopes, editor) => {\n      const rootElem = SugarElement.fromDom(editor.getBody());\n      const isRoot = elem => eq(elem, rootElem);\n      const isOutsideRoot = startNode => !isRoot(startNode) && !contains(rootElem, startNode);\n      const startNode = SugarElement.fromDom(editor.selection.getNode());\n      if (isOutsideRoot(startNode)) {\n        return Optional.none();\n      }\n      return matchStartNode(startNode, scopes.inNodeScope, scopes.inEditorScope).orThunk(() => matchAncestor(isRoot, startNode, scopes));\n    };\n\n    const categorise = (contextToolbars, navigate) => {\n      const forms = {};\n      const inNodeScope = [];\n      const inEditorScope = [];\n      const formNavigators = {};\n      const lookupTable = {};\n      const registerForm = (key, toolbarSpec) => {\n        const contextForm = getOrDie(createContextForm(toolbarSpec));\n        forms[key] = contextForm;\n        contextForm.launch.map(launch => {\n          formNavigators['form:' + key + ''] = {\n            ...toolbarSpec.launch,\n            type: launch.type === 'contextformtogglebutton' ? 'togglebutton' : 'button',\n            onAction: () => {\n              navigate(contextForm);\n            }\n          };\n        });\n        if (contextForm.scope === 'editor') {\n          inEditorScope.push(contextForm);\n        } else {\n          inNodeScope.push(contextForm);\n        }\n        lookupTable[key] = contextForm;\n      };\n      const registerToolbar = (key, toolbarSpec) => {\n        createContextToolbar(toolbarSpec).each(contextToolbar => {\n          if (toolbarSpec.scope === 'editor') {\n            inEditorScope.push(contextToolbar);\n          } else {\n            inNodeScope.push(contextToolbar);\n          }\n          lookupTable[key] = contextToolbar;\n        });\n      };\n      const keys$1 = keys(contextToolbars);\n      each$1(keys$1, key => {\n        const toolbarApi = contextToolbars[key];\n        if (toolbarApi.type === 'contextform') {\n          registerForm(key, toolbarApi);\n        } else if (toolbarApi.type === 'contexttoolbar') {\n          registerToolbar(key, toolbarApi);\n        }\n      });\n      return {\n        forms,\n        inNodeScope,\n        inEditorScope,\n        lookupTable,\n        formNavigators\n      };\n    };\n\n    const forwardSlideEvent = generate$6('forward-slide');\n    const backSlideEvent = generate$6('backward-slide');\n    const changeSlideEvent = generate$6('change-slide-event');\n    const resizingClass = 'tox-pop--resizing';\n    const renderContextToolbar = spec => {\n      const stack = Cell([]);\n      return InlineView.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-pop']\n        },\n        fireDismissalEventInstead: { event: 'doNotDismissYet' },\n        onShow: comp => {\n          stack.set([]);\n          InlineView.getContent(comp).each(c => {\n            remove$6(c.element, 'visibility');\n          });\n          remove$2(comp.element, resizingClass);\n          remove$6(comp.element, 'width');\n        },\n        inlineBehaviours: derive$1([\n          config('context-toolbar-events', [\n            runOnSource(transitionend(), (comp, se) => {\n              if (se.event.raw.propertyName === 'width') {\n                remove$2(comp.element, resizingClass);\n                remove$6(comp.element, 'width');\n              }\n            }),\n            run$1(changeSlideEvent, (comp, se) => {\n              const elem = comp.element;\n              remove$6(elem, 'width');\n              const currentWidth = get$c(elem);\n              InlineView.setContent(comp, se.event.contents);\n              add$2(elem, resizingClass);\n              const newWidth = get$c(elem);\n              set$8(elem, 'width', currentWidth + 'px');\n              InlineView.getContent(comp).each(newContents => {\n                se.event.focus.bind(f => {\n                  focus$3(f);\n                  return search(elem);\n                }).orThunk(() => {\n                  Keying.focusIn(newContents);\n                  return active$1(getRootNode(elem));\n                });\n              });\n              setTimeout(() => {\n                set$8(comp.element, 'width', newWidth + 'px');\n              }, 0);\n            }),\n            run$1(forwardSlideEvent, (comp, se) => {\n              InlineView.getContent(comp).each(oldContents => {\n                stack.set(stack.get().concat([{\n                    bar: oldContents,\n                    focus: active$1(getRootNode(comp.element))\n                  }]));\n              });\n              emitWith(comp, changeSlideEvent, {\n                contents: se.event.forwardContents,\n                focus: Optional.none()\n              });\n            }),\n            run$1(backSlideEvent, (comp, _se) => {\n              last$1(stack.get()).each(last => {\n                stack.set(stack.get().slice(0, stack.get().length - 1));\n                emitWith(comp, changeSlideEvent, {\n                  contents: premade(last.bar),\n                  focus: last.focus\n                });\n              });\n            })\n          ]),\n          Keying.config({\n            mode: 'special',\n            onEscape: comp => last$1(stack.get()).fold(() => spec.onEscape(), _ => {\n              emit(comp, backSlideEvent);\n              return Optional.some(true);\n            })\n          })\n        ]),\n        lazySink: () => Result.value(spec.sink)\n      });\n    };\n\n    const transitionClass = 'tox-pop--transition';\n    const register$9 = (editor, registryContextToolbars, sink, extras) => {\n      const backstage = extras.backstage;\n      const sharedBackstage = backstage.shared;\n      const isTouch = detect$1().deviceType.isTouch;\n      const lastElement = value$2();\n      const lastTrigger = value$2();\n      const lastContextPosition = value$2();\n      const contextbar = build$1(renderContextToolbar({\n        sink,\n        onEscape: () => {\n          editor.focus();\n          return Optional.some(true);\n        }\n      }));\n      const getBounds = () => {\n        const position = lastContextPosition.get().getOr('node');\n        const margin = shouldUseInsetLayouts(position) ? 1 : 0;\n        return getContextToolbarBounds(editor, sharedBackstage, position, margin);\n      };\n      const canLaunchToolbar = () => {\n        return !editor.removed && !(isTouch() && backstage.isContextMenuOpen());\n      };\n      const isSameLaunchElement = elem => is$1(lift2(elem, lastElement.get(), eq), true);\n      const shouldContextToolbarHide = () => {\n        if (!canLaunchToolbar()) {\n          return true;\n        } else {\n          const contextToolbarBounds = getBounds();\n          const anchorBounds = is$1(lastContextPosition.get(), 'node') ? getAnchorElementBounds(editor, lastElement.get()) : getSelectionBounds(editor);\n          return contextToolbarBounds.height <= 0 || !isVerticalOverlap(anchorBounds, contextToolbarBounds);\n        }\n      };\n      const close = () => {\n        lastElement.clear();\n        lastTrigger.clear();\n        lastContextPosition.clear();\n        InlineView.hide(contextbar);\n      };\n      const hideOrRepositionIfNecessary = () => {\n        if (InlineView.isOpen(contextbar)) {\n          const contextBarEle = contextbar.element;\n          remove$6(contextBarEle, 'display');\n          if (shouldContextToolbarHide()) {\n            set$8(contextBarEle, 'display', 'none');\n          } else {\n            lastTrigger.set(0);\n            InlineView.reposition(contextbar);\n          }\n        }\n      };\n      const wrapInPopDialog = toolbarSpec => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-pop__dialog']\n        },\n        components: [toolbarSpec],\n        behaviours: derive$1([\n          Keying.config({ mode: 'acyclic' }),\n          config('pop-dialog-wrap-events', [\n            runOnAttached(comp => {\n              editor.shortcuts.add('ctrl+F9', 'focus statusbar', () => Keying.focusIn(comp));\n            }),\n            runOnDetached(_comp => {\n              editor.shortcuts.remove('ctrl+F9');\n            })\n          ])\n        ])\n      });\n      const getScopes = cached(() => categorise(registryContextToolbars, toolbarApi => {\n        const alloySpec = buildToolbar([toolbarApi]);\n        emitWith(contextbar, forwardSlideEvent, { forwardContents: wrapInPopDialog(alloySpec) });\n      }));\n      const buildContextToolbarGroups = (allButtons, ctx) => identifyButtons(editor, {\n        buttons: allButtons,\n        toolbar: ctx.items,\n        allowToolbarGroups: false\n      }, extras.backstage, Optional.some(['form:']));\n      const buildContextFormGroups = (ctx, providers) => ContextForm.buildInitGroups(ctx, providers);\n      const buildToolbar = toolbars => {\n        const {buttons} = editor.ui.registry.getAll();\n        const scopes = getScopes();\n        const allButtons = {\n          ...buttons,\n          ...scopes.formNavigators\n        };\n        const toolbarType = getToolbarMode(editor) === ToolbarMode$1.scrolling ? ToolbarMode$1.scrolling : ToolbarMode$1.default;\n        const initGroups = flatten(map$2(toolbars, ctx => ctx.type === 'contexttoolbar' ? buildContextToolbarGroups(allButtons, ctx) : buildContextFormGroups(ctx, sharedBackstage.providers)));\n        return renderToolbar({\n          type: toolbarType,\n          uid: generate$6('context-toolbar'),\n          initGroups,\n          onEscape: Optional.none,\n          cyclicKeying: true,\n          providers: sharedBackstage.providers\n        });\n      };\n      const getAnchor = (position, element) => {\n        const anchorage = position === 'node' ? sharedBackstage.anchors.node(element) : sharedBackstage.anchors.cursor();\n        const anchorLayout = getAnchorLayout(editor, position, isTouch(), {\n          lastElement: lastElement.get,\n          isReposition: () => is$1(lastTrigger.get(), 0),\n          getMode: () => Positioning.getMode(sink)\n        });\n        return deepMerge(anchorage, anchorLayout);\n      };\n      const launchContext = (toolbarApi, elem) => {\n        launchContextToolbar.cancel();\n        if (!canLaunchToolbar()) {\n          return;\n        }\n        const toolbarSpec = buildToolbar(toolbarApi);\n        const position = toolbarApi[0].position;\n        const anchor = getAnchor(position, elem);\n        lastContextPosition.set(position);\n        lastTrigger.set(1);\n        const contextBarEle = contextbar.element;\n        remove$6(contextBarEle, 'display');\n        if (!isSameLaunchElement(elem)) {\n          remove$2(contextBarEle, transitionClass);\n          Positioning.reset(sink, contextbar);\n        }\n        InlineView.showWithinBounds(contextbar, wrapInPopDialog(toolbarSpec), {\n          anchor,\n          transition: {\n            classes: [transitionClass],\n            mode: 'placement'\n          }\n        }, () => Optional.some(getBounds()));\n        elem.fold(lastElement.clear, lastElement.set);\n        if (shouldContextToolbarHide()) {\n          set$8(contextBarEle, 'display', 'none');\n        }\n      };\n      const launchContextToolbar = last(() => {\n        if (!editor.hasFocus() || editor.removed) {\n          return;\n        }\n        if (has(contextbar.element, transitionClass)) {\n          launchContextToolbar.throttle();\n        } else {\n          const scopes = getScopes();\n          lookup$1(scopes, editor).fold(close, info => {\n            launchContext(info.toolbars, Optional.some(info.elem));\n          });\n        }\n      }, 17);\n      editor.on('init', () => {\n        editor.on('remove', close);\n        editor.on('ScrollContent ScrollWindow ObjectResized ResizeEditor longpress', hideOrRepositionIfNecessary);\n        editor.on('click keyup focus SetContent', launchContextToolbar.throttle);\n        editor.on(hideContextToolbarEvent, close);\n        editor.on(showContextToolbarEvent, e => {\n          const scopes = getScopes();\n          get$g(scopes.lookupTable, e.toolbarKey).each(ctx => {\n            launchContext([ctx], someIf(e.target !== editor, e.target));\n            InlineView.getContent(contextbar).each(Keying.focusIn);\n          });\n        });\n        editor.on('focusout', _e => {\n          global$9.setEditorTimeout(editor, () => {\n            if (search(sink.element).isNone() && search(contextbar.element).isNone()) {\n              close();\n            }\n          }, 0);\n        });\n        editor.on('SwitchMode', () => {\n          if (editor.mode.isReadOnly()) {\n            close();\n          }\n        });\n        editor.on('AfterProgressState', event => {\n          if (event.state) {\n            close();\n          } else if (editor.hasFocus()) {\n            launchContextToolbar.throttle();\n          }\n        });\n        editor.on('NodeChange', _e => {\n          search(contextbar.element).fold(launchContextToolbar.throttle, noop);\n        });\n      });\n    };\n\n    const register$8 = editor => {\n      const alignToolbarButtons = [\n        {\n          name: 'alignleft',\n          text: 'Align left',\n          cmd: 'JustifyLeft',\n          icon: 'align-left'\n        },\n        {\n          name: 'aligncenter',\n          text: 'Align center',\n          cmd: 'JustifyCenter',\n          icon: 'align-center'\n        },\n        {\n          name: 'alignright',\n          text: 'Align right',\n          cmd: 'JustifyRight',\n          icon: 'align-right'\n        },\n        {\n          name: 'alignjustify',\n          text: 'Justify',\n          cmd: 'JustifyFull',\n          icon: 'align-justify'\n        }\n      ];\n      each$1(alignToolbarButtons, item => {\n        editor.ui.registry.addToggleButton(item.name, {\n          tooltip: item.text,\n          icon: item.icon,\n          onAction: onActionExecCommand(editor, item.cmd),\n          onSetup: onSetupFormatToggle(editor, item.name)\n        });\n      });\n      editor.ui.registry.addButton('alignnone', {\n        tooltip: 'No alignment',\n        icon: 'align-none',\n        onAction: onActionExecCommand(editor, 'JustifyNone')\n      });\n    };\n\n    const units = {\n      unsupportedLength: [\n        'em',\n        'ex',\n        'cap',\n        'ch',\n        'ic',\n        'rem',\n        'lh',\n        'rlh',\n        'vw',\n        'vh',\n        'vi',\n        'vb',\n        'vmin',\n        'vmax',\n        'cm',\n        'mm',\n        'Q',\n        'in',\n        'pc',\n        'pt',\n        'px'\n      ],\n      fixed: [\n        'px',\n        'pt'\n      ],\n      relative: ['%'],\n      empty: ['']\n    };\n    const pattern = (() => {\n      const decimalDigits = '[0-9]+';\n      const signedInteger = '[+-]?' + decimalDigits;\n      const exponentPart = '[eE]' + signedInteger;\n      const dot = '\\\\.';\n      const opt = input => `(?:${ input })?`;\n      const unsignedDecimalLiteral = [\n        'Infinity',\n        decimalDigits + dot + opt(decimalDigits) + opt(exponentPart),\n        dot + decimalDigits + opt(exponentPart),\n        decimalDigits + opt(exponentPart)\n      ].join('|');\n      const float = `[+-]?(?:${ unsignedDecimalLiteral })`;\n      return new RegExp(`^(${ float })(.*)$`);\n    })();\n    const isUnit = (unit, accepted) => exists(accepted, acc => exists(units[acc], check => unit === check));\n    const parse = (input, accepted) => {\n      const match = Optional.from(pattern.exec(input));\n      return match.bind(array => {\n        const value = Number(array[1]);\n        const unitRaw = array[2];\n        if (isUnit(unitRaw, accepted)) {\n          return Optional.some({\n            value,\n            unit: unitRaw\n          });\n        } else {\n          return Optional.none();\n        }\n      });\n    };\n    const normalise = (input, accepted) => parse(input, accepted).map(({value, unit}) => value + unit);\n\n    const registerController = (editor, spec) => {\n      const getMenuItems = () => {\n        const options = spec.getOptions(editor);\n        const initial = spec.getCurrent(editor).map(spec.hash);\n        const current = value$2();\n        return map$2(options, value => ({\n          type: 'togglemenuitem',\n          text: spec.display(value),\n          onSetup: api => {\n            const setActive = active => {\n              if (active) {\n                current.on(oldApi => oldApi.setActive(false));\n                current.set(api);\n              }\n              api.setActive(active);\n            };\n            setActive(is$1(initial, spec.hash(value)));\n            const unbindWatcher = spec.watcher(editor, value, setActive);\n            return () => {\n              current.clear();\n              unbindWatcher();\n            };\n          },\n          onAction: () => spec.setCurrent(editor, value)\n        }));\n      };\n      editor.ui.registry.addMenuButton(spec.name, {\n        tooltip: spec.text,\n        icon: spec.icon,\n        fetch: callback => callback(getMenuItems()),\n        onSetup: spec.onToolbarSetup\n      });\n      editor.ui.registry.addNestedMenuItem(spec.name, {\n        type: 'nestedmenuitem',\n        text: spec.text,\n        getSubmenuItems: getMenuItems,\n        onSetup: spec.onMenuSetup\n      });\n    };\n    const lineHeightSpec = {\n      name: 'lineheight',\n      text: 'Line height',\n      icon: 'line-height',\n      getOptions: getLineHeightFormats,\n      hash: input => normalise(input, [\n        'fixed',\n        'relative',\n        'empty'\n      ]).getOr(input),\n      display: identity,\n      watcher: (editor, value, callback) => editor.formatter.formatChanged('lineheight', callback, false, { value }).unbind,\n      getCurrent: editor => Optional.from(editor.queryCommandValue('LineHeight')),\n      setCurrent: (editor, value) => editor.execCommand('LineHeight', false, value)\n    };\n    const languageSpec = editor => {\n      const settingsOpt = Optional.from(getContentLanguages(editor));\n      return settingsOpt.map(settings => ({\n        name: 'language',\n        text: 'Language',\n        icon: 'language',\n        getOptions: constant$1(settings),\n        hash: input => isUndefined(input.customCode) ? input.code : `${ input.code }/${ input.customCode }`,\n        display: input => input.title,\n        watcher: (editor, value, callback) => {\n          var _a;\n          return editor.formatter.formatChanged('lang', callback, false, {\n            value: value.code,\n            customValue: (_a = value.customCode) !== null && _a !== void 0 ? _a : null\n          }).unbind;\n        },\n        getCurrent: editor => {\n          const node = SugarElement.fromDom(editor.selection.getNode());\n          return closest$4(node, n => Optional.some(n).filter(isElement$1).bind(ele => {\n            const codeOpt = getOpt(ele, 'lang');\n            return codeOpt.map(code => {\n              const customCode = getOpt(ele, 'data-mce-lang').getOrUndefined();\n              return {\n                code,\n                customCode,\n                title: ''\n              };\n            });\n          }));\n        },\n        setCurrent: (editor, lang) => editor.execCommand('Lang', false, lang),\n        onToolbarSetup: api => {\n          const unbinder = unbindable();\n          api.setActive(editor.formatter.match('lang', {}, undefined, true));\n          unbinder.set(editor.formatter.formatChanged('lang', api.setActive, true));\n          return unbinder.clear;\n        }\n      }));\n    };\n    const register$7 = editor => {\n      registerController(editor, lineHeightSpec);\n      languageSpec(editor).each(spec => registerController(editor, spec));\n    };\n\n    const register$6 = (editor, backstage) => {\n      createAlignMenu(editor, backstage);\n      createFontFamilyMenu(editor, backstage);\n      createStylesMenu(editor, backstage);\n      createBlocksMenu(editor, backstage);\n      createFontSizeMenu(editor, backstage);\n    };\n\n    const onSetupOutdentState = editor => onSetupEvent(editor, 'NodeChange', api => {\n      api.setEnabled(editor.queryCommandState('outdent'));\n    });\n    const registerButtons$2 = editor => {\n      editor.ui.registry.addButton('outdent', {\n        tooltip: 'Decrease indent',\n        icon: 'outdent',\n        onSetup: onSetupOutdentState(editor),\n        onAction: onActionExecCommand(editor, 'outdent')\n      });\n      editor.ui.registry.addButton('indent', {\n        tooltip: 'Increase indent',\n        icon: 'indent',\n        onAction: onActionExecCommand(editor, 'indent')\n      });\n    };\n    const register$5 = editor => {\n      registerButtons$2(editor);\n    };\n\n    const makeSetupHandler = (editor, pasteAsText) => api => {\n      api.setActive(pasteAsText.get());\n      const pastePlainTextToggleHandler = e => {\n        pasteAsText.set(e.state);\n        api.setActive(e.state);\n      };\n      editor.on('PastePlainTextToggle', pastePlainTextToggleHandler);\n      return () => editor.off('PastePlainTextToggle', pastePlainTextToggleHandler);\n    };\n    const register$4 = editor => {\n      const pasteAsText = Cell(getPasteAsText(editor));\n      const onAction = () => editor.execCommand('mceTogglePlainTextPaste');\n      editor.ui.registry.addToggleButton('pastetext', {\n        active: false,\n        icon: 'paste-text',\n        tooltip: 'Paste as text',\n        onAction,\n        onSetup: makeSetupHandler(editor, pasteAsText)\n      });\n      editor.ui.registry.addToggleMenuItem('pastetext', {\n        text: 'Paste as text',\n        icon: 'paste-text',\n        onAction,\n        onSetup: makeSetupHandler(editor, pasteAsText)\n      });\n    };\n\n    const onActionToggleFormat = (editor, fmt) => () => {\n      editor.execCommand('mceToggleFormat', false, fmt);\n    };\n    const registerFormatButtons = editor => {\n      global$1.each([\n        {\n          name: 'bold',\n          text: 'Bold',\n          icon: 'bold'\n        },\n        {\n          name: 'italic',\n          text: 'Italic',\n          icon: 'italic'\n        },\n        {\n          name: 'underline',\n          text: 'Underline',\n          icon: 'underline'\n        },\n        {\n          name: 'strikethrough',\n          text: 'Strikethrough',\n          icon: 'strike-through'\n        },\n        {\n          name: 'subscript',\n          text: 'Subscript',\n          icon: 'subscript'\n        },\n        {\n          name: 'superscript',\n          text: 'Superscript',\n          icon: 'superscript'\n        }\n      ], (btn, _idx) => {\n        editor.ui.registry.addToggleButton(btn.name, {\n          tooltip: btn.text,\n          icon: btn.icon,\n          onSetup: onSetupFormatToggle(editor, btn.name),\n          onAction: onActionToggleFormat(editor, btn.name)\n        });\n      });\n      for (let i = 1; i <= 6; i++) {\n        const name = 'h' + i;\n        editor.ui.registry.addToggleButton(name, {\n          text: name.toUpperCase(),\n          tooltip: 'Heading ' + i,\n          onSetup: onSetupFormatToggle(editor, name),\n          onAction: onActionToggleFormat(editor, name)\n        });\n      }\n    };\n    const registerCommandButtons = editor => {\n      global$1.each([\n        {\n          name: 'cut',\n          text: 'Cut',\n          action: 'Cut',\n          icon: 'cut'\n        },\n        {\n          name: 'copy',\n          text: 'Copy',\n          action: 'Copy',\n          icon: 'copy'\n        },\n        {\n          name: 'paste',\n          text: 'Paste',\n          action: 'Paste',\n          icon: 'paste'\n        },\n        {\n          name: 'help',\n          text: 'Help',\n          action: 'mceHelp',\n          icon: 'help'\n        },\n        {\n          name: 'selectall',\n          text: 'Select all',\n          action: 'SelectAll',\n          icon: 'select-all'\n        },\n        {\n          name: 'newdocument',\n          text: 'New document',\n          action: 'mceNewDocument',\n          icon: 'new-document'\n        },\n        {\n          name: 'removeformat',\n          text: 'Clear formatting',\n          action: 'RemoveFormat',\n          icon: 'remove-formatting'\n        },\n        {\n          name: 'remove',\n          text: 'Remove',\n          action: 'Delete',\n          icon: 'remove'\n        },\n        {\n          name: 'print',\n          text: 'Print',\n          action: 'mcePrint',\n          icon: 'print'\n        },\n        {\n          name: 'hr',\n          text: 'Horizontal line',\n          action: 'InsertHorizontalRule',\n          icon: 'horizontal-rule'\n        }\n      ], btn => {\n        editor.ui.registry.addButton(btn.name, {\n          tooltip: btn.text,\n          icon: btn.icon,\n          onAction: onActionExecCommand(editor, btn.action)\n        });\n      });\n    };\n    const registerCommandToggleButtons = editor => {\n      global$1.each([{\n          name: 'blockquote',\n          text: 'Blockquote',\n          action: 'mceBlockQuote',\n          icon: 'quote'\n        }], btn => {\n        editor.ui.registry.addToggleButton(btn.name, {\n          tooltip: btn.text,\n          icon: btn.icon,\n          onAction: onActionExecCommand(editor, btn.action),\n          onSetup: onSetupFormatToggle(editor, btn.name)\n        });\n      });\n    };\n    const registerButtons$1 = editor => {\n      registerFormatButtons(editor);\n      registerCommandButtons(editor);\n      registerCommandToggleButtons(editor);\n    };\n    const registerMenuItems$2 = editor => {\n      global$1.each([\n        {\n          name: 'bold',\n          text: 'Bold',\n          action: 'Bold',\n          icon: 'bold',\n          shortcut: 'Meta+B'\n        },\n        {\n          name: 'italic',\n          text: 'Italic',\n          action: 'Italic',\n          icon: 'italic',\n          shortcut: 'Meta+I'\n        },\n        {\n          name: 'underline',\n          text: 'Underline',\n          action: 'Underline',\n          icon: 'underline',\n          shortcut: 'Meta+U'\n        },\n        {\n          name: 'strikethrough',\n          text: 'Strikethrough',\n          action: 'Strikethrough',\n          icon: 'strike-through'\n        },\n        {\n          name: 'subscript',\n          text: 'Subscript',\n          action: 'Subscript',\n          icon: 'subscript'\n        },\n        {\n          name: 'superscript',\n          text: 'Superscript',\n          action: 'Superscript',\n          icon: 'superscript'\n        },\n        {\n          name: 'removeformat',\n          text: 'Clear formatting',\n          action: 'RemoveFormat',\n          icon: 'remove-formatting'\n        },\n        {\n          name: 'newdocument',\n          text: 'New document',\n          action: 'mceNewDocument',\n          icon: 'new-document'\n        },\n        {\n          name: 'cut',\n          text: 'Cut',\n          action: 'Cut',\n          icon: 'cut',\n          shortcut: 'Meta+X'\n        },\n        {\n          name: 'copy',\n          text: 'Copy',\n          action: 'Copy',\n          icon: 'copy',\n          shortcut: 'Meta+C'\n        },\n        {\n          name: 'paste',\n          text: 'Paste',\n          action: 'Paste',\n          icon: 'paste',\n          shortcut: 'Meta+V'\n        },\n        {\n          name: 'selectall',\n          text: 'Select all',\n          action: 'SelectAll',\n          icon: 'select-all',\n          shortcut: 'Meta+A'\n        },\n        {\n          name: 'print',\n          text: 'Print...',\n          action: 'mcePrint',\n          icon: 'print',\n          shortcut: 'Meta+P'\n        },\n        {\n          name: 'hr',\n          text: 'Horizontal line',\n          action: 'InsertHorizontalRule',\n          icon: 'horizontal-rule'\n        }\n      ], menuitem => {\n        editor.ui.registry.addMenuItem(menuitem.name, {\n          text: menuitem.text,\n          icon: menuitem.icon,\n          shortcut: menuitem.shortcut,\n          onAction: onActionExecCommand(editor, menuitem.action)\n        });\n      });\n      editor.ui.registry.addMenuItem('codeformat', {\n        text: 'Code',\n        icon: 'sourcecode',\n        onAction: onActionToggleFormat(editor, 'code')\n      });\n    };\n    const register$3 = editor => {\n      registerButtons$1(editor);\n      registerMenuItems$2(editor);\n    };\n\n    const onSetupUndoRedoState = (editor, type) => onSetupEvent(editor, 'Undo Redo AddUndo TypingUndo ClearUndos SwitchMode', api => {\n      api.setEnabled(!editor.mode.isReadOnly() && editor.undoManager[type]());\n    });\n    const registerMenuItems$1 = editor => {\n      editor.ui.registry.addMenuItem('undo', {\n        text: 'Undo',\n        icon: 'undo',\n        shortcut: 'Meta+Z',\n        onSetup: onSetupUndoRedoState(editor, 'hasUndo'),\n        onAction: onActionExecCommand(editor, 'undo')\n      });\n      editor.ui.registry.addMenuItem('redo', {\n        text: 'Redo',\n        icon: 'redo',\n        shortcut: 'Meta+Y',\n        onSetup: onSetupUndoRedoState(editor, 'hasRedo'),\n        onAction: onActionExecCommand(editor, 'redo')\n      });\n    };\n    const registerButtons = editor => {\n      editor.ui.registry.addButton('undo', {\n        tooltip: 'Undo',\n        icon: 'undo',\n        enabled: false,\n        onSetup: onSetupUndoRedoState(editor, 'hasUndo'),\n        onAction: onActionExecCommand(editor, 'undo')\n      });\n      editor.ui.registry.addButton('redo', {\n        tooltip: 'Redo',\n        icon: 'redo',\n        enabled: false,\n        onSetup: onSetupUndoRedoState(editor, 'hasRedo'),\n        onAction: onActionExecCommand(editor, 'redo')\n      });\n    };\n    const register$2 = editor => {\n      registerMenuItems$1(editor);\n      registerButtons(editor);\n    };\n\n    const onSetupVisualAidState = editor => onSetupEvent(editor, 'VisualAid', api => {\n      api.setActive(editor.hasVisual);\n    });\n    const registerMenuItems = editor => {\n      editor.ui.registry.addToggleMenuItem('visualaid', {\n        text: 'Visual aids',\n        onSetup: onSetupVisualAidState(editor),\n        onAction: onActionExecCommand(editor, 'mceToggleVisualAid')\n      });\n    };\n    const registerToolbarButton = editor => {\n      editor.ui.registry.addButton('visualaid', {\n        tooltip: 'Visual aids',\n        text: 'Visual aids',\n        onAction: onActionExecCommand(editor, 'mceToggleVisualAid')\n      });\n    };\n    const register$1 = editor => {\n      registerToolbarButton(editor);\n      registerMenuItems(editor);\n    };\n\n    const setup$6 = (editor, backstage) => {\n      register$8(editor);\n      register$3(editor);\n      register$6(editor, backstage);\n      register$2(editor);\n      register$c(editor);\n      register$1(editor);\n      register$5(editor);\n      register$7(editor);\n      register$4(editor);\n    };\n\n    const patchPipeConfig = config => isString(config) ? config.split(/[ ,]/) : config;\n    const option = name => editor => editor.options.get(name);\n    const register = editor => {\n      const registerOption = editor.options.register;\n      registerOption('contextmenu_avoid_overlap', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('contextmenu_never_use_native', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('contextmenu', {\n        processor: value => {\n          if (value === false) {\n            return {\n              value: [],\n              valid: true\n            };\n          } else if (isString(value) || isArrayOf(value, isString)) {\n            return {\n              value: patchPipeConfig(value),\n              valid: true\n            };\n          } else {\n            return {\n              valid: false,\n              message: 'Must be false or a string.'\n            };\n          }\n        },\n        default: 'link linkchecker image editimage table spellchecker configurepermanentpen'\n      });\n    };\n    const shouldNeverUseNative = option('contextmenu_never_use_native');\n    const getAvoidOverlapSelector = option('contextmenu_avoid_overlap');\n    const isContextMenuDisabled = editor => getContextMenu(editor).length === 0;\n    const getContextMenu = editor => {\n      const contextMenus = editor.ui.registry.getAll().contextMenus;\n      const contextMenu = editor.options.get('contextmenu');\n      if (editor.options.isSet('contextmenu')) {\n        return contextMenu;\n      } else {\n        return filter$2(contextMenu, item => has$2(contextMenus, item));\n      }\n    };\n\n    const nu = (x, y) => ({\n      type: 'makeshift',\n      x,\n      y\n    });\n    const transpose = (pos, dx, dy) => {\n      return nu(pos.x + dx, pos.y + dy);\n    };\n    const isTouchEvent$1 = e => e.type === 'longpress' || e.type.indexOf('touch') === 0;\n    const fromPageXY = e => {\n      if (isTouchEvent$1(e)) {\n        const touch = e.touches[0];\n        return nu(touch.pageX, touch.pageY);\n      } else {\n        return nu(e.pageX, e.pageY);\n      }\n    };\n    const fromClientXY = e => {\n      if (isTouchEvent$1(e)) {\n        const touch = e.touches[0];\n        return nu(touch.clientX, touch.clientY);\n      } else {\n        return nu(e.clientX, e.clientY);\n      }\n    };\n    const transposeContentAreaContainer = (element, pos) => {\n      const containerPos = global$7.DOM.getPos(element);\n      return transpose(pos, containerPos.x, containerPos.y);\n    };\n    const getPointAnchor = (editor, e) => {\n      if (e.type === 'contextmenu' || e.type === 'longpress') {\n        if (editor.inline) {\n          return fromPageXY(e);\n        } else {\n          return transposeContentAreaContainer(editor.getContentAreaContainer(), fromClientXY(e));\n        }\n      } else {\n        return getSelectionAnchor(editor);\n      }\n    };\n    const getSelectionAnchor = editor => {\n      return {\n        type: 'selection',\n        root: SugarElement.fromDom(editor.selection.getNode())\n      };\n    };\n    const getNodeAnchor = editor => ({\n      type: 'node',\n      node: Optional.some(SugarElement.fromDom(editor.selection.getNode())),\n      root: SugarElement.fromDom(editor.getBody())\n    });\n    const getAnchorSpec$1 = (editor, e, anchorType) => {\n      switch (anchorType) {\n      case 'node':\n        return getNodeAnchor(editor);\n      case 'point':\n        return getPointAnchor(editor, e);\n      case 'selection':\n        return getSelectionAnchor(editor);\n      }\n    };\n\n    const initAndShow$1 = (editor, e, buildMenu, backstage, contextmenu, anchorType) => {\n      const items = buildMenu();\n      const anchorSpec = getAnchorSpec$1(editor, e, anchorType);\n      build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n        isHorizontalMenu: false,\n        search: Optional.none()\n      }).map(menuData => {\n        e.preventDefault();\n        InlineView.showMenuAt(contextmenu, { anchor: anchorSpec }, {\n          menu: { markers: markers('normal') },\n          data: menuData\n        });\n      });\n    };\n\n    const layouts = {\n      onLtr: () => [\n        south$2,\n        southeast$2,\n        southwest$2,\n        northeast$2,\n        northwest$2,\n        north$2,\n        north,\n        south,\n        northeast,\n        southeast,\n        northwest,\n        southwest\n      ],\n      onRtl: () => [\n        south$2,\n        southwest$2,\n        southeast$2,\n        northwest$2,\n        northeast$2,\n        north$2,\n        north,\n        south,\n        northwest,\n        southwest,\n        northeast,\n        southeast\n      ]\n    };\n    const bubbleSize = 12;\n    const bubbleAlignments = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: ['tox-pop--align-left'],\n      alignRight: ['tox-pop--align-right'],\n      right: ['tox-pop--right'],\n      left: ['tox-pop--left'],\n      bottom: ['tox-pop--bottom'],\n      top: ['tox-pop--top']\n    };\n    const isTouchWithinSelection = (editor, e) => {\n      const selection = editor.selection;\n      if (selection.isCollapsed() || e.touches.length < 1) {\n        return false;\n      } else {\n        const touch = e.touches[0];\n        const rng = selection.getRng();\n        const rngRectOpt = getFirstRect(editor.getWin(), SimSelection.domRange(rng));\n        return rngRectOpt.exists(rngRect => rngRect.left <= touch.clientX && rngRect.right >= touch.clientX && rngRect.top <= touch.clientY && rngRect.bottom >= touch.clientY);\n      }\n    };\n    const setupiOSOverrides = editor => {\n      const originalSelection = editor.selection.getRng();\n      const selectionReset = () => {\n        global$9.setEditorTimeout(editor, () => {\n          editor.selection.setRng(originalSelection);\n        }, 10);\n        unbindEventListeners();\n      };\n      editor.once('touchend', selectionReset);\n      const preventMousedown = e => {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      };\n      editor.on('mousedown', preventMousedown, true);\n      const clearSelectionReset = () => unbindEventListeners();\n      editor.once('longpresscancel', clearSelectionReset);\n      const unbindEventListeners = () => {\n        editor.off('touchend', selectionReset);\n        editor.off('longpresscancel', clearSelectionReset);\n        editor.off('mousedown', preventMousedown);\n      };\n    };\n    const getAnchorSpec = (editor, e, anchorType) => {\n      const anchorSpec = getAnchorSpec$1(editor, e, anchorType);\n      const bubbleYOffset = anchorType === 'point' ? bubbleSize : 0;\n      return {\n        bubble: nu$5(0, bubbleYOffset, bubbleAlignments),\n        layouts,\n        overrides: {\n          maxWidthFunction: expandable(),\n          maxHeightFunction: expandable$1()\n        },\n        ...anchorSpec\n      };\n    };\n    const show = (editor, e, items, backstage, contextmenu, anchorType, highlightImmediately) => {\n      const anchorSpec = getAnchorSpec(editor, e, anchorType);\n      build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n        isHorizontalMenu: true,\n        search: Optional.none()\n      }).map(menuData => {\n        e.preventDefault();\n        const highlightOnOpen = highlightImmediately ? HighlightOnOpen.HighlightMenuAndItem : HighlightOnOpen.HighlightNone;\n        InlineView.showMenuWithinBounds(contextmenu, { anchor: anchorSpec }, {\n          menu: {\n            markers: markers('normal'),\n            highlightOnOpen\n          },\n          data: menuData,\n          type: 'horizontal'\n        }, () => Optional.some(getContextToolbarBounds(editor, backstage.shared, anchorType === 'node' ? 'node' : 'selection')));\n        editor.dispatch(hideContextToolbarEvent);\n      });\n    };\n    const initAndShow = (editor, e, buildMenu, backstage, contextmenu, anchorType) => {\n      const detection = detect$1();\n      const isiOS = detection.os.isiOS();\n      const isMacOS = detection.os.isMacOS();\n      const isAndroid = detection.os.isAndroid();\n      const isTouch = detection.deviceType.isTouch();\n      const shouldHighlightImmediately = () => !(isAndroid || isiOS || isMacOS && isTouch);\n      const open = () => {\n        const items = buildMenu();\n        show(editor, e, items, backstage, contextmenu, anchorType, shouldHighlightImmediately());\n      };\n      if ((isMacOS || isiOS) && anchorType !== 'node') {\n        const openiOS = () => {\n          setupiOSOverrides(editor);\n          open();\n        };\n        if (isTouchWithinSelection(editor, e)) {\n          openiOS();\n        } else {\n          editor.once('selectionchange', openiOS);\n          editor.once('touchend', () => editor.off('selectionchange', openiOS));\n        }\n      } else {\n        open();\n      }\n    };\n\n    const isSeparator = item => isString(item) ? item === '|' : item.type === 'separator';\n    const separator = { type: 'separator' };\n    const makeContextItem = item => {\n      const commonMenuItem = item => ({\n        text: item.text,\n        icon: item.icon,\n        enabled: item.enabled,\n        shortcut: item.shortcut\n      });\n      if (isString(item)) {\n        return item;\n      } else {\n        switch (item.type) {\n        case 'separator':\n          return separator;\n        case 'submenu':\n          return {\n            type: 'nestedmenuitem',\n            ...commonMenuItem(item),\n            getSubmenuItems: () => {\n              const items = item.getSubmenuItems();\n              if (isString(items)) {\n                return items;\n              } else {\n                return map$2(items, makeContextItem);\n              }\n            }\n          };\n        default:\n          const commonItem = item;\n          return {\n            type: 'menuitem',\n            ...commonMenuItem(commonItem),\n            onAction: noarg(commonItem.onAction)\n          };\n        }\n      }\n    };\n    const addContextMenuGroup = (xs, groupItems) => {\n      if (groupItems.length === 0) {\n        return xs;\n      }\n      const lastMenuItem = last$1(xs).filter(item => !isSeparator(item));\n      const before = lastMenuItem.fold(() => [], _ => [separator]);\n      return xs.concat(before).concat(groupItems).concat([separator]);\n    };\n    const generateContextMenu = (contextMenus, menuConfig, selectedElement) => {\n      const sections = foldl(menuConfig, (acc, name) => {\n        return get$g(contextMenus, name.toLowerCase()).map(menu => {\n          const items = menu.update(selectedElement);\n          if (isString(items)) {\n            return addContextMenuGroup(acc, items.split(' '));\n          } else if (items.length > 0) {\n            const allItems = map$2(items, makeContextItem);\n            return addContextMenuGroup(acc, allItems);\n          } else {\n            return acc;\n          }\n        }).getOrThunk(() => acc.concat([name]));\n      }, []);\n      if (sections.length > 0 && isSeparator(sections[sections.length - 1])) {\n        sections.pop();\n      }\n      return sections;\n    };\n    const isNativeOverrideKeyEvent = (editor, e) => e.ctrlKey && !shouldNeverUseNative(editor);\n    const isTouchEvent = e => e.type === 'longpress' || has$2(e, 'touches');\n    const isTriggeredByKeyboard = (editor, e) => !isTouchEvent(e) && (e.button !== 2 || e.target === editor.getBody() && e.pointerType === '');\n    const getSelectedElement = (editor, e) => isTriggeredByKeyboard(editor, e) ? editor.selection.getStart(true) : e.target;\n    const getAnchorType = (editor, e) => {\n      const selector = getAvoidOverlapSelector(editor);\n      const anchorType = isTriggeredByKeyboard(editor, e) ? 'selection' : 'point';\n      if (isNotEmpty(selector)) {\n        const target = getSelectedElement(editor, e);\n        const selectorExists = closest(SugarElement.fromDom(target), selector);\n        return selectorExists ? 'node' : anchorType;\n      } else {\n        return anchorType;\n      }\n    };\n    const setup$5 = (editor, lazySink, backstage) => {\n      const detection = detect$1();\n      const isTouch = detection.deviceType.isTouch;\n      const contextmenu = build$1(InlineView.sketch({\n        dom: { tag: 'div' },\n        lazySink,\n        onEscape: () => editor.focus(),\n        onShow: () => backstage.setContextMenuState(true),\n        onHide: () => backstage.setContextMenuState(false),\n        fireDismissalEventInstead: {},\n        inlineBehaviours: derive$1([config('dismissContextMenu', [run$1(dismissRequested(), (comp, _se) => {\n              Sandboxing.close(comp);\n              editor.focus();\n            })])])\n      }));\n      const hideContextMenu = () => InlineView.hide(contextmenu);\n      const showContextMenu = e => {\n        if (shouldNeverUseNative(editor)) {\n          e.preventDefault();\n        }\n        if (isNativeOverrideKeyEvent(editor, e) || isContextMenuDisabled(editor)) {\n          return;\n        }\n        const anchorType = getAnchorType(editor, e);\n        const buildMenu = () => {\n          const selectedElement = getSelectedElement(editor, e);\n          const registry = editor.ui.registry.getAll();\n          const menuConfig = getContextMenu(editor);\n          return generateContextMenu(registry.contextMenus, menuConfig, selectedElement);\n        };\n        const initAndShow$2 = isTouch() ? initAndShow : initAndShow$1;\n        initAndShow$2(editor, e, buildMenu, backstage, contextmenu, anchorType);\n      };\n      editor.on('init', () => {\n        const hideEvents = 'ResizeEditor ScrollContent ScrollWindow longpresscancel' + (isTouch() ? '' : ' ResizeWindow');\n        editor.on(hideEvents, hideContextMenu);\n        editor.on('longpress contextmenu', showContextMenu);\n      });\n    };\n\n    const adt = Adt.generate([\n      {\n        offset: [\n          'x',\n          'y'\n        ]\n      },\n      {\n        absolute: [\n          'x',\n          'y'\n        ]\n      },\n      {\n        fixed: [\n          'x',\n          'y'\n        ]\n      }\n    ]);\n    const subtract = change => point => point.translate(-change.left, -change.top);\n    const add = change => point => point.translate(change.left, change.top);\n    const transform = changes => (x, y) => foldl(changes, (rest, f) => f(rest), SugarPosition(x, y));\n    const asFixed = (coord, scroll, origin) => coord.fold(transform([\n      add(origin),\n      subtract(scroll)\n    ]), transform([subtract(scroll)]), transform([]));\n    const asAbsolute = (coord, scroll, origin) => coord.fold(transform([add(origin)]), transform([]), transform([add(scroll)]));\n    const asOffset = (coord, scroll, origin) => coord.fold(transform([]), transform([subtract(origin)]), transform([\n      add(scroll),\n      subtract(origin)\n    ]));\n    const withinRange = (coord1, coord2, xRange, yRange, scroll, origin) => {\n      const a1 = asAbsolute(coord1, scroll, origin);\n      const a2 = asAbsolute(coord2, scroll, origin);\n      return Math.abs(a1.left - a2.left) <= xRange && Math.abs(a1.top - a2.top) <= yRange;\n    };\n    const getDeltas = (coord1, coord2, xRange, yRange, scroll, origin) => {\n      const a1 = asAbsolute(coord1, scroll, origin);\n      const a2 = asAbsolute(coord2, scroll, origin);\n      const left = Math.abs(a1.left - a2.left);\n      const top = Math.abs(a1.top - a2.top);\n      return SugarPosition(left, top);\n    };\n    const toStyles = (coord, scroll, origin) => {\n      const stylesOpt = coord.fold((x, y) => ({\n        position: Optional.some('absolute'),\n        left: Optional.some(x + 'px'),\n        top: Optional.some(y + 'px')\n      }), (x, y) => ({\n        position: Optional.some('absolute'),\n        left: Optional.some(x - origin.left + 'px'),\n        top: Optional.some(y - origin.top + 'px')\n      }), (x, y) => ({\n        position: Optional.some('fixed'),\n        left: Optional.some(x + 'px'),\n        top: Optional.some(y + 'px')\n      }));\n      return {\n        right: Optional.none(),\n        bottom: Optional.none(),\n        ...stylesOpt\n      };\n    };\n    const translate = (coord, deltaX, deltaY) => coord.fold((x, y) => offset(x + deltaX, y + deltaY), (x, y) => absolute(x + deltaX, y + deltaY), (x, y) => fixed(x + deltaX, y + deltaY));\n    const absorb = (partialCoord, originalCoord, scroll, origin) => {\n      const absorbOne = (stencil, nu) => (optX, optY) => {\n        const original = stencil(originalCoord, scroll, origin);\n        return nu(optX.getOr(original.left), optY.getOr(original.top));\n      };\n      return partialCoord.fold(absorbOne(asOffset, offset), absorbOne(asAbsolute, absolute), absorbOne(asFixed, fixed));\n    };\n    const offset = adt.offset;\n    const absolute = adt.absolute;\n    const fixed = adt.fixed;\n\n    const parseAttrToInt = (element, name) => {\n      const value = get$f(element, name);\n      return isUndefined(value) ? NaN : parseInt(value, 10);\n    };\n    const get = (component, snapsInfo) => {\n      const element = component.element;\n      const x = parseAttrToInt(element, snapsInfo.leftAttr);\n      const y = parseAttrToInt(element, snapsInfo.topAttr);\n      return isNaN(x) || isNaN(y) ? Optional.none() : Optional.some(SugarPosition(x, y));\n    };\n    const set = (component, snapsInfo, pt) => {\n      const element = component.element;\n      set$9(element, snapsInfo.leftAttr, pt.left + 'px');\n      set$9(element, snapsInfo.topAttr, pt.top + 'px');\n    };\n    const clear = (component, snapsInfo) => {\n      const element = component.element;\n      remove$7(element, snapsInfo.leftAttr);\n      remove$7(element, snapsInfo.topAttr);\n    };\n\n    const getCoords = (component, snapInfo, coord, delta) => get(component, snapInfo).fold(() => coord, fixed$1 => fixed(fixed$1.left + delta.left, fixed$1.top + delta.top));\n    const moveOrSnap = (component, snapInfo, coord, delta, scroll, origin) => {\n      const newCoord = getCoords(component, snapInfo, coord, delta);\n      const snap = snapInfo.mustSnap ? findClosestSnap(component, snapInfo, newCoord, scroll, origin) : findSnap(component, snapInfo, newCoord, scroll, origin);\n      const fixedCoord = asFixed(newCoord, scroll, origin);\n      set(component, snapInfo, fixedCoord);\n      return snap.fold(() => ({\n        coord: fixed(fixedCoord.left, fixedCoord.top),\n        extra: Optional.none()\n      }), spanned => ({\n        coord: spanned.output,\n        extra: spanned.extra\n      }));\n    };\n    const stopDrag = (component, snapInfo) => {\n      clear(component, snapInfo);\n    };\n    const findMatchingSnap = (snaps, newCoord, scroll, origin) => findMap(snaps, snap => {\n      const sensor = snap.sensor;\n      const inRange = withinRange(newCoord, sensor, snap.range.left, snap.range.top, scroll, origin);\n      return inRange ? Optional.some({\n        output: absorb(snap.output, newCoord, scroll, origin),\n        extra: snap.extra\n      }) : Optional.none();\n    });\n    const findClosestSnap = (component, snapInfo, newCoord, scroll, origin) => {\n      const snaps = snapInfo.getSnapPoints(component);\n      const matchSnap = findMatchingSnap(snaps, newCoord, scroll, origin);\n      return matchSnap.orThunk(() => {\n        const bestSnap = foldl(snaps, (acc, snap) => {\n          const sensor = snap.sensor;\n          const deltas = getDeltas(newCoord, sensor, snap.range.left, snap.range.top, scroll, origin);\n          return acc.deltas.fold(() => ({\n            deltas: Optional.some(deltas),\n            snap: Optional.some(snap)\n          }), bestDeltas => {\n            const currAvg = (deltas.left + deltas.top) / 2;\n            const bestAvg = (bestDeltas.left + bestDeltas.top) / 2;\n            if (currAvg <= bestAvg) {\n              return {\n                deltas: Optional.some(deltas),\n                snap: Optional.some(snap)\n              };\n            } else {\n              return acc;\n            }\n          });\n        }, {\n          deltas: Optional.none(),\n          snap: Optional.none()\n        });\n        return bestSnap.snap.map(snap => ({\n          output: absorb(snap.output, newCoord, scroll, origin),\n          extra: snap.extra\n        }));\n      });\n    };\n    const findSnap = (component, snapInfo, newCoord, scroll, origin) => {\n      const snaps = snapInfo.getSnapPoints(component);\n      return findMatchingSnap(snaps, newCoord, scroll, origin);\n    };\n    const snapTo$1 = (snap, scroll, origin) => ({\n      coord: absorb(snap.output, snap.output, scroll, origin),\n      extra: snap.extra\n    });\n\n    const snapTo = (component, dragConfig, _state, snap) => {\n      const target = dragConfig.getTarget(component.element);\n      if (dragConfig.repositionTarget) {\n        const doc = owner$4(component.element);\n        const scroll = get$b(doc);\n        const origin = getOrigin(target);\n        const snapPin = snapTo$1(snap, scroll, origin);\n        const styles = toStyles(snapPin.coord, scroll, origin);\n        setOptions(target, styles);\n      }\n    };\n\n    var DraggingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        snapTo: snapTo\n    });\n\n    const initialAttribute = 'data-initial-z-index';\n    const resetZIndex = blocker => {\n      parent(blocker.element).filter(isElement$1).each(root => {\n        getOpt(root, initialAttribute).fold(() => remove$6(root, 'z-index'), zIndex => set$8(root, 'z-index', zIndex));\n        remove$7(root, initialAttribute);\n      });\n    };\n    const changeZIndex = blocker => {\n      parent(blocker.element).filter(isElement$1).each(root => {\n        getRaw(root, 'z-index').each(zindex => {\n          set$9(root, initialAttribute, zindex);\n        });\n        set$8(root, 'z-index', get$e(blocker.element, 'z-index'));\n      });\n    };\n    const instigate = (anyComponent, blocker) => {\n      anyComponent.getSystem().addToGui(blocker);\n      changeZIndex(blocker);\n    };\n    const discard = blocker => {\n      resetZIndex(blocker);\n      blocker.getSystem().removeFromGui(blocker);\n    };\n    const createComponent = (component, blockerClass, blockerEvents) => component.getSystem().build(Container.sketch({\n      dom: {\n        styles: {\n          'left': '0px',\n          'top': '0px',\n          'width': '100%',\n          'height': '100%',\n          'position': 'fixed',\n          'z-index': '1000000000000000'\n        },\n        classes: [blockerClass]\n      },\n      events: blockerEvents\n    }));\n\n    var SnapSchema = optionObjOf('snaps', [\n      required$1('getSnapPoints'),\n      onHandler('onSensor'),\n      required$1('leftAttr'),\n      required$1('topAttr'),\n      defaulted('lazyViewport', win),\n      defaulted('mustSnap', false)\n    ]);\n\n    const schema$6 = [\n      defaulted('useFixed', never),\n      required$1('blockerClass'),\n      defaulted('getTarget', identity),\n      defaulted('onDrag', noop),\n      defaulted('repositionTarget', true),\n      defaulted('onDrop', noop),\n      defaultedFunction('getBounds', win),\n      SnapSchema\n    ];\n\n    const getCurrentCoord = target => lift3(getRaw(target, 'left'), getRaw(target, 'top'), getRaw(target, 'position'), (left, top, position) => {\n      const nu = position === 'fixed' ? fixed : offset;\n      return nu(parseInt(left, 10), parseInt(top, 10));\n    }).getOrThunk(() => {\n      const location = absolute$3(target);\n      return absolute(location.left, location.top);\n    });\n    const clampCoords = (component, coords, scroll, origin, startData) => {\n      const bounds = startData.bounds;\n      const absoluteCoord = asAbsolute(coords, scroll, origin);\n      const newX = clamp(absoluteCoord.left, bounds.x, bounds.x + bounds.width - startData.width);\n      const newY = clamp(absoluteCoord.top, bounds.y, bounds.y + bounds.height - startData.height);\n      const newCoords = absolute(newX, newY);\n      return coords.fold(() => {\n        const offset$1 = asOffset(newCoords, scroll, origin);\n        return offset(offset$1.left, offset$1.top);\n      }, constant$1(newCoords), () => {\n        const fixed$1 = asFixed(newCoords, scroll, origin);\n        return fixed(fixed$1.left, fixed$1.top);\n      });\n    };\n    const calcNewCoord = (component, optSnaps, currentCoord, scroll, origin, delta, startData) => {\n      const newCoord = optSnaps.fold(() => {\n        const translated = translate(currentCoord, delta.left, delta.top);\n        const fixedCoord = asFixed(translated, scroll, origin);\n        return fixed(fixedCoord.left, fixedCoord.top);\n      }, snapInfo => {\n        const snapping = moveOrSnap(component, snapInfo, currentCoord, delta, scroll, origin);\n        snapping.extra.each(extra => {\n          snapInfo.onSensor(component, extra);\n        });\n        return snapping.coord;\n      });\n      return clampCoords(component, newCoord, scroll, origin, startData);\n    };\n    const dragBy = (component, dragConfig, startData, delta) => {\n      const target = dragConfig.getTarget(component.element);\n      if (dragConfig.repositionTarget) {\n        const doc = owner$4(component.element);\n        const scroll = get$b(doc);\n        const origin = getOrigin(target);\n        const currentCoord = getCurrentCoord(target);\n        const newCoord = calcNewCoord(component, dragConfig.snaps, currentCoord, scroll, origin, delta, startData);\n        const styles = toStyles(newCoord, scroll, origin);\n        setOptions(target, styles);\n      }\n      dragConfig.onDrag(component, target, delta);\n    };\n\n    const calcStartData = (dragConfig, comp) => ({\n      bounds: dragConfig.getBounds(),\n      height: getOuter$2(comp.element),\n      width: getOuter$1(comp.element)\n    });\n    const move = (component, dragConfig, dragState, dragMode, event) => {\n      const delta = dragState.update(dragMode, event);\n      const dragStartData = dragState.getStartData().getOrThunk(() => calcStartData(dragConfig, component));\n      delta.each(dlt => {\n        dragBy(component, dragConfig, dragStartData, dlt);\n      });\n    };\n    const stop = (component, blocker, dragConfig, dragState) => {\n      blocker.each(discard);\n      dragConfig.snaps.each(snapInfo => {\n        stopDrag(component, snapInfo);\n      });\n      const target = dragConfig.getTarget(component.element);\n      dragState.reset();\n      dragConfig.onDrop(component, target);\n    };\n    const handlers = events => (dragConfig, dragState) => {\n      const updateStartState = comp => {\n        dragState.setStartData(calcStartData(dragConfig, comp));\n      };\n      return derive$2([\n        run$1(windowScroll(), comp => {\n          dragState.getStartData().each(() => updateStartState(comp));\n        }),\n        ...events(dragConfig, dragState, updateStartState)\n      ]);\n    };\n\n    const init$2 = dragApi => derive$2([\n      run$1(mousedown(), dragApi.forceDrop),\n      run$1(mouseup(), dragApi.drop),\n      run$1(mousemove(), (comp, simulatedEvent) => {\n        dragApi.move(simulatedEvent.event);\n      }),\n      run$1(mouseout(), dragApi.delayDrop)\n    ]);\n\n    const getData$1 = event => Optional.from(SugarPosition(event.x, event.y));\n    const getDelta$1 = (old, nu) => SugarPosition(nu.left - old.left, nu.top - old.top);\n\n    var MouseData = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getData: getData$1,\n        getDelta: getDelta$1\n    });\n\n    const events$2 = (dragConfig, dragState, updateStartState) => [run$1(mousedown(), (component, simulatedEvent) => {\n        const raw = simulatedEvent.event.raw;\n        if (raw.button !== 0) {\n          return;\n        }\n        simulatedEvent.stop();\n        const stop$1 = () => stop(component, Optional.some(blocker), dragConfig, dragState);\n        const delayDrop = DelayedFunction(stop$1, 200);\n        const dragApi = {\n          drop: stop$1,\n          delayDrop: delayDrop.schedule,\n          forceDrop: stop$1,\n          move: event => {\n            delayDrop.cancel();\n            move(component, dragConfig, dragState, MouseData, event);\n          }\n        };\n        const blocker = createComponent(component, dragConfig.blockerClass, init$2(dragApi));\n        const start = () => {\n          updateStartState(component);\n          instigate(component, blocker);\n        };\n        start();\n      })];\n    const schema$5 = [\n      ...schema$6,\n      output$1('dragger', { handlers: handlers(events$2) })\n    ];\n\n    const init$1 = dragApi => derive$2([\n      run$1(touchstart(), dragApi.forceDrop),\n      run$1(touchend(), dragApi.drop),\n      run$1(touchcancel(), dragApi.drop),\n      run$1(touchmove(), (comp, simulatedEvent) => {\n        dragApi.move(simulatedEvent.event);\n      })\n    ]);\n\n    const getDataFrom = touches => {\n      const touch = touches[0];\n      return Optional.some(SugarPosition(touch.clientX, touch.clientY));\n    };\n    const getData = event => {\n      const raw = event.raw;\n      const touches = raw.touches;\n      return touches.length === 1 ? getDataFrom(touches) : Optional.none();\n    };\n    const getDelta = (old, nu) => SugarPosition(nu.left - old.left, nu.top - old.top);\n\n    var TouchData = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getData: getData,\n        getDelta: getDelta\n    });\n\n    const events$1 = (dragConfig, dragState, updateStartState) => {\n      const blockerSingleton = value$2();\n      const stopBlocking = component => {\n        stop(component, blockerSingleton.get(), dragConfig, dragState);\n        blockerSingleton.clear();\n      };\n      return [\n        run$1(touchstart(), (component, simulatedEvent) => {\n          simulatedEvent.stop();\n          const stop = () => stopBlocking(component);\n          const dragApi = {\n            drop: stop,\n            delayDrop: noop,\n            forceDrop: stop,\n            move: event => {\n              move(component, dragConfig, dragState, TouchData, event);\n            }\n          };\n          const blocker = createComponent(component, dragConfig.blockerClass, init$1(dragApi));\n          blockerSingleton.set(blocker);\n          const start = () => {\n            updateStartState(component);\n            instigate(component, blocker);\n          };\n          start();\n        }),\n        run$1(touchmove(), (component, simulatedEvent) => {\n          simulatedEvent.stop();\n          move(component, dragConfig, dragState, TouchData, simulatedEvent.event);\n        }),\n        run$1(touchend(), (component, simulatedEvent) => {\n          simulatedEvent.stop();\n          stopBlocking(component);\n        }),\n        run$1(touchcancel(), stopBlocking)\n      ];\n    };\n    const schema$4 = [\n      ...schema$6,\n      output$1('dragger', { handlers: handlers(events$1) })\n    ];\n\n    const events = (dragConfig, dragState, updateStartState) => [\n      ...events$2(dragConfig, dragState, updateStartState),\n      ...events$1(dragConfig, dragState, updateStartState)\n    ];\n    const schema$3 = [\n      ...schema$6,\n      output$1('dragger', { handlers: handlers(events) })\n    ];\n\n    const mouse = schema$5;\n    const touch = schema$4;\n    const mouseOrTouch = schema$3;\n\n    var DraggingBranches = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        mouse: mouse,\n        touch: touch,\n        mouseOrTouch: mouseOrTouch\n    });\n\n    const init = () => {\n      let previous = Optional.none();\n      let startData = Optional.none();\n      const reset = () => {\n        previous = Optional.none();\n        startData = Optional.none();\n      };\n      const calculateDelta = (mode, nu) => {\n        const result = previous.map(old => mode.getDelta(old, nu));\n        previous = Optional.some(nu);\n        return result;\n      };\n      const update = (mode, dragEvent) => mode.getData(dragEvent).bind(nuData => calculateDelta(mode, nuData));\n      const setStartData = data => {\n        startData = Optional.some(data);\n      };\n      const getStartData = () => startData;\n      const readState = constant$1({});\n      return nu$8({\n        readState,\n        reset,\n        update,\n        getStartData,\n        setStartData\n      });\n    };\n\n    var DragState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init\n    });\n\n    const Dragging = createModes({\n      branchKey: 'mode',\n      branches: DraggingBranches,\n      name: 'dragging',\n      active: {\n        events: (dragConfig, dragState) => {\n          const dragger = dragConfig.dragger;\n          return dragger.handlers(dragConfig, dragState);\n        }\n      },\n      extra: {\n        snap: sConfig => ({\n          sensor: sConfig.sensor,\n          range: sConfig.range,\n          output: sConfig.output,\n          extra: Optional.from(sConfig.extra)\n        })\n      },\n      state: DragState,\n      apis: DraggingApis\n    });\n\n    const snapWidth = 40;\n    const snapOffset = snapWidth / 2;\n    const calcSnap = (selectorOpt, td, x, y, width, height) => selectorOpt.fold(() => Dragging.snap({\n      sensor: absolute(x - snapOffset, y - snapOffset),\n      range: SugarPosition(width, height),\n      output: absolute(Optional.some(x), Optional.some(y)),\n      extra: { td }\n    }), selectorHandle => {\n      const sensorLeft = x - snapOffset;\n      const sensorTop = y - snapOffset;\n      const sensorWidth = snapWidth;\n      const sensorHeight = snapWidth;\n      const rect = selectorHandle.element.dom.getBoundingClientRect();\n      return Dragging.snap({\n        sensor: absolute(sensorLeft, sensorTop),\n        range: SugarPosition(sensorWidth, sensorHeight),\n        output: absolute(Optional.some(x - rect.width / 2), Optional.some(y - rect.height / 2)),\n        extra: { td }\n      });\n    });\n    const getSnapsConfig = (getSnapPoints, cell, onChange) => {\n      const isSameCell = (cellOpt, td) => cellOpt.exists(currentTd => eq(currentTd, td));\n      return {\n        getSnapPoints,\n        leftAttr: 'data-drag-left',\n        topAttr: 'data-drag-top',\n        onSensor: (component, extra) => {\n          const td = extra.td;\n          if (!isSameCell(cell.get(), td)) {\n            cell.set(td);\n            onChange(td);\n          }\n        },\n        mustSnap: true\n      };\n    };\n    const createSelector = snaps => record(Button.sketch({\n      dom: {\n        tag: 'div',\n        classes: ['tox-selector']\n      },\n      buttonBehaviours: derive$1([\n        Dragging.config({\n          mode: 'mouseOrTouch',\n          blockerClass: 'blocker',\n          snaps\n        }),\n        Unselecting.config({})\n      ]),\n      eventOrder: {\n        mousedown: [\n          'dragging',\n          'alloy.base.behaviour'\n        ],\n        touchstart: [\n          'dragging',\n          'alloy.base.behaviour'\n        ]\n      }\n    }));\n    const setup$4 = (editor, sink) => {\n      const tlTds = Cell([]);\n      const brTds = Cell([]);\n      const isVisible = Cell(false);\n      const startCell = value$2();\n      const finishCell = value$2();\n      const getTopLeftSnap = td => {\n        const box = absolute$2(td);\n        return calcSnap(memTopLeft.getOpt(sink), td, box.x, box.y, box.width, box.height);\n      };\n      const getTopLeftSnaps = () => map$2(tlTds.get(), td => getTopLeftSnap(td));\n      const getBottomRightSnap = td => {\n        const box = absolute$2(td);\n        return calcSnap(memBottomRight.getOpt(sink), td, box.right, box.bottom, box.width, box.height);\n      };\n      const getBottomRightSnaps = () => map$2(brTds.get(), td => getBottomRightSnap(td));\n      const topLeftSnaps = getSnapsConfig(getTopLeftSnaps, startCell, start => {\n        finishCell.get().each(finish => {\n          editor.dispatch('TableSelectorChange', {\n            start,\n            finish\n          });\n        });\n      });\n      const bottomRightSnaps = getSnapsConfig(getBottomRightSnaps, finishCell, finish => {\n        startCell.get().each(start => {\n          editor.dispatch('TableSelectorChange', {\n            start,\n            finish\n          });\n        });\n      });\n      const memTopLeft = createSelector(topLeftSnaps);\n      const memBottomRight = createSelector(bottomRightSnaps);\n      const topLeft = build$1(memTopLeft.asSpec());\n      const bottomRight = build$1(memBottomRight.asSpec());\n      const showOrHideHandle = (selector, cell, isAbove, isBelow) => {\n        const cellRect = cell.dom.getBoundingClientRect();\n        remove$6(selector.element, 'display');\n        const viewportHeight = defaultView(SugarElement.fromDom(editor.getBody())).dom.innerHeight;\n        const aboveViewport = isAbove(cellRect);\n        const belowViewport = isBelow(cellRect, viewportHeight);\n        if (aboveViewport || belowViewport) {\n          set$8(selector.element, 'display', 'none');\n        }\n      };\n      const snapTo = (selector, cell, getSnapConfig, pos) => {\n        const snap = getSnapConfig(cell);\n        Dragging.snapTo(selector, snap);\n        const isAbove = rect => rect[pos] < 0;\n        const isBelow = (rect, viewportHeight) => rect[pos] > viewportHeight;\n        showOrHideHandle(selector, cell, isAbove, isBelow);\n      };\n      const snapTopLeft = cell => snapTo(topLeft, cell, getTopLeftSnap, 'top');\n      const snapLastTopLeft = () => startCell.get().each(snapTopLeft);\n      const snapBottomRight = cell => snapTo(bottomRight, cell, getBottomRightSnap, 'bottom');\n      const snapLastBottomRight = () => finishCell.get().each(snapBottomRight);\n      if (detect$1().deviceType.isTouch()) {\n        editor.on('TableSelectionChange', e => {\n          if (!isVisible.get()) {\n            attach(sink, topLeft);\n            attach(sink, bottomRight);\n            isVisible.set(true);\n          }\n          startCell.set(e.start);\n          finishCell.set(e.finish);\n          e.otherCells.each(otherCells => {\n            tlTds.set(otherCells.upOrLeftCells);\n            brTds.set(otherCells.downOrRightCells);\n            snapTopLeft(e.start);\n            snapBottomRight(e.finish);\n          });\n        });\n        editor.on('ResizeEditor ResizeWindow ScrollContent', () => {\n          snapLastTopLeft();\n          snapLastBottomRight();\n        });\n        editor.on('TableSelectionClear', () => {\n          if (isVisible.get()) {\n            detach(topLeft);\n            detach(bottomRight);\n            isVisible.set(false);\n          }\n          startCell.clear();\n          finishCell.clear();\n        });\n      }\n    };\n\n    var Logo = \"<svg width=\\\"50px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 50 16\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M10.143 0c2.608.015 5.186 2.178 5.186 5.331 0 0 .077 3.812-.084 4.87-.361 2.41-2.164 4.074-4.65 4.496-1.453.284-2.523.49-3.212.623-.373.071-.634.122-.785.152-.184.038-.997.145-1.35.145-2.732 0-5.21-2.04-5.248-5.33 0 0 0-3.514.03-4.442.093-2.4 1.758-4.342 4.926-4.963 0 0 3.875-.752 4.036-.782.368-.07.775-.1 1.15-.1Zm1.826 2.8L5.83 3.989v2.393l-2.455.475v5.968l6.137-1.189V9.243l2.456-.476V2.8ZM5.83 6.382l3.682-.713v3.574l-3.682.713V6.382Zm27.173-1.64-.084-1.066h-2.226v9.132h2.456V7.743c-.008-1.151.998-2.064 2.149-2.072 1.15-.008 1.987.92 1.995 2.072v5.065h2.455V7.359c-.015-2.18-1.657-3.929-3.837-3.913a3.993 3.993 0 0 0-2.908 1.296Zm-6.3-4.266L29.16 0v2.387l-2.456.475V.476Zm0 3.2v9.132h2.456V3.676h-2.456Zm18.179 11.787L49.11 3.676H46.58l-1.612 4.527-.46 1.382-.384-1.382-1.611-4.527H39.98l3.3 9.132L42.15 16l2.732-.537ZM22.867 9.738c0 .752.568 1.075.921 1.075.353 0 .668-.047.998-.154l.537 1.765c-.23.154-.92.537-2.225.537-1.305 0-2.655-.997-2.686-2.686a136.877 136.877 0 0 1 0-4.374H18.8V3.676h1.612v-1.98l2.455-.476v2.456h2.302V5.9h-2.302v3.837Z\\\"/>\\n</svg>\\n\";\n\n    const isHidden = elm => elm.nodeName === 'BR' || !!elm.getAttribute('data-mce-bogus') || elm.getAttribute('data-mce-type') === 'bookmark';\n    const renderElementPath = (editor, settings, providersBackstage) => {\n      var _a;\n      const delimiter = (_a = settings.delimiter) !== null && _a !== void 0 ? _a : '\\u203A';\n      const renderElement = (name, element, index) => Button.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar__path-item'],\n          attributes: {\n            'data-index': index,\n            'aria-level': index + 1\n          }\n        },\n        components: [text$1(name)],\n        action: _btn => {\n          editor.focus();\n          editor.selection.select(element);\n          editor.nodeChanged();\n        },\n        buttonBehaviours: derive$1([\n          DisablingConfigs.button(providersBackstage.isDisabled),\n          receivingConfig()\n        ])\n      });\n      const renderDivider = () => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar__path-divider'],\n          attributes: { 'aria-hidden': true }\n        },\n        components: [text$1(` ${ delimiter } `)]\n      });\n      const renderPathData = data => foldl(data, (acc, path, index) => {\n        const element = renderElement(path.name, path.element, index);\n        if (index === 0) {\n          return acc.concat([element]);\n        } else {\n          return acc.concat([\n            renderDivider(),\n            element\n          ]);\n        }\n      }, []);\n      const updatePath = parents => {\n        const newPath = [];\n        let i = parents.length;\n        while (i-- > 0) {\n          const parent = parents[i];\n          if (parent.nodeType === 1 && !isHidden(parent)) {\n            const args = fireResolveName(editor, parent);\n            if (!args.isDefaultPrevented()) {\n              newPath.push({\n                name: args.name,\n                element: parent\n              });\n            }\n            if (args.isPropagationStopped()) {\n              break;\n            }\n          }\n        }\n        return newPath;\n      };\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar__path'],\n          attributes: { role: 'navigation' }\n        },\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'flow',\n            selector: 'div[role=button]'\n          }),\n          Disabling.config({ disabled: providersBackstage.isDisabled }),\n          receivingConfig(),\n          Tabstopping.config({}),\n          Replacing.config({}),\n          config('elementPathEvents', [runOnAttached((comp, _e) => {\n              editor.shortcuts.add('alt+F11', 'focus statusbar elementpath', () => Keying.focusIn(comp));\n              editor.on('NodeChange', e => {\n                const newPath = updatePath(e.parents);\n                const newChildren = newPath.length > 0 ? renderPathData(newPath) : [];\n                Replacing.set(comp, newChildren);\n              });\n            })])\n        ]),\n        components: []\n      };\n    };\n\n    var ResizeTypes;\n    (function (ResizeTypes) {\n      ResizeTypes[ResizeTypes['None'] = 0] = 'None';\n      ResizeTypes[ResizeTypes['Both'] = 1] = 'Both';\n      ResizeTypes[ResizeTypes['Vertical'] = 2] = 'Vertical';\n    }(ResizeTypes || (ResizeTypes = {})));\n    const getDimensions = (editor, deltas, resizeType, originalHeight, originalWidth) => {\n      const dimensions = { height: calcCappedSize(originalHeight + deltas.top, getMinHeightOption(editor), getMaxHeightOption(editor)) };\n      if (resizeType === ResizeTypes.Both) {\n        dimensions.width = calcCappedSize(originalWidth + deltas.left, getMinWidthOption(editor), getMaxWidthOption(editor));\n      }\n      return dimensions;\n    };\n    const resize = (editor, deltas, resizeType) => {\n      const container = SugarElement.fromDom(editor.getContainer());\n      const dimensions = getDimensions(editor, deltas, resizeType, get$d(container), get$c(container));\n      each(dimensions, (val, dim) => {\n        if (isNumber(val)) {\n          set$8(container, dim, numToPx(val));\n        }\n      });\n      fireResizeEditor(editor);\n    };\n\n    const getResizeType = editor => {\n      const resize = getResize(editor);\n      if (resize === false) {\n        return ResizeTypes.None;\n      } else if (resize === 'both') {\n        return ResizeTypes.Both;\n      } else {\n        return ResizeTypes.Vertical;\n      }\n    };\n    const keyboardHandler = (editor, resizeType, x, y) => {\n      const scale = 20;\n      const delta = SugarPosition(x * scale, y * scale);\n      resize(editor, delta, resizeType);\n      return Optional.some(true);\n    };\n    const renderResizeHandler = (editor, providersBackstage) => {\n      const resizeType = getResizeType(editor);\n      if (resizeType === ResizeTypes.None) {\n        return Optional.none();\n      }\n      return Optional.some(render$3('resize-handle', {\n        tag: 'div',\n        classes: ['tox-statusbar__resize-handle'],\n        attributes: { title: providersBackstage.translate('Resize') },\n        behaviours: [\n          Dragging.config({\n            mode: 'mouse',\n            repositionTarget: false,\n            onDrag: (_comp, _target, delta) => resize(editor, delta, resizeType),\n            blockerClass: 'tox-blocker'\n          }),\n          Keying.config({\n            mode: 'special',\n            onLeft: () => keyboardHandler(editor, resizeType, -1, 0),\n            onRight: () => keyboardHandler(editor, resizeType, 1, 0),\n            onUp: () => keyboardHandler(editor, resizeType, 0, -1),\n            onDown: () => keyboardHandler(editor, resizeType, 0, 1)\n          }),\n          Tabstopping.config({}),\n          Focusing.config({})\n        ]\n      }, providersBackstage.icons));\n    };\n\n    const renderWordCount = (editor, providersBackstage) => {\n      const replaceCountText = (comp, count, mode) => Replacing.set(comp, [text$1(providersBackstage.translate([\n          '{0} ' + mode,\n          count[mode]\n        ]))]);\n      return Button.sketch({\n        dom: {\n          tag: 'button',\n          classes: ['tox-statusbar__wordcount']\n        },\n        components: [],\n        buttonBehaviours: derive$1([\n          DisablingConfigs.button(providersBackstage.isDisabled),\n          receivingConfig(),\n          Tabstopping.config({}),\n          Replacing.config({}),\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: {\n                mode: 'words',\n                count: {\n                  words: 0,\n                  characters: 0\n                }\n              }\n            }\n          }),\n          config('wordcount-events', [\n            runOnExecute$1(comp => {\n              const currentVal = Representing.getValue(comp);\n              const newMode = currentVal.mode === 'words' ? 'characters' : 'words';\n              Representing.setValue(comp, {\n                mode: newMode,\n                count: currentVal.count\n              });\n              replaceCountText(comp, currentVal.count, newMode);\n            }),\n            runOnAttached(comp => {\n              editor.on('wordCountUpdate', e => {\n                const {mode} = Representing.getValue(comp);\n                Representing.setValue(comp, {\n                  mode,\n                  count: e.wordCount\n                });\n                replaceCountText(comp, e.wordCount, mode);\n              });\n            })\n          ])\n        ]),\n        eventOrder: {\n          [execute$5()]: [\n            'disabling',\n            'alloy.base.behaviour',\n            'wordcount-events'\n          ]\n        }\n      });\n    };\n\n    const renderStatusbar = (editor, providersBackstage) => {\n      const renderBranding = () => {\n        return {\n          dom: {\n            tag: 'span',\n            classes: ['tox-statusbar__branding']\n          },\n          components: [{\n              dom: {\n                tag: 'a',\n                attributes: {\n                  'href': 'https://www.tiny.cloud/powered-by-tiny?utm_campaign=editor_referral&utm_medium=poweredby&utm_source=tinymce&utm_content=v6',\n                  'rel': 'noopener',\n                  'target': '_blank',\n                  'aria-label': global$8.translate([\n                    'Powered by {0}',\n                    'Tiny'\n                  ])\n                },\n                innerHtml: Logo.trim()\n              },\n              behaviours: derive$1([Focusing.config({})])\n            }]\n        };\n      };\n      const getTextComponents = () => {\n        const components = [];\n        if (useElementPath(editor)) {\n          components.push(renderElementPath(editor, {}, providersBackstage));\n        }\n        if (editor.hasPlugin('wordcount')) {\n          components.push(renderWordCount(editor, providersBackstage));\n        }\n        if (useBranding(editor)) {\n          components.push(renderBranding());\n        }\n        if (components.length > 0) {\n          return [{\n              dom: {\n                tag: 'div',\n                classes: ['tox-statusbar__text-container']\n              },\n              components\n            }];\n        }\n        return [];\n      };\n      const getComponents = () => {\n        const components = getTextComponents();\n        const resizeHandler = renderResizeHandler(editor, providersBackstage);\n        return components.concat(resizeHandler.toArray());\n      };\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar']\n        },\n        components: getComponents()\n      };\n    };\n\n    const getLazyMothership = singleton => singleton.get().getOrDie('UI has not been rendered');\n    const setup$3 = editor => {\n      const isInline = editor.inline;\n      const mode = isInline ? Inline : Iframe;\n      const header = isStickyToolbar(editor) ? StickyHeader : StaticHeader;\n      const lazySink = value$2();\n      const lazyOuterContainer = value$2();\n      const lazyMothership = value$2();\n      const lazyUiMothership = value$2();\n      const platform = detect$1();\n      const isTouch = platform.deviceType.isTouch();\n      const touchPlatformClass = 'tox-platform-touch';\n      const deviceClasses = isTouch ? [touchPlatformClass] : [];\n      const isToolbarBottom = isToolbarLocationBottom(editor);\n      const toolbarMode = getToolbarMode(editor);\n      const memAnchorBar = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-anchorbar']\n        }\n      });\n      const lazyHeader = () => lazyOuterContainer.get().bind(OuterContainer.getHeader);\n      const lazySinkResult = () => Result.fromOption(lazySink.get(), 'UI has not been rendered');\n      const lazyAnchorBar = () => lazyOuterContainer.get().bind(container => memAnchorBar.getOpt(container)).getOrDie('Could not find a anchor bar element');\n      const lazyToolbar = () => lazyOuterContainer.get().bind(container => OuterContainer.getToolbar(container)).getOrDie('Could not find more toolbar element');\n      const lazyThrobber = () => lazyOuterContainer.get().bind(container => OuterContainer.getThrobber(container)).getOrDie('Could not find throbber element');\n      const backstage = init$7(lazySinkResult, editor, lazyAnchorBar);\n      const makeHeaderPart = () => {\n        const verticalDirAttributes = { attributes: { [Attribute]: isToolbarBottom ? AttributeValue.BottomToTop : AttributeValue.TopToBottom } };\n        const partMenubar = OuterContainer.parts.menubar({\n          dom: {\n            tag: 'div',\n            classes: ['tox-menubar']\n          },\n          backstage,\n          onEscape: () => {\n            editor.focus();\n          }\n        });\n        const partToolbar = OuterContainer.parts.toolbar({\n          dom: {\n            tag: 'div',\n            classes: ['tox-toolbar']\n          },\n          getSink: lazySinkResult,\n          providers: backstage.shared.providers,\n          onEscape: () => {\n            editor.focus();\n          },\n          type: toolbarMode,\n          lazyToolbar,\n          lazyHeader: () => lazyHeader().getOrDie('Could not find header element'),\n          ...verticalDirAttributes\n        });\n        const partMultipleToolbar = OuterContainer.parts['multiple-toolbar']({\n          dom: {\n            tag: 'div',\n            classes: ['tox-toolbar-overlord']\n          },\n          providers: backstage.shared.providers,\n          onEscape: () => {\n            editor.focus();\n          },\n          type: toolbarMode\n        });\n        const hasMultipleToolbar = isMultipleToolbars(editor);\n        const hasToolbar = isToolbarEnabled(editor);\n        const hasMenubar = isMenubarEnabled(editor);\n        const shouldHavePromotion = promotionEnabled(editor);\n        const partPromotion = makePromotion();\n        const getPartToolbar = () => {\n          if (hasMultipleToolbar) {\n            return [partMultipleToolbar];\n          } else if (hasToolbar) {\n            return [partToolbar];\n          } else {\n            return [];\n          }\n        };\n        const menubarCollection = shouldHavePromotion ? [\n          partPromotion,\n          partMenubar\n        ] : [partMenubar];\n        return OuterContainer.parts.header({\n          dom: {\n            tag: 'div',\n            classes: ['tox-editor-header'],\n            ...verticalDirAttributes\n          },\n          components: flatten([\n            hasMenubar ? menubarCollection : [],\n            getPartToolbar(),\n            useFixedContainer(editor) ? [] : [memAnchorBar.asSpec()]\n          ]),\n          sticky: isStickyToolbar(editor),\n          editor,\n          sharedBackstage: backstage.shared\n        });\n      };\n      const makePromotion = () => {\n        return OuterContainer.parts.promotion({\n          dom: {\n            tag: 'div',\n            classes: ['tox-promotion']\n          }\n        });\n      };\n      const makeSidebarDefinition = () => {\n        const partSocket = OuterContainer.parts.socket({\n          dom: {\n            tag: 'div',\n            classes: ['tox-edit-area']\n          }\n        });\n        const partSidebar = OuterContainer.parts.sidebar({\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar']\n          }\n        });\n        return {\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar-wrap']\n          },\n          components: [\n            partSocket,\n            partSidebar\n          ]\n        };\n      };\n      const renderSink = () => {\n        const uiContainer = getUiContainer(editor);\n        const isGridUiContainer = eq(body(), uiContainer) && get$e(uiContainer, 'display') === 'grid';\n        const sinkSpec = {\n          dom: {\n            tag: 'div',\n            classes: [\n              'tox',\n              'tox-silver-sink',\n              'tox-tinymce-aux'\n            ].concat(deviceClasses),\n            attributes: { ...global$8.isRtl() ? { dir: 'rtl' } : {} }\n          },\n          behaviours: derive$1([Positioning.config({ useFixed: () => header.isDocked(lazyHeader) })])\n        };\n        const reactiveWidthSpec = {\n          dom: { styles: { width: document.body.clientWidth + 'px' } },\n          events: derive$2([run$1(windowResize(), comp => {\n              set$8(comp.element, 'width', document.body.clientWidth + 'px');\n            })])\n        };\n        const sink = build$1(deepMerge(sinkSpec, isGridUiContainer ? reactiveWidthSpec : {}));\n        const uiMothership = takeover(sink);\n        lazySink.set(sink);\n        lazyUiMothership.set(uiMothership);\n        return {\n          sink,\n          uiMothership\n        };\n      };\n      const renderContainer = () => {\n        const partHeader = makeHeaderPart();\n        const sidebarContainer = makeSidebarDefinition();\n        const partThrobber = OuterContainer.parts.throbber({\n          dom: {\n            tag: 'div',\n            classes: ['tox-throbber']\n          },\n          backstage\n        });\n        const statusbar = useStatusBar(editor) && !isInline ? Optional.some(renderStatusbar(editor, backstage.shared.providers)) : Optional.none();\n        const editorComponents = flatten([\n          isToolbarBottom ? [] : [partHeader],\n          isInline ? [] : [sidebarContainer],\n          isToolbarBottom ? [partHeader] : []\n        ]);\n        const editorContainer = {\n          dom: {\n            tag: 'div',\n            classes: ['tox-editor-container']\n          },\n          components: editorComponents\n        };\n        const containerComponents = flatten([\n          [editorContainer],\n          isInline ? [] : statusbar.toArray(),\n          [partThrobber]\n        ]);\n        const isHidden = isDistractionFree(editor);\n        const attributes = {\n          role: 'application',\n          ...global$8.isRtl() ? { dir: 'rtl' } : {},\n          ...isHidden ? { 'aria-hidden': 'true' } : {}\n        };\n        const outerContainer = build$1(OuterContainer.sketch({\n          dom: {\n            tag: 'div',\n            classes: [\n              'tox',\n              'tox-tinymce'\n            ].concat(isInline ? ['tox-tinymce-inline'] : []).concat(isToolbarBottom ? ['tox-tinymce--toolbar-bottom'] : []).concat(deviceClasses),\n            styles: {\n              visibility: 'hidden',\n              ...isHidden ? {\n                opacity: '0',\n                border: '0'\n              } : {}\n            },\n            attributes\n          },\n          components: containerComponents,\n          behaviours: derive$1([\n            receivingConfig(),\n            Disabling.config({ disableClass: 'tox-tinymce--disabled' }),\n            Keying.config({\n              mode: 'cyclic',\n              selector: '.tox-menubar, .tox-toolbar, .tox-toolbar__primary, .tox-toolbar__overflow--open, .tox-sidebar__overflow--open, .tox-statusbar__path, .tox-statusbar__wordcount, .tox-statusbar__branding a, .tox-statusbar__resize-handle'\n            })\n          ])\n        }));\n        const mothership = takeover(outerContainer);\n        lazyOuterContainer.set(outerContainer);\n        lazyMothership.set(mothership);\n        return {\n          mothership,\n          outerContainer\n        };\n      };\n      const setEditorSize = outerContainer => {\n        const parsedHeight = numToPx(getHeightWithFallback(editor));\n        const parsedWidth = numToPx(getWidthWithFallback(editor));\n        if (!editor.inline) {\n          if (isValidValue('div', 'width', parsedWidth)) {\n            set$8(outerContainer.element, 'width', parsedWidth);\n          }\n          if (isValidValue('div', 'height', parsedHeight)) {\n            set$8(outerContainer.element, 'height', parsedHeight);\n          } else {\n            set$8(outerContainer.element, 'height', '400px');\n          }\n        }\n        return parsedHeight;\n      };\n      const setupShortcutsAndCommands = outerContainer => {\n        editor.addShortcut('alt+F9', 'focus menubar', () => {\n          OuterContainer.focusMenubar(outerContainer);\n        });\n        editor.addShortcut('alt+F10', 'focus toolbar', () => {\n          OuterContainer.focusToolbar(outerContainer);\n        });\n        editor.addCommand('ToggleToolbarDrawer', () => {\n          OuterContainer.toggleToolbarDrawer(outerContainer);\n        });\n        editor.addQueryStateHandler('ToggleToolbarDrawer', () => OuterContainer.isToolbarDrawerToggled(outerContainer));\n      };\n      const renderUI = () => {\n        const {mothership, outerContainer} = renderContainer();\n        const {uiMothership, sink} = renderSink();\n        map$1(getToolbarGroups(editor), (toolbarGroupButtonConfig, name) => {\n          editor.ui.registry.addGroupToolbarButton(name, toolbarGroupButtonConfig);\n        });\n        const {buttons, menuItems, contextToolbars, sidebars} = editor.ui.registry.getAll();\n        const toolbarOpt = getMultipleToolbarsOption(editor);\n        const rawUiConfig = {\n          menuItems,\n          menus: getMenus(editor),\n          menubar: getMenubar(editor),\n          toolbar: toolbarOpt.getOrThunk(() => getToolbar(editor)),\n          allowToolbarGroups: toolbarMode === ToolbarMode$1.floating,\n          buttons,\n          sidebar: sidebars\n        };\n        setupShortcutsAndCommands(outerContainer);\n        setup$b(editor, mothership, uiMothership);\n        header.setup(editor, backstage.shared, lazyHeader);\n        setup$6(editor, backstage);\n        setup$5(editor, lazySinkResult, backstage);\n        setup$8(editor);\n        setup$7(editor, lazyThrobber, backstage.shared);\n        register$9(editor, contextToolbars, sink, { backstage });\n        setup$4(editor, sink);\n        const elm = editor.getElement();\n        const height = setEditorSize(outerContainer);\n        const uiComponents = {\n          mothership,\n          uiMothership,\n          outerContainer,\n          sink\n        };\n        const args = {\n          targetNode: elm,\n          height\n        };\n        return mode.render(editor, uiComponents, rawUiConfig, backstage, args);\n      };\n      const getMothership = () => getLazyMothership(lazyMothership);\n      const getUiMothership = () => getLazyMothership(lazyUiMothership);\n      return {\n        getMothership,\n        getUiMothership,\n        backstage,\n        renderUI\n      };\n    };\n\n    const describedBy = (describedElement, describeElement) => {\n      const describeId = Optional.from(get$f(describedElement, 'id')).fold(() => {\n        const id = generate$6('dialog-describe');\n        set$9(describeElement, 'id', id);\n        return id;\n      }, identity);\n      set$9(describedElement, 'aria-describedby', describeId);\n    };\n\n    const labelledBy = (labelledElement, labelElement) => {\n      const labelId = getOpt(labelledElement, 'id').fold(() => {\n        const id = generate$6('dialog-label');\n        set$9(labelElement, 'id', id);\n        return id;\n      }, identity);\n      set$9(labelledElement, 'aria-labelledby', labelId);\n    };\n\n    const schema$2 = constant$1([\n      required$1('lazySink'),\n      option$3('dragBlockClass'),\n      defaultedFunction('getBounds', win),\n      defaulted('useTabstopAt', always),\n      defaulted('eventOrder', {}),\n      field('modalBehaviours', [Keying]),\n      onKeyboardHandler('onExecute'),\n      onStrictKeyboardHandler('onEscape')\n    ]);\n    const basic = { sketch: identity };\n    const parts$2 = constant$1([\n      optional({\n        name: 'draghandle',\n        overrides: (detail, spec) => {\n          return {\n            behaviours: derive$1([Dragging.config({\n                mode: 'mouse',\n                getTarget: handle => {\n                  return ancestor(handle, '[role=\"dialog\"]').getOr(handle);\n                },\n                blockerClass: detail.dragBlockClass.getOrDie(new Error('The drag blocker class was not specified for a dialog with a drag handle: \\n' + JSON.stringify(spec, null, 2)).message),\n                getBounds: detail.getDragBounds\n              })])\n          };\n        }\n      }),\n      required({\n        schema: [required$1('dom')],\n        name: 'title'\n      }),\n      required({\n        factory: basic,\n        schema: [required$1('dom')],\n        name: 'close'\n      }),\n      required({\n        factory: basic,\n        schema: [required$1('dom')],\n        name: 'body'\n      }),\n      optional({\n        factory: basic,\n        schema: [required$1('dom')],\n        name: 'footer'\n      }),\n      external({\n        factory: {\n          sketch: (spec, detail) => ({\n            ...spec,\n            dom: detail.dom,\n            components: detail.components\n          })\n        },\n        schema: [\n          defaulted('dom', {\n            tag: 'div',\n            styles: {\n              position: 'fixed',\n              left: '0px',\n              top: '0px',\n              right: '0px',\n              bottom: '0px'\n            }\n          }),\n          defaulted('components', [])\n        ],\n        name: 'blocker'\n      })\n    ]);\n\n    const factory$4 = (detail, components, spec, externals) => {\n      const dialogComp = value$2();\n      const showDialog = dialog => {\n        dialogComp.set(dialog);\n        const sink = detail.lazySink(dialog).getOrDie();\n        const externalBlocker = externals.blocker();\n        const blocker = sink.getSystem().build({\n          ...externalBlocker,\n          components: externalBlocker.components.concat([premade(dialog)]),\n          behaviours: derive$1([\n            Focusing.config({}),\n            config('dialog-blocker-events', [runOnSource(focusin(), () => {\n                Keying.focusIn(dialog);\n              })])\n          ])\n        });\n        attach(sink, blocker);\n        Keying.focusIn(dialog);\n      };\n      const hideDialog = dialog => {\n        dialogComp.clear();\n        parent(dialog.element).each(blockerDom => {\n          dialog.getSystem().getByDom(blockerDom).each(blocker => {\n            detach(blocker);\n          });\n        });\n      };\n      const getDialogBody = dialog => getPartOrDie(dialog, detail, 'body');\n      const getDialogFooter = dialog => getPartOrDie(dialog, detail, 'footer');\n      const setBusy = (dialog, getBusySpec) => {\n        Blocking.block(dialog, getBusySpec);\n      };\n      const setIdle = dialog => {\n        Blocking.unblock(dialog);\n      };\n      const modalEventsId = generate$6('modal-events');\n      const eventOrder = {\n        ...detail.eventOrder,\n        [attachedToDom()]: [modalEventsId].concat(detail.eventOrder['alloy.system.attached'] || [])\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        apis: {\n          show: showDialog,\n          hide: hideDialog,\n          getBody: getDialogBody,\n          getFooter: getDialogFooter,\n          setIdle,\n          setBusy\n        },\n        eventOrder,\n        domModification: {\n          attributes: {\n            'role': 'dialog',\n            'aria-modal': 'true'\n          }\n        },\n        behaviours: augment(detail.modalBehaviours, [\n          Replacing.config({}),\n          Keying.config({\n            mode: 'cyclic',\n            onEnter: detail.onExecute,\n            onEscape: detail.onEscape,\n            useTabstopAt: detail.useTabstopAt\n          }),\n          Blocking.config({ getRoot: dialogComp.get }),\n          config(modalEventsId, [runOnAttached(c => {\n              labelledBy(c.element, getPartOrDie(c, detail, 'title').element);\n              describedBy(c.element, getPartOrDie(c, detail, 'body').element);\n            })])\n        ])\n      };\n    };\n    const ModalDialog = composite({\n      name: 'ModalDialog',\n      configFields: schema$2(),\n      partFields: parts$2(),\n      factory: factory$4,\n      apis: {\n        show: (apis, dialog) => {\n          apis.show(dialog);\n        },\n        hide: (apis, dialog) => {\n          apis.hide(dialog);\n        },\n        getBody: (apis, dialog) => apis.getBody(dialog),\n        getFooter: (apis, dialog) => apis.getFooter(dialog),\n        setBusy: (apis, dialog, getBusySpec) => {\n          apis.setBusy(dialog, getBusySpec);\n        },\n        setIdle: (apis, dialog) => {\n          apis.setIdle(dialog);\n        }\n      }\n    });\n\n    const dialogToggleMenuItemSchema = objOf([\n      type,\n      name$1\n    ].concat(commonMenuItemFields));\n    const dialogToggleMenuItemDataProcessor = boolean;\n\n    const baseFooterButtonFields = [\n      generatedName('button'),\n      optionalIcon,\n      defaultedStringEnum('align', 'end', [\n        'start',\n        'end'\n      ]),\n      primary,\n      enabled,\n      optionStringEnum('buttonType', [\n        'primary',\n        'secondary'\n      ])\n    ];\n    const dialogFooterButtonFields = [\n      ...baseFooterButtonFields,\n      text\n    ];\n    const normalFooterButtonFields = [\n      requiredStringEnum('type', [\n        'submit',\n        'cancel',\n        'custom'\n      ]),\n      ...dialogFooterButtonFields\n    ];\n    const menuFooterButtonFields = [\n      requiredStringEnum('type', ['menu']),\n      optionalText,\n      optionalTooltip,\n      optionalIcon,\n      requiredArrayOf('items', dialogToggleMenuItemSchema),\n      ...baseFooterButtonFields\n    ];\n    const dialogFooterButtonSchema = choose$1('type', {\n      submit: normalFooterButtonFields,\n      cancel: normalFooterButtonFields,\n      custom: normalFooterButtonFields,\n      menu: menuFooterButtonFields\n    });\n\n    const alertBannerFields = [\n      type,\n      text,\n      requiredStringEnum('level', [\n        'info',\n        'warn',\n        'error',\n        'success'\n      ]),\n      icon,\n      defaulted('url', '')\n    ];\n    const alertBannerSchema = objOf(alertBannerFields);\n\n    const createBarFields = itemsField => [\n      type,\n      itemsField\n    ];\n\n    const buttonFields = [\n      type,\n      text,\n      enabled,\n      generatedName('button'),\n      optionalIcon,\n      borderless,\n      optionStringEnum('buttonType', [\n        'primary',\n        'secondary',\n        'toolbar'\n      ]),\n      primary\n    ];\n    const buttonSchema = objOf(buttonFields);\n\n    const formComponentFields = [\n      type,\n      name$1\n    ];\n    const formComponentWithLabelFields = formComponentFields.concat([optionalLabel]);\n\n    const checkboxFields = formComponentFields.concat([\n      label,\n      enabled\n    ]);\n    const checkboxSchema = objOf(checkboxFields);\n    const checkboxDataProcessor = boolean;\n\n    const collectionFields = formComponentWithLabelFields.concat([defaultedColumns('auto')]);\n    const collectionSchema = objOf(collectionFields);\n    const collectionDataProcessor = arrOfObj([\n      value$1,\n      text,\n      icon\n    ]);\n\n    const colorInputFields = formComponentWithLabelFields;\n    const colorInputSchema = objOf(colorInputFields);\n    const colorInputDataProcessor = string;\n\n    const colorPickerFields = formComponentWithLabelFields;\n    const colorPickerSchema = objOf(colorPickerFields);\n    const colorPickerDataProcessor = string;\n\n    const customEditorFields = formComponentFields.concat([\n      defaultedString('tag', 'textarea'),\n      requiredString('scriptId'),\n      requiredString('scriptUrl'),\n      defaultedPostMsg('settings', undefined)\n    ]);\n    const customEditorFieldsOld = formComponentFields.concat([\n      defaultedString('tag', 'textarea'),\n      requiredFunction('init')\n    ]);\n    const customEditorSchema = valueOf(v => asRaw('customeditor.old', objOfOnly(customEditorFieldsOld), v).orThunk(() => asRaw('customeditor.new', objOfOnly(customEditorFields), v)));\n    const customEditorDataProcessor = string;\n\n    const dropZoneFields = formComponentWithLabelFields;\n    const dropZoneSchema = objOf(dropZoneFields);\n    const dropZoneDataProcessor = arrOfVal();\n\n    const createGridFields = itemsField => [\n      type,\n      requiredNumber('columns'),\n      itemsField\n    ];\n\n    const htmlPanelFields = [\n      type,\n      requiredString('html'),\n      defaultedStringEnum('presets', 'presentation', [\n        'presentation',\n        'document'\n      ])\n    ];\n    const htmlPanelSchema = objOf(htmlPanelFields);\n\n    const iframeFields = formComponentWithLabelFields.concat([\n      defaultedBoolean('sandboxed', true),\n      defaultedBoolean('transparent', true)\n    ]);\n    const iframeSchema = objOf(iframeFields);\n    const iframeDataProcessor = string;\n\n    const imagePreviewSchema = objOf(formComponentFields.concat([optionString('height')]));\n    const imagePreviewDataProcessor = objOf([\n      requiredString('url'),\n      optionNumber('zoom'),\n      optionNumber('cachedWidth'),\n      optionNumber('cachedHeight')\n    ]);\n\n    const inputFields = formComponentWithLabelFields.concat([\n      optionString('inputMode'),\n      optionString('placeholder'),\n      defaultedBoolean('maximized', false),\n      enabled\n    ]);\n    const inputSchema = objOf(inputFields);\n    const inputDataProcessor = string;\n\n    const createLabelFields = itemsField => [\n      type,\n      label,\n      itemsField\n    ];\n\n    const listBoxSingleItemFields = [\n      text,\n      value$1\n    ];\n    const listBoxNestedItemFields = [\n      text,\n      requiredArrayOf('items', thunkOf('items', () => listBoxItemSchema))\n    ];\n    const listBoxItemSchema = oneOf([\n      objOf(listBoxSingleItemFields),\n      objOf(listBoxNestedItemFields)\n    ]);\n    const listBoxFields = formComponentWithLabelFields.concat([\n      requiredArrayOf('items', listBoxItemSchema),\n      enabled\n    ]);\n    const listBoxSchema = objOf(listBoxFields);\n    const listBoxDataProcessor = string;\n\n    const selectBoxFields = formComponentWithLabelFields.concat([\n      requiredArrayOfObj('items', [\n        text,\n        value$1\n      ]),\n      defaultedNumber('size', 1),\n      enabled\n    ]);\n    const selectBoxSchema = objOf(selectBoxFields);\n    const selectBoxDataProcessor = string;\n\n    const sizeInputFields = formComponentWithLabelFields.concat([\n      defaultedBoolean('constrain', true),\n      enabled\n    ]);\n    const sizeInputSchema = objOf(sizeInputFields);\n    const sizeInputDataProcessor = objOf([\n      requiredString('width'),\n      requiredString('height')\n    ]);\n\n    const sliderFields = formComponentFields.concat([\n      label,\n      defaultedNumber('min', 0),\n      defaultedNumber('max', 0)\n    ]);\n    const sliderSchema = objOf(sliderFields);\n    const sliderInputDataProcessor = number;\n\n    const tableFields = [\n      type,\n      requiredArrayOf('header', string),\n      requiredArrayOf('cells', arrOf(string))\n    ];\n    const tableSchema = objOf(tableFields);\n\n    const textAreaFields = formComponentWithLabelFields.concat([\n      optionString('placeholder'),\n      defaultedBoolean('maximized', false),\n      enabled\n    ]);\n    const textAreaSchema = objOf(textAreaFields);\n    const textAreaDataProcessor = string;\n\n    const urlInputFields = formComponentWithLabelFields.concat([\n      defaultedStringEnum('filetype', 'file', [\n        'image',\n        'media',\n        'file'\n      ]),\n      enabled\n    ]);\n    const urlInputSchema = objOf(urlInputFields);\n    const urlInputDataProcessor = objOf([\n      value$1,\n      defaultedMeta\n    ]);\n\n    const createItemsField = name => field$1('items', 'items', required$2(), arrOf(valueOf(v => asRaw(`Checking item of ${ name }`, itemSchema, v).fold(sErr => Result.error(formatError(sErr)), passValue => Result.value(passValue)))));\n    const itemSchema = valueThunk(() => choose$2('type', {\n      alertbanner: alertBannerSchema,\n      bar: objOf(createBarFields(createItemsField('bar'))),\n      button: buttonSchema,\n      checkbox: checkboxSchema,\n      colorinput: colorInputSchema,\n      colorpicker: colorPickerSchema,\n      dropzone: dropZoneSchema,\n      grid: objOf(createGridFields(createItemsField('grid'))),\n      iframe: iframeSchema,\n      input: inputSchema,\n      listbox: listBoxSchema,\n      selectbox: selectBoxSchema,\n      sizeinput: sizeInputSchema,\n      slider: sliderSchema,\n      textarea: textAreaSchema,\n      urlinput: urlInputSchema,\n      customeditor: customEditorSchema,\n      htmlpanel: htmlPanelSchema,\n      imagepreview: imagePreviewSchema,\n      collection: collectionSchema,\n      label: objOf(createLabelFields(createItemsField('label'))),\n      table: tableSchema,\n      panel: panelSchema\n    }));\n    const panelFields = [\n      type,\n      defaulted('classes', []),\n      requiredArrayOf('items', itemSchema)\n    ];\n    const panelSchema = objOf(panelFields);\n\n    const tabFields = [\n      generatedName('tab'),\n      title,\n      requiredArrayOf('items', itemSchema)\n    ];\n    const tabPanelFields = [\n      type,\n      requiredArrayOfObj('tabs', tabFields)\n    ];\n    const tabPanelSchema = objOf(tabPanelFields);\n\n    const dialogButtonFields = dialogFooterButtonFields;\n    const dialogButtonSchema = dialogFooterButtonSchema;\n    const dialogSchema = objOf([\n      requiredString('title'),\n      requiredOf('body', choose$2('type', {\n        panel: panelSchema,\n        tabpanel: tabPanelSchema\n      })),\n      defaultedString('size', 'normal'),\n      requiredArrayOf('buttons', dialogButtonSchema),\n      defaulted('initialData', {}),\n      defaultedFunction('onAction', noop),\n      defaultedFunction('onChange', noop),\n      defaultedFunction('onSubmit', noop),\n      defaultedFunction('onClose', noop),\n      defaultedFunction('onCancel', noop),\n      defaultedFunction('onTabChange', noop)\n    ]);\n    const createDialog = spec => asRaw('dialog', dialogSchema, spec);\n\n    const urlDialogButtonSchema = objOf([\n      requiredStringEnum('type', [\n        'cancel',\n        'custom'\n      ]),\n      ...dialogButtonFields\n    ]);\n    const urlDialogSchema = objOf([\n      requiredString('title'),\n      requiredString('url'),\n      optionNumber('height'),\n      optionNumber('width'),\n      optionArrayOf('buttons', urlDialogButtonSchema),\n      defaultedFunction('onAction', noop),\n      defaultedFunction('onCancel', noop),\n      defaultedFunction('onClose', noop),\n      defaultedFunction('onMessage', noop)\n    ]);\n    const createUrlDialog = spec => asRaw('dialog', urlDialogSchema, spec);\n\n    const getAllObjects = obj => {\n      if (isObject(obj)) {\n        return [obj].concat(bind$3(values(obj), getAllObjects));\n      } else if (isArray(obj)) {\n        return bind$3(obj, getAllObjects);\n      } else {\n        return [];\n      }\n    };\n\n    const isNamedItem = obj => isString(obj.type) && isString(obj.name);\n    const dataProcessors = {\n      checkbox: checkboxDataProcessor,\n      colorinput: colorInputDataProcessor,\n      colorpicker: colorPickerDataProcessor,\n      dropzone: dropZoneDataProcessor,\n      input: inputDataProcessor,\n      iframe: iframeDataProcessor,\n      imagepreview: imagePreviewDataProcessor,\n      selectbox: selectBoxDataProcessor,\n      sizeinput: sizeInputDataProcessor,\n      slider: sliderInputDataProcessor,\n      listbox: listBoxDataProcessor,\n      size: sizeInputDataProcessor,\n      textarea: textAreaDataProcessor,\n      urlinput: urlInputDataProcessor,\n      customeditor: customEditorDataProcessor,\n      collection: collectionDataProcessor,\n      togglemenuitem: dialogToggleMenuItemDataProcessor\n    };\n    const getDataProcessor = item => Optional.from(dataProcessors[item.type]);\n    const getNamedItems = structure => filter$2(getAllObjects(structure), isNamedItem);\n\n    const createDataValidator = structure => {\n      const namedItems = getNamedItems(structure);\n      const fields = bind$3(namedItems, item => getDataProcessor(item).fold(() => [], schema => [requiredOf(item.name, schema)]));\n      return objOf(fields);\n    };\n\n    const extract = structure => {\n      var _a;\n      const internalDialog = getOrDie(createDialog(structure));\n      const dataValidator = createDataValidator(structure);\n      const initialData = (_a = structure.initialData) !== null && _a !== void 0 ? _a : {};\n      return {\n        internalDialog,\n        dataValidator,\n        initialData\n      };\n    };\n    const DialogManager = {\n      open: (factory, structure) => {\n        const extraction = extract(structure);\n        return factory(extraction.internalDialog, extraction.initialData, extraction.dataValidator);\n      },\n      openUrl: (factory, structure) => {\n        const internalDialog = getOrDie(createUrlDialog(structure));\n        return factory(internalDialog);\n      },\n      redial: structure => extract(structure)\n    };\n\n    const toValidValues = values => {\n      const errors = [];\n      const result = {};\n      each(values, (value, name) => {\n        value.fold(() => {\n          errors.push(name);\n        }, v => {\n          result[name] = v;\n        });\n      });\n      return errors.length > 0 ? Result.error(errors) : Result.value(result);\n    };\n\n    const renderBodyPanel = (spec, dialogData, backstage) => {\n      const memForm = record(Form.sketch(parts => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form'].concat(spec.classes)\n        },\n        components: map$2(spec.items, item => interpretInForm(parts, item, dialogData, backstage))\n      })));\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__body']\n        },\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-content']\n            },\n            components: [memForm.asSpec()]\n          }],\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'acyclic',\n            useTabstopAt: not(isPseudoStop)\n          }),\n          ComposingConfigs.memento(memForm),\n          RepresentingConfigs.memento(memForm, {\n            postprocess: formValue => toValidValues(formValue).fold(err => {\n              console.error(err);\n              return {};\n            }, identity)\n          })\n        ])\n      };\n    };\n\n    const factory$3 = (detail, _spec) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components: detail.components,\n      events: events$a(detail.action),\n      behaviours: augment(detail.tabButtonBehaviours, [\n        Focusing.config({}),\n        Keying.config({\n          mode: 'execution',\n          useSpace: true,\n          useEnter: true\n        }),\n        Representing.config({\n          store: {\n            mode: 'memory',\n            initialValue: detail.value\n          }\n        })\n      ]),\n      domModification: detail.domModification\n    });\n    const TabButton = single({\n      name: 'TabButton',\n      configFields: [\n        defaulted('uid', undefined),\n        required$1('value'),\n        field$1('dom', 'dom', mergeWithThunk(() => ({\n          attributes: {\n            'role': 'tab',\n            'id': generate$6('aria'),\n            'aria-selected': 'false'\n          }\n        })), anyValue()),\n        option$3('action'),\n        defaulted('domModification', {}),\n        field('tabButtonBehaviours', [\n          Focusing,\n          Keying,\n          Representing\n        ]),\n        required$1('view')\n      ],\n      factory: factory$3\n    });\n\n    const schema$1 = constant$1([\n      required$1('tabs'),\n      required$1('dom'),\n      defaulted('clickToDismiss', false),\n      field('tabbarBehaviours', [\n        Highlighting,\n        Keying\n      ]),\n      markers$1([\n        'tabClass',\n        'selectedClass'\n      ])\n    ]);\n    const tabsPart = group({\n      factory: TabButton,\n      name: 'tabs',\n      unit: 'tab',\n      overrides: barDetail => {\n        const dismissTab$1 = (tabbar, button) => {\n          Highlighting.dehighlight(tabbar, button);\n          emitWith(tabbar, dismissTab(), {\n            tabbar,\n            button\n          });\n        };\n        const changeTab$1 = (tabbar, button) => {\n          Highlighting.highlight(tabbar, button);\n          emitWith(tabbar, changeTab(), {\n            tabbar,\n            button\n          });\n        };\n        return {\n          action: button => {\n            const tabbar = button.getSystem().getByUid(barDetail.uid).getOrDie();\n            const activeButton = Highlighting.isHighlighted(tabbar, button);\n            const response = (() => {\n              if (activeButton && barDetail.clickToDismiss) {\n                return dismissTab$1;\n              } else if (!activeButton) {\n                return changeTab$1;\n              } else {\n                return noop;\n              }\n            })();\n            response(tabbar, button);\n          },\n          domModification: { classes: [barDetail.markers.tabClass] }\n        };\n      }\n    });\n    const parts$1 = constant$1([tabsPart]);\n\n    const factory$2 = (detail, components, _spec, _externals) => ({\n      'uid': detail.uid,\n      'dom': detail.dom,\n      components,\n      'debug.sketcher': 'Tabbar',\n      'domModification': { attributes: { role: 'tablist' } },\n      'behaviours': augment(detail.tabbarBehaviours, [\n        Highlighting.config({\n          highlightClass: detail.markers.selectedClass,\n          itemClass: detail.markers.tabClass,\n          onHighlight: (tabbar, tab) => {\n            set$9(tab.element, 'aria-selected', 'true');\n          },\n          onDehighlight: (tabbar, tab) => {\n            set$9(tab.element, 'aria-selected', 'false');\n          }\n        }),\n        Keying.config({\n          mode: 'flow',\n          getInitial: tabbar => {\n            return Highlighting.getHighlighted(tabbar).map(tab => tab.element);\n          },\n          selector: '.' + detail.markers.tabClass,\n          executeOnMove: true\n        })\n      ])\n    });\n    const Tabbar = composite({\n      name: 'Tabbar',\n      configFields: schema$1(),\n      partFields: parts$1(),\n      factory: factory$2\n    });\n\n    const factory$1 = (detail, _spec) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      behaviours: augment(detail.tabviewBehaviours, [Replacing.config({})]),\n      domModification: { attributes: { role: 'tabpanel' } }\n    });\n    const Tabview = single({\n      name: 'Tabview',\n      configFields: [field('tabviewBehaviours', [Replacing])],\n      factory: factory$1\n    });\n\n    const schema = constant$1([\n      defaulted('selectFirst', true),\n      onHandler('onChangeTab'),\n      onHandler('onDismissTab'),\n      defaulted('tabs', []),\n      field('tabSectionBehaviours', [])\n    ]);\n    const barPart = required({\n      factory: Tabbar,\n      schema: [\n        required$1('dom'),\n        requiredObjOf('markers', [\n          required$1('tabClass'),\n          required$1('selectedClass')\n        ])\n      ],\n      name: 'tabbar',\n      defaults: detail => {\n        return { tabs: detail.tabs };\n      }\n    });\n    const viewPart = required({\n      factory: Tabview,\n      name: 'tabview'\n    });\n    const parts = constant$1([\n      barPart,\n      viewPart\n    ]);\n\n    const factory = (detail, components, _spec, _externals) => {\n      const changeTab$1 = button => {\n        const tabValue = Representing.getValue(button);\n        getPart(button, detail, 'tabview').each(tabview => {\n          const tabWithValue = find$5(detail.tabs, t => t.value === tabValue);\n          tabWithValue.each(tabData => {\n            const panel = tabData.view();\n            getOpt(button.element, 'id').each(id => {\n              set$9(tabview.element, 'aria-labelledby', id);\n            });\n            Replacing.set(tabview, panel);\n            detail.onChangeTab(tabview, button, panel);\n          });\n        });\n      };\n      const changeTabBy = (section, byPred) => {\n        getPart(section, detail, 'tabbar').each(tabbar => {\n          byPred(tabbar).each(emitExecute);\n        });\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: get$3(detail.tabSectionBehaviours),\n        events: derive$2(flatten([\n          detail.selectFirst ? [runOnAttached((section, _simulatedEvent) => {\n              changeTabBy(section, Highlighting.getFirst);\n            })] : [],\n          [\n            run$1(changeTab(), (section, simulatedEvent) => {\n              const button = simulatedEvent.event.button;\n              changeTab$1(button);\n            }),\n            run$1(dismissTab(), (section, simulatedEvent) => {\n              const button = simulatedEvent.event.button;\n              detail.onDismissTab(section, button);\n            })\n          ]\n        ])),\n        apis: {\n          getViewItems: section => {\n            return getPart(section, detail, 'tabview').map(tabview => Replacing.contents(tabview)).getOr([]);\n          },\n          showTab: (section, tabKey) => {\n            const getTabIfNotActive = tabbar => {\n              const candidates = Highlighting.getCandidates(tabbar);\n              const optTab = find$5(candidates, c => Representing.getValue(c) === tabKey);\n              return optTab.filter(tab => !Highlighting.isHighlighted(tabbar, tab));\n            };\n            changeTabBy(section, getTabIfNotActive);\n          }\n        }\n      };\n    };\n    const TabSection = composite({\n      name: 'TabSection',\n      configFields: schema(),\n      partFields: parts(),\n      factory,\n      apis: {\n        getViewItems: (apis, component) => apis.getViewItems(component),\n        showTab: (apis, component, tabKey) => {\n          apis.showTab(component, tabKey);\n        }\n      }\n    });\n\n    const measureHeights = (allTabs, tabview, tabviewComp) => map$2(allTabs, (_tab, i) => {\n      Replacing.set(tabviewComp, allTabs[i].view());\n      const rect = tabview.dom.getBoundingClientRect();\n      Replacing.set(tabviewComp, []);\n      return rect.height;\n    });\n    const getMaxHeight = heights => head(sort(heights, (a, b) => {\n      if (a > b) {\n        return -1;\n      } else if (a < b) {\n        return +1;\n      } else {\n        return 0;\n      }\n    }));\n    const getMaxTabviewHeight = (dialog, tabview, tablist) => {\n      const documentElement$1 = documentElement(dialog).dom;\n      const rootElm = ancestor(dialog, '.tox-dialog-wrap').getOr(dialog);\n      const isFixed = get$e(rootElm, 'position') === 'fixed';\n      let maxHeight;\n      if (isFixed) {\n        maxHeight = Math.max(documentElement$1.clientHeight, window.innerHeight);\n      } else {\n        maxHeight = Math.max(documentElement$1.offsetHeight, documentElement$1.scrollHeight);\n      }\n      const tabviewHeight = get$d(tabview);\n      const isTabListBeside = tabview.dom.offsetLeft >= tablist.dom.offsetLeft + get$c(tablist);\n      const currentTabHeight = isTabListBeside ? Math.max(get$d(tablist), tabviewHeight) : tabviewHeight;\n      const dialogTopMargin = parseInt(get$e(dialog, 'margin-top'), 10) || 0;\n      const dialogBottomMargin = parseInt(get$e(dialog, 'margin-bottom'), 10) || 0;\n      const dialogHeight = get$d(dialog) + dialogTopMargin + dialogBottomMargin;\n      const chromeHeight = dialogHeight - currentTabHeight;\n      return maxHeight - chromeHeight;\n    };\n    const showTab = (allTabs, comp) => {\n      head(allTabs).each(tab => TabSection.showTab(comp, tab.value));\n    };\n    const setTabviewHeight = (tabview, height) => {\n      set$8(tabview, 'height', height + 'px');\n      set$8(tabview, 'flex-basis', height + 'px');\n    };\n    const updateTabviewHeight = (dialogBody, tabview, maxTabHeight) => {\n      ancestor(dialogBody, '[role=\"dialog\"]').each(dialog => {\n        descendant(dialog, '[role=\"tablist\"]').each(tablist => {\n          maxTabHeight.get().map(height => {\n            set$8(tabview, 'height', '0');\n            set$8(tabview, 'flex-basis', '0');\n            return Math.min(height, getMaxTabviewHeight(dialog, tabview, tablist));\n          }).each(height => {\n            setTabviewHeight(tabview, height);\n          });\n        });\n      });\n    };\n    const getTabview = dialog => descendant(dialog, '[role=\"tabpanel\"]');\n    const smartMode = allTabs => {\n      const maxTabHeight = value$2();\n      const extraEvents = [\n        runOnAttached(comp => {\n          const dialog = comp.element;\n          getTabview(dialog).each(tabview => {\n            set$8(tabview, 'visibility', 'hidden');\n            comp.getSystem().getByDom(tabview).toOptional().each(tabviewComp => {\n              const heights = measureHeights(allTabs, tabview, tabviewComp);\n              const maxTabHeightOpt = getMaxHeight(heights);\n              maxTabHeightOpt.fold(maxTabHeight.clear, maxTabHeight.set);\n            });\n            updateTabviewHeight(dialog, tabview, maxTabHeight);\n            remove$6(tabview, 'visibility');\n            showTab(allTabs, comp);\n            requestAnimationFrame(() => {\n              updateTabviewHeight(dialog, tabview, maxTabHeight);\n            });\n          });\n        }),\n        run$1(windowResize(), comp => {\n          const dialog = comp.element;\n          getTabview(dialog).each(tabview => {\n            updateTabviewHeight(dialog, tabview, maxTabHeight);\n          });\n        }),\n        run$1(formResizeEvent, (comp, _se) => {\n          const dialog = comp.element;\n          getTabview(dialog).each(tabview => {\n            const oldFocus = active$1(getRootNode(tabview));\n            set$8(tabview, 'visibility', 'hidden');\n            const oldHeight = getRaw(tabview, 'height').map(h => parseInt(h, 10));\n            remove$6(tabview, 'height');\n            remove$6(tabview, 'flex-basis');\n            const newHeight = tabview.dom.getBoundingClientRect().height;\n            const hasGrown = oldHeight.forall(h => newHeight > h);\n            if (hasGrown) {\n              maxTabHeight.set(newHeight);\n              updateTabviewHeight(dialog, tabview, maxTabHeight);\n            } else {\n              oldHeight.each(h => {\n                setTabviewHeight(tabview, h);\n              });\n            }\n            remove$6(tabview, 'visibility');\n            oldFocus.each(focus$3);\n          });\n        })\n      ];\n      const selectFirst = false;\n      return {\n        extraEvents,\n        selectFirst\n      };\n    };\n\n    const SendDataToSectionChannel = 'send-data-to-section';\n    const SendDataToViewChannel = 'send-data-to-view';\n    const renderTabPanel = (spec, dialogData, backstage) => {\n      const storedValue = Cell({});\n      const updateDataWithForm = form => {\n        const formData = Representing.getValue(form);\n        const validData = toValidValues(formData).getOr({});\n        const currentData = storedValue.get();\n        const newData = deepMerge(currentData, validData);\n        storedValue.set(newData);\n      };\n      const setDataOnForm = form => {\n        const tabData = storedValue.get();\n        Representing.setValue(form, tabData);\n      };\n      const oldTab = Cell(null);\n      const allTabs = map$2(spec.tabs, tab => {\n        return {\n          value: tab.name,\n          dom: {\n            tag: 'div',\n            classes: ['tox-dialog__body-nav-item']\n          },\n          components: [text$1(backstage.shared.providers.translate(tab.title))],\n          view: () => {\n            return [Form.sketch(parts => ({\n                dom: {\n                  tag: 'div',\n                  classes: ['tox-form']\n                },\n                components: map$2(tab.items, item => interpretInForm(parts, item, dialogData, backstage)),\n                formBehaviours: derive$1([\n                  Keying.config({\n                    mode: 'acyclic',\n                    useTabstopAt: not(isPseudoStop)\n                  }),\n                  config('TabView.form.events', [\n                    runOnAttached(setDataOnForm),\n                    runOnDetached(updateDataWithForm)\n                  ]),\n                  Receiving.config({\n                    channels: wrapAll([\n                      {\n                        key: SendDataToSectionChannel,\n                        value: { onReceive: updateDataWithForm }\n                      },\n                      {\n                        key: SendDataToViewChannel,\n                        value: { onReceive: setDataOnForm }\n                      }\n                    ])\n                  })\n                ])\n              }))];\n          }\n        };\n      });\n      const tabMode = smartMode(allTabs);\n      return TabSection.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__body']\n        },\n        onChangeTab: (section, button, _viewItems) => {\n          const name = Representing.getValue(button);\n          emitWith(section, formTabChangeEvent, {\n            name,\n            oldName: oldTab.get()\n          });\n          oldTab.set(name);\n        },\n        tabs: allTabs,\n        components: [\n          TabSection.parts.tabbar({\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-nav']\n            },\n            components: [Tabbar.parts.tabs({})],\n            markers: {\n              tabClass: 'tox-tab',\n              selectedClass: 'tox-dialog__body-nav-item--active'\n            },\n            tabbarBehaviours: derive$1([Tabstopping.config({})])\n          }),\n          TabSection.parts.tabview({\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-content']\n            }\n          })\n        ],\n        selectFirst: tabMode.selectFirst,\n        tabSectionBehaviours: derive$1([\n          config('tabpanel', tabMode.extraEvents),\n          Keying.config({ mode: 'acyclic' }),\n          Composing.config({ find: comp => head(TabSection.getViewItems(comp)) }),\n          RepresentingConfigs.withComp(Optional.none(), tsection => {\n            tsection.getSystem().broadcastOn([SendDataToSectionChannel], {});\n            return storedValue.get();\n          }, (tsection, value) => {\n            storedValue.set(value);\n            tsection.getSystem().broadcastOn([SendDataToViewChannel], {});\n          })\n        ])\n      });\n    };\n\n    const dialogChannel = generate$6('update-dialog');\n    const titleChannel = generate$6('update-title');\n    const bodyChannel = generate$6('update-body');\n    const footerChannel = generate$6('update-footer');\n    const bodySendMessageChannel = generate$6('body-send-message');\n\n    const renderBody = (spec, dialogId, contentId, backstage, ariaAttrs) => {\n      const renderComponents = incoming => {\n        const body = incoming.body;\n        switch (body.type) {\n        case 'tabpanel': {\n            return [renderTabPanel(body, incoming.initialData, backstage)];\n          }\n        default: {\n            return [renderBodyPanel(body, incoming.initialData, backstage)];\n          }\n        }\n      };\n      const updateState = (_comp, incoming) => Optional.some({ isTabPanel: () => incoming.body.type === 'tabpanel' });\n      const ariaAttributes = { 'aria-live': 'polite' };\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__content-js'],\n          attributes: {\n            ...contentId.map(x => ({ id: x })).getOr({}),\n            ...ariaAttrs ? ariaAttributes : {}\n          }\n        },\n        components: [],\n        behaviours: derive$1([\n          ComposingConfigs.childAt(0),\n          Reflecting.config({\n            channel: `${ bodyChannel }-${ dialogId }`,\n            updateState,\n            renderComponents,\n            initialData: spec\n          })\n        ])\n      };\n    };\n    const renderInlineBody = (spec, dialogId, contentId, backstage, ariaAttrs) => renderBody(spec, dialogId, Optional.some(contentId), backstage, ariaAttrs);\n    const renderModalBody = (spec, dialogId, backstage) => {\n      const bodySpec = renderBody(spec, dialogId, Optional.none(), backstage, false);\n      return ModalDialog.parts.body(bodySpec);\n    };\n    const renderIframeBody = spec => {\n      const bodySpec = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__content-js']\n        },\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-iframe']\n            },\n            components: [craft({\n                dom: {\n                  tag: 'iframe',\n                  attributes: { src: spec.url }\n                },\n                behaviours: derive$1([\n                  Tabstopping.config({}),\n                  Focusing.config({})\n                ])\n              })]\n          }],\n        behaviours: derive$1([Keying.config({\n            mode: 'acyclic',\n            useTabstopAt: not(isPseudoStop)\n          })])\n      };\n      return ModalDialog.parts.body(bodySpec);\n    };\n\n    const isTouch = global$5.deviceType.isTouch();\n    const hiddenHeader = (title, close) => ({\n      dom: {\n        tag: 'div',\n        styles: { display: 'none' },\n        classes: ['tox-dialog__header']\n      },\n      components: [\n        title,\n        close\n      ]\n    });\n    const pClose = (onClose, providersBackstage) => ModalDialog.parts.close(Button.sketch({\n      dom: {\n        tag: 'button',\n        classes: [\n          'tox-button',\n          'tox-button--icon',\n          'tox-button--naked'\n        ],\n        attributes: {\n          'type': 'button',\n          'aria-label': providersBackstage.translate('Close')\n        }\n      },\n      action: onClose,\n      buttonBehaviours: derive$1([Tabstopping.config({})])\n    }));\n    const pUntitled = () => ModalDialog.parts.title({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__title'],\n        innerHtml: '',\n        styles: { display: 'none' }\n      }\n    });\n    const pBodyMessage = (message, providersBackstage) => ModalDialog.parts.body({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__body']\n      },\n      components: [{\n          dom: {\n            tag: 'div',\n            classes: ['tox-dialog__body-content']\n          },\n          components: [{ dom: fromHtml(`<p>${ providersBackstage.translate(message) }</p>`) }]\n        }]\n    });\n    const pFooter = buttons => ModalDialog.parts.footer({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__footer']\n      },\n      components: buttons\n    });\n    const pFooterGroup = (startButtons, endButtons) => [\n      Container.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__footer-start']\n        },\n        components: startButtons\n      }),\n      Container.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__footer-end']\n        },\n        components: endButtons\n      })\n    ];\n    const renderDialog$1 = spec => {\n      const dialogClass = 'tox-dialog';\n      const blockerClass = dialogClass + '-wrap';\n      const blockerBackdropClass = blockerClass + '__backdrop';\n      const scrollLockClass = dialogClass + '__disable-scroll';\n      return ModalDialog.sketch({\n        lazySink: spec.lazySink,\n        onEscape: comp => {\n          spec.onEscape(comp);\n          return Optional.some(true);\n        },\n        useTabstopAt: elem => !isPseudoStop(elem),\n        dom: {\n          tag: 'div',\n          classes: [dialogClass].concat(spec.extraClasses),\n          styles: {\n            position: 'relative',\n            ...spec.extraStyles\n          }\n        },\n        components: [\n          spec.header,\n          spec.body,\n          ...spec.footer.toArray()\n        ],\n        parts: {\n          blocker: {\n            dom: fromHtml(`<div class=\"${ blockerClass }\"></div>`),\n            components: [{\n                dom: {\n                  tag: 'div',\n                  classes: isTouch ? [\n                    blockerBackdropClass,\n                    blockerBackdropClass + '--opaque'\n                  ] : [blockerBackdropClass]\n                }\n              }]\n          }\n        },\n        dragBlockClass: blockerClass,\n        modalBehaviours: derive$1([\n          Focusing.config({}),\n          config('dialog-events', spec.dialogEvents.concat([runOnSource(focusin(), (comp, _se) => {\n              Keying.focusIn(comp);\n            })])),\n          config('scroll-lock', [\n            runOnAttached(() => {\n              add$2(body(), scrollLockClass);\n            }),\n            runOnDetached(() => {\n              remove$2(body(), scrollLockClass);\n            })\n          ]),\n          ...spec.extraBehaviours\n        ]),\n        eventOrder: {\n          [execute$5()]: ['dialog-events'],\n          [attachedToDom()]: [\n            'scroll-lock',\n            'dialog-events',\n            'alloy.base.behaviour'\n          ],\n          [detachedFromDom()]: [\n            'alloy.base.behaviour',\n            'dialog-events',\n            'scroll-lock'\n          ],\n          ...spec.eventOrder\n        }\n      });\n    };\n\n    const renderClose = providersBackstage => Button.sketch({\n      dom: {\n        tag: 'button',\n        classes: [\n          'tox-button',\n          'tox-button--icon',\n          'tox-button--naked'\n        ],\n        attributes: {\n          'type': 'button',\n          'aria-label': providersBackstage.translate('Close'),\n          'title': providersBackstage.translate('Close')\n        }\n      },\n      components: [render$3('close', {\n          tag: 'div',\n          classes: ['tox-icon']\n        }, providersBackstage.icons)],\n      action: comp => {\n        emit(comp, formCancelEvent);\n      }\n    });\n    const renderTitle = (spec, dialogId, titleId, providersBackstage) => {\n      const renderComponents = data => [text$1(providersBackstage.translate(data.title))];\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__title'],\n          attributes: { ...titleId.map(x => ({ id: x })).getOr({}) }\n        },\n        components: [],\n        behaviours: derive$1([Reflecting.config({\n            channel: `${ titleChannel }-${ dialogId }`,\n            initialData: spec,\n            renderComponents\n          })])\n      };\n    };\n    const renderDragHandle = () => ({ dom: fromHtml('<div class=\"tox-dialog__draghandle\"></div>') });\n    const renderInlineHeader = (spec, dialogId, titleId, providersBackstage) => Container.sketch({\n      dom: fromHtml('<div class=\"tox-dialog__header\"></div>'),\n      components: [\n        renderTitle(spec, dialogId, Optional.some(titleId), providersBackstage),\n        renderDragHandle(),\n        renderClose(providersBackstage)\n      ],\n      containerBehaviours: derive$1([Dragging.config({\n          mode: 'mouse',\n          blockerClass: 'blocker',\n          getTarget: handle => {\n            return closest$1(handle, '[role=\"dialog\"]').getOrDie();\n          },\n          snaps: {\n            getSnapPoints: () => [],\n            leftAttr: 'data-drag-left',\n            topAttr: 'data-drag-top'\n          }\n        })])\n    });\n    const renderModalHeader = (spec, dialogId, providersBackstage) => {\n      const pTitle = ModalDialog.parts.title(renderTitle(spec, dialogId, Optional.none(), providersBackstage));\n      const pHandle = ModalDialog.parts.draghandle(renderDragHandle());\n      const pClose = ModalDialog.parts.close(renderClose(providersBackstage));\n      const components = [pTitle].concat(spec.draggable ? [pHandle] : []).concat([pClose]);\n      return Container.sketch({\n        dom: fromHtml('<div class=\"tox-dialog__header\"></div>'),\n        components\n      });\n    };\n\n    const getHeader = (title, dialogId, backstage) => renderModalHeader({\n      title: backstage.shared.providers.translate(title),\n      draggable: backstage.dialog.isDraggableModal()\n    }, dialogId, backstage.shared.providers);\n    const getBusySpec = (message, bs, providers) => ({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__busy-spinner'],\n        attributes: { 'aria-label': providers.translate(message) },\n        styles: {\n          left: '0px',\n          right: '0px',\n          bottom: '0px',\n          top: '0px',\n          position: 'absolute'\n        }\n      },\n      behaviours: bs,\n      components: [{ dom: fromHtml('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>') }]\n    });\n    const getEventExtras = (lazyDialog, providers, extra) => ({\n      onClose: () => extra.closeWindow(),\n      onBlock: blockEvent => {\n        ModalDialog.setBusy(lazyDialog(), (_comp, bs) => getBusySpec(blockEvent.message, bs, providers));\n      },\n      onUnblock: () => {\n        ModalDialog.setIdle(lazyDialog());\n      }\n    });\n    const renderModalDialog = (spec, initialData, dialogEvents, backstage) => {\n      const updateState = (_comp, incoming) => Optional.some(incoming);\n      return build$1(renderDialog$1({\n        ...spec,\n        lazySink: backstage.shared.getSink,\n        extraBehaviours: [\n          Reflecting.config({\n            channel: `${ dialogChannel }-${ spec.id }`,\n            updateState,\n            initialData\n          }),\n          RepresentingConfigs.memory({}),\n          ...spec.extraBehaviours\n        ],\n        onEscape: comp => {\n          emit(comp, formCancelEvent);\n        },\n        dialogEvents,\n        eventOrder: {\n          [receive()]: [\n            Reflecting.name(),\n            Receiving.name()\n          ],\n          [attachedToDom()]: [\n            'scroll-lock',\n            Reflecting.name(),\n            'messages',\n            'dialog-events',\n            'alloy.base.behaviour'\n          ],\n          [detachedFromDom()]: [\n            'alloy.base.behaviour',\n            'dialog-events',\n            'messages',\n            Reflecting.name(),\n            'scroll-lock'\n          ]\n        }\n      }));\n    };\n    const mapMenuButtons = buttons => {\n      const mapItems = button => {\n        const items = map$2(button.items, item => {\n          const cell = Cell(false);\n          return {\n            ...item,\n            storage: cell\n          };\n        });\n        return {\n          ...button,\n          items\n        };\n      };\n      return map$2(buttons, button => {\n        return button.type === 'menu' ? mapItems(button) : button;\n      });\n    };\n    const extractCellsToObject = buttons => foldl(buttons, (acc, button) => {\n      if (button.type === 'menu') {\n        const menuButton = button;\n        return foldl(menuButton.items, (innerAcc, item) => {\n          innerAcc[item.name] = item.storage;\n          return innerAcc;\n        }, acc);\n      }\n      return acc;\n    }, {});\n\n    const initCommonEvents = (fireApiEvent, extras) => [\n      runWithTarget(focusin(), onFocus),\n      fireApiEvent(formCloseEvent, (_api, spec) => {\n        extras.onClose();\n        spec.onClose();\n      }),\n      fireApiEvent(formCancelEvent, (api, spec, _event, self) => {\n        spec.onCancel(api);\n        emit(self, formCloseEvent);\n      }),\n      run$1(formUnblockEvent, (_c, _se) => extras.onUnblock()),\n      run$1(formBlockEvent, (_c, se) => extras.onBlock(se.event))\n    ];\n    const initUrlDialog = (getInstanceApi, extras) => {\n      const fireApiEvent = (eventName, f) => run$1(eventName, (c, se) => {\n        withSpec(c, (spec, _c) => {\n          f(getInstanceApi(), spec, se.event, c);\n        });\n      });\n      const withSpec = (c, f) => {\n        Reflecting.getState(c).get().each(currentDialog => {\n          f(currentDialog, c);\n        });\n      };\n      return [\n        ...initCommonEvents(fireApiEvent, extras),\n        fireApiEvent(formActionEvent, (api, spec, event) => {\n          spec.onAction(api, { name: event.name });\n        })\n      ];\n    };\n    const initDialog = (getInstanceApi, extras, getSink) => {\n      const fireApiEvent = (eventName, f) => run$1(eventName, (c, se) => {\n        withSpec(c, (spec, _c) => {\n          f(getInstanceApi(), spec, se.event, c);\n        });\n      });\n      const withSpec = (c, f) => {\n        Reflecting.getState(c).get().each(currentDialogInit => {\n          f(currentDialogInit.internalDialog, c);\n        });\n      };\n      return [\n        ...initCommonEvents(fireApiEvent, extras),\n        fireApiEvent(formSubmitEvent, (api, spec) => spec.onSubmit(api)),\n        fireApiEvent(formChangeEvent, (api, spec, event) => {\n          spec.onChange(api, { name: event.name });\n        }),\n        fireApiEvent(formActionEvent, (api, spec, event, component) => {\n          const focusIn = () => Keying.focusIn(component);\n          const isDisabled = focused => has$1(focused, 'disabled') || getOpt(focused, 'aria-disabled').exists(val => val === 'true');\n          const rootNode = getRootNode(component.element);\n          const current = active$1(rootNode);\n          spec.onAction(api, {\n            name: event.name,\n            value: event.value\n          });\n          active$1(rootNode).fold(focusIn, focused => {\n            if (isDisabled(focused)) {\n              focusIn();\n            } else if (current.exists(cur => contains(focused, cur) && isDisabled(cur))) {\n              focusIn();\n            } else {\n              getSink().toOptional().filter(sink => !contains(sink.element, focused)).each(focusIn);\n            }\n          });\n        }),\n        fireApiEvent(formTabChangeEvent, (api, spec, event) => {\n          spec.onTabChange(api, {\n            newTabName: event.name,\n            oldTabName: event.oldName\n          });\n        }),\n        runOnDetached(component => {\n          const api = getInstanceApi();\n          Representing.setValue(component, api.getData());\n        })\n      ];\n    };\n    const SilverDialogEvents = {\n      initUrlDialog,\n      initDialog\n    };\n\n    const makeButton = (button, backstage) => renderFooterButton(button, button.type, backstage);\n    const lookup = (compInSystem, footerButtons, buttonName) => find$5(footerButtons, button => button.name === buttonName).bind(memButton => memButton.memento.getOpt(compInSystem));\n    const renderComponents = (_data, state) => {\n      const footerButtons = state.map(s => s.footerButtons).getOr([]);\n      const buttonGroups = partition$3(footerButtons, button => button.align === 'start');\n      const makeGroup = (edge, buttons) => Container.sketch({\n        dom: {\n          tag: 'div',\n          classes: [`tox-dialog__footer-${ edge }`]\n        },\n        components: map$2(buttons, button => button.memento.asSpec())\n      });\n      const startButtons = makeGroup('start', buttonGroups.pass);\n      const endButtons = makeGroup('end', buttonGroups.fail);\n      return [\n        startButtons,\n        endButtons\n      ];\n    };\n    const renderFooter = (initSpec, dialogId, backstage) => {\n      const updateState = (comp, data) => {\n        const footerButtons = map$2(data.buttons, button => {\n          const memButton = record(makeButton(button, backstage));\n          return {\n            name: button.name,\n            align: button.align,\n            memento: memButton\n          };\n        });\n        const lookupByName = buttonName => lookup(comp, footerButtons, buttonName);\n        return Optional.some({\n          lookupByName,\n          footerButtons\n        });\n      };\n      return {\n        dom: fromHtml('<div class=\"tox-dialog__footer\"></div>'),\n        components: [],\n        behaviours: derive$1([Reflecting.config({\n            channel: `${ footerChannel }-${ dialogId }`,\n            initialData: initSpec,\n            updateState,\n            renderComponents\n          })])\n      };\n    };\n    const renderInlineFooter = (initSpec, dialogId, backstage) => renderFooter(initSpec, dialogId, backstage);\n    const renderModalFooter = (initSpec, dialogId, backstage) => ModalDialog.parts.footer(renderFooter(initSpec, dialogId, backstage));\n\n    const getCompByName = (access, name) => {\n      const root = access.getRoot();\n      if (root.getSystem().isConnected()) {\n        const form = Composing.getCurrent(access.getFormWrapper()).getOr(access.getFormWrapper());\n        return Form.getField(form, name).orThunk(() => {\n          const footer = access.getFooter();\n          const footerState = Reflecting.getState(footer).get();\n          return footerState.bind(f => f.lookupByName(name));\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const validateData$1 = (access, data) => {\n      const root = access.getRoot();\n      return Reflecting.getState(root).get().map(dialogState => getOrDie(asRaw('data', dialogState.dataValidator, data))).getOr(data);\n    };\n    const getDialogApi = (access, doRedial, menuItemStates) => {\n      const withRoot = f => {\n        const root = access.getRoot();\n        if (root.getSystem().isConnected()) {\n          f(root);\n        }\n      };\n      const getData = () => {\n        const root = access.getRoot();\n        const valueComp = root.getSystem().isConnected() ? access.getFormWrapper() : root;\n        const representedValues = Representing.getValue(valueComp);\n        const menuItemCurrentState = map$1(menuItemStates, cell => cell.get());\n        return {\n          ...representedValues,\n          ...menuItemCurrentState\n        };\n      };\n      const setData = newData => {\n        withRoot(_ => {\n          const prevData = instanceApi.getData();\n          const mergedData = deepMerge(prevData, newData);\n          const newInternalData = validateData$1(access, mergedData);\n          const form = access.getFormWrapper();\n          Representing.setValue(form, newInternalData);\n          each(menuItemStates, (v, k) => {\n            if (has$2(mergedData, k)) {\n              v.set(mergedData[k]);\n            }\n          });\n        });\n      };\n      const setEnabled = (name, state) => {\n        getCompByName(access, name).each(state ? Disabling.enable : Disabling.disable);\n      };\n      const focus = name => {\n        getCompByName(access, name).each(Focusing.focus);\n      };\n      const block = message => {\n        if (!isString(message)) {\n          throw new Error('The dialogInstanceAPI.block function should be passed a blocking message of type string as an argument');\n        }\n        withRoot(root => {\n          emitWith(root, formBlockEvent, { message });\n        });\n      };\n      const unblock = () => {\n        withRoot(root => {\n          emit(root, formUnblockEvent);\n        });\n      };\n      const showTab = name => {\n        withRoot(_ => {\n          const body = access.getBody();\n          const bodyState = Reflecting.getState(body);\n          if (bodyState.get().exists(b => b.isTabPanel())) {\n            Composing.getCurrent(body).each(tabSection => {\n              TabSection.showTab(tabSection, name);\n            });\n          }\n        });\n      };\n      const redial = d => {\n        withRoot(root => {\n          const id = access.getId();\n          const dialogInit = doRedial(d);\n          root.getSystem().broadcastOn([`${ dialogChannel }-${ id }`], dialogInit);\n          root.getSystem().broadcastOn([`${ titleChannel }-${ id }`], dialogInit.internalDialog);\n          root.getSystem().broadcastOn([`${ bodyChannel }-${ id }`], dialogInit.internalDialog);\n          root.getSystem().broadcastOn([`${ footerChannel }-${ id }`], dialogInit.internalDialog);\n          instanceApi.setData(dialogInit.initialData);\n        });\n      };\n      const close = () => {\n        withRoot(root => {\n          emit(root, formCloseEvent);\n        });\n      };\n      const instanceApi = {\n        getData,\n        setData,\n        setEnabled,\n        focus,\n        block,\n        unblock,\n        showTab,\n        redial,\n        close\n      };\n      return instanceApi;\n    };\n\n    const getDialogSizeClasses = size => {\n      switch (size) {\n      case 'large':\n        return ['tox-dialog--width-lg'];\n      case 'medium':\n        return ['tox-dialog--width-md'];\n      default:\n        return [];\n      }\n    };\n    const renderDialog = (dialogInit, extra, backstage) => {\n      const dialogId = generate$6('dialog');\n      const internalDialog = dialogInit.internalDialog;\n      const header = getHeader(internalDialog.title, dialogId, backstage);\n      const body = renderModalBody({\n        body: internalDialog.body,\n        initialData: internalDialog.initialData\n      }, dialogId, backstage);\n      const storedMenuButtons = mapMenuButtons(internalDialog.buttons);\n      const objOfCells = extractCellsToObject(storedMenuButtons);\n      const footer = renderModalFooter({ buttons: storedMenuButtons }, dialogId, backstage);\n      const dialogEvents = SilverDialogEvents.initDialog(() => instanceApi, getEventExtras(() => dialog, backstage.shared.providers, extra), backstage.shared.getSink);\n      const dialogSize = getDialogSizeClasses(internalDialog.size);\n      const spec = {\n        id: dialogId,\n        header,\n        body,\n        footer: Optional.some(footer),\n        extraClasses: dialogSize,\n        extraBehaviours: [],\n        extraStyles: {}\n      };\n      const dialog = renderModalDialog(spec, dialogInit, dialogEvents, backstage);\n      const modalAccess = (() => {\n        const getForm = () => {\n          const outerForm = ModalDialog.getBody(dialog);\n          return Composing.getCurrent(outerForm).getOr(outerForm);\n        };\n        return {\n          getId: constant$1(dialogId),\n          getRoot: constant$1(dialog),\n          getBody: () => ModalDialog.getBody(dialog),\n          getFooter: () => ModalDialog.getFooter(dialog),\n          getFormWrapper: getForm\n        };\n      })();\n      const instanceApi = getDialogApi(modalAccess, extra.redial, objOfCells);\n      return {\n        dialog,\n        instanceApi\n      };\n    };\n\n    const renderInlineDialog = (dialogInit, extra, backstage, ariaAttrs) => {\n      const dialogId = generate$6('dialog');\n      const dialogLabelId = generate$6('dialog-label');\n      const dialogContentId = generate$6('dialog-content');\n      const internalDialog = dialogInit.internalDialog;\n      const updateState = (_comp, incoming) => Optional.some(incoming);\n      const memHeader = record(renderInlineHeader({\n        title: internalDialog.title,\n        draggable: true\n      }, dialogId, dialogLabelId, backstage.shared.providers));\n      const memBody = record(renderInlineBody({\n        body: internalDialog.body,\n        initialData: internalDialog.initialData\n      }, dialogId, dialogContentId, backstage, ariaAttrs));\n      const storagedMenuButtons = mapMenuButtons(internalDialog.buttons);\n      const objOfCells = extractCellsToObject(storagedMenuButtons);\n      const memFooter = record(renderInlineFooter({ buttons: storagedMenuButtons }, dialogId, backstage));\n      const dialogEvents = SilverDialogEvents.initDialog(() => instanceApi, {\n        onBlock: event => {\n          Blocking.block(dialog, (_comp, bs) => getBusySpec(event.message, bs, backstage.shared.providers));\n        },\n        onUnblock: () => {\n          Blocking.unblock(dialog);\n        },\n        onClose: () => extra.closeWindow()\n      }, backstage.shared.getSink);\n      const dialog = build$1({\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-dialog',\n            'tox-dialog-inline'\n          ],\n          attributes: {\n            role: 'dialog',\n            ['aria-labelledby']: dialogLabelId,\n            ['aria-describedby']: dialogContentId\n          }\n        },\n        eventOrder: {\n          [receive()]: [\n            Reflecting.name(),\n            Receiving.name()\n          ],\n          [execute$5()]: ['execute-on-form'],\n          [attachedToDom()]: [\n            'reflecting',\n            'execute-on-form'\n          ]\n        },\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'cyclic',\n            onEscape: c => {\n              emit(c, formCloseEvent);\n              return Optional.some(true);\n            },\n            useTabstopAt: elem => !isPseudoStop(elem) && (name$3(elem) !== 'button' || get$f(elem, 'disabled') !== 'disabled')\n          }),\n          Reflecting.config({\n            channel: `${ dialogChannel }-${ dialogId }`,\n            updateState,\n            initialData: dialogInit\n          }),\n          Focusing.config({}),\n          config('execute-on-form', dialogEvents.concat([runOnSource(focusin(), (comp, _se) => {\n              Keying.focusIn(comp);\n            })])),\n          Blocking.config({ getRoot: () => Optional.some(dialog) }),\n          Replacing.config({}),\n          RepresentingConfigs.memory({})\n        ]),\n        components: [\n          memHeader.asSpec(),\n          memBody.asSpec(),\n          memFooter.asSpec()\n        ]\n      });\n      const instanceApi = getDialogApi({\n        getId: constant$1(dialogId),\n        getRoot: constant$1(dialog),\n        getFooter: () => memFooter.get(dialog),\n        getBody: () => memBody.get(dialog),\n        getFormWrapper: () => {\n          const body = memBody.get(dialog);\n          return Composing.getCurrent(body).getOr(body);\n        }\n      }, extra.redial, objOfCells);\n      return {\n        dialog,\n        instanceApi\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const getUrlDialogApi = root => {\n      const withRoot = f => {\n        if (root.getSystem().isConnected()) {\n          f(root);\n        }\n      };\n      const block = message => {\n        if (!isString(message)) {\n          throw new Error('The urlDialogInstanceAPI.block function should be passed a blocking message of type string as an argument');\n        }\n        withRoot(root => {\n          emitWith(root, formBlockEvent, { message });\n        });\n      };\n      const unblock = () => {\n        withRoot(root => {\n          emit(root, formUnblockEvent);\n        });\n      };\n      const close = () => {\n        withRoot(root => {\n          emit(root, formCloseEvent);\n        });\n      };\n      const sendMessage = data => {\n        withRoot(root => {\n          root.getSystem().broadcastOn([bodySendMessageChannel], data);\n        });\n      };\n      return {\n        block,\n        unblock,\n        close,\n        sendMessage\n      };\n    };\n\n    const SUPPORTED_MESSAGE_ACTIONS = [\n      'insertContent',\n      'setContent',\n      'execCommand',\n      'close',\n      'block',\n      'unblock'\n    ];\n    const isSupportedMessage = data => isObject(data) && SUPPORTED_MESSAGE_ACTIONS.indexOf(data.mceAction) !== -1;\n    const isCustomMessage = data => !isSupportedMessage(data) && isObject(data) && has$2(data, 'mceAction');\n    const handleMessage = (editor, api, data) => {\n      switch (data.mceAction) {\n      case 'insertContent':\n        editor.insertContent(data.content);\n        break;\n      case 'setContent':\n        editor.setContent(data.content);\n        break;\n      case 'execCommand':\n        const ui = isBoolean(data.ui) ? data.ui : false;\n        editor.execCommand(data.cmd, ui, data.value);\n        break;\n      case 'close':\n        api.close();\n        break;\n      case 'block':\n        api.block(data.message);\n        break;\n      case 'unblock':\n        api.unblock();\n        break;\n      }\n    };\n    const renderUrlDialog = (internalDialog, extra, editor, backstage) => {\n      const dialogId = generate$6('dialog');\n      const header = getHeader(internalDialog.title, dialogId, backstage);\n      const body = renderIframeBody(internalDialog);\n      const footer = internalDialog.buttons.bind(buttons => {\n        if (buttons.length === 0) {\n          return Optional.none();\n        } else {\n          return Optional.some(renderModalFooter({ buttons }, dialogId, backstage));\n        }\n      });\n      const dialogEvents = SilverDialogEvents.initUrlDialog(() => instanceApi, getEventExtras(() => dialog, backstage.shared.providers, extra));\n      const styles = {\n        ...internalDialog.height.fold(() => ({}), height => ({\n          'height': height + 'px',\n          'max-height': height + 'px'\n        })),\n        ...internalDialog.width.fold(() => ({}), width => ({\n          'width': width + 'px',\n          'max-width': width + 'px'\n        }))\n      };\n      const classes = internalDialog.width.isNone() && internalDialog.height.isNone() ? ['tox-dialog--width-lg'] : [];\n      const iframeUri = new global(internalDialog.url, { base_uri: new global(window.location.href) });\n      const iframeDomain = `${ iframeUri.protocol }://${ iframeUri.host }${ iframeUri.port ? ':' + iframeUri.port : '' }`;\n      const messageHandlerUnbinder = unbindable();\n      const extraBehaviours = [\n        config('messages', [\n          runOnAttached(() => {\n            const unbind = bind(SugarElement.fromDom(window), 'message', e => {\n              if (iframeUri.isSameOrigin(new global(e.raw.origin))) {\n                const data = e.raw.data;\n                if (isSupportedMessage(data)) {\n                  handleMessage(editor, instanceApi, data);\n                } else if (isCustomMessage(data)) {\n                  internalDialog.onMessage(instanceApi, data);\n                }\n              }\n            });\n            messageHandlerUnbinder.set(unbind);\n          }),\n          runOnDetached(messageHandlerUnbinder.clear)\n        ]),\n        Receiving.config({\n          channels: {\n            [bodySendMessageChannel]: {\n              onReceive: (comp, data) => {\n                descendant(comp.element, 'iframe').each(iframeEle => {\n                  const iframeWin = iframeEle.dom.contentWindow;\n                  if (isNonNullable(iframeWin)) {\n                    iframeWin.postMessage(data, iframeDomain);\n                  }\n                });\n              }\n            }\n          }\n        })\n      ];\n      const spec = {\n        id: dialogId,\n        header,\n        body,\n        footer,\n        extraClasses: classes,\n        extraBehaviours,\n        extraStyles: styles\n      };\n      const dialog = renderModalDialog(spec, internalDialog, dialogEvents, backstage);\n      const instanceApi = getUrlDialogApi(dialog);\n      return {\n        dialog,\n        instanceApi\n      };\n    };\n\n    const setup$2 = backstage => {\n      const sharedBackstage = backstage.shared;\n      const open = (message, callback) => {\n        const closeDialog = () => {\n          ModalDialog.hide(alertDialog);\n          callback();\n        };\n        const memFooterClose = record(renderFooterButton({\n          name: 'close-alert',\n          text: 'OK',\n          primary: true,\n          buttonType: Optional.some('primary'),\n          align: 'end',\n          enabled: true,\n          icon: Optional.none()\n        }, 'cancel', backstage));\n        const titleSpec = pUntitled();\n        const closeSpec = pClose(closeDialog, sharedBackstage.providers);\n        const alertDialog = build$1(renderDialog$1({\n          lazySink: () => sharedBackstage.getSink(),\n          header: hiddenHeader(titleSpec, closeSpec),\n          body: pBodyMessage(message, sharedBackstage.providers),\n          footer: Optional.some(pFooter(pFooterGroup([], [memFooterClose.asSpec()]))),\n          onEscape: closeDialog,\n          extraClasses: ['tox-alert-dialog'],\n          extraBehaviours: [],\n          extraStyles: {},\n          dialogEvents: [run$1(formCancelEvent, closeDialog)],\n          eventOrder: {}\n        }));\n        ModalDialog.show(alertDialog);\n        const footerCloseButton = memFooterClose.get(alertDialog);\n        Focusing.focus(footerCloseButton);\n      };\n      return { open };\n    };\n\n    const setup$1 = backstage => {\n      const sharedBackstage = backstage.shared;\n      const open = (message, callback) => {\n        const closeDialog = state => {\n          ModalDialog.hide(confirmDialog);\n          callback(state);\n        };\n        const memFooterYes = record(renderFooterButton({\n          name: 'yes',\n          text: 'Yes',\n          primary: true,\n          buttonType: Optional.some('primary'),\n          align: 'end',\n          enabled: true,\n          icon: Optional.none()\n        }, 'submit', backstage));\n        const footerNo = renderFooterButton({\n          name: 'no',\n          text: 'No',\n          primary: false,\n          buttonType: Optional.some('secondary'),\n          align: 'end',\n          enabled: true,\n          icon: Optional.none()\n        }, 'cancel', backstage);\n        const titleSpec = pUntitled();\n        const closeSpec = pClose(() => closeDialog(false), sharedBackstage.providers);\n        const confirmDialog = build$1(renderDialog$1({\n          lazySink: () => sharedBackstage.getSink(),\n          header: hiddenHeader(titleSpec, closeSpec),\n          body: pBodyMessage(message, sharedBackstage.providers),\n          footer: Optional.some(pFooter(pFooterGroup([], [\n            footerNo,\n            memFooterYes.asSpec()\n          ]))),\n          onEscape: () => closeDialog(false),\n          extraClasses: ['tox-confirm-dialog'],\n          extraBehaviours: [],\n          extraStyles: {},\n          dialogEvents: [\n            run$1(formCancelEvent, () => closeDialog(false)),\n            run$1(formSubmitEvent, () => closeDialog(true))\n          ],\n          eventOrder: {}\n        }));\n        ModalDialog.show(confirmDialog);\n        const footerYesButton = memFooterYes.get(confirmDialog);\n        Focusing.focus(footerYesButton);\n      };\n      return { open };\n    };\n\n    const validateData = (data, validator) => getOrDie(asRaw('data', validator, data));\n    const isAlertOrConfirmDialog = target => closest(target, '.tox-alert-dialog') || closest(target, '.tox-confirm-dialog');\n    const inlineAdditionalBehaviours = (editor, isStickyToolbar, isToolbarLocationTop) => {\n      if (isStickyToolbar && isToolbarLocationTop) {\n        return [];\n      } else {\n        return [Docking.config({\n            contextual: {\n              lazyContext: () => Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer()))),\n              fadeInClass: 'tox-dialog-dock-fadein',\n              fadeOutClass: 'tox-dialog-dock-fadeout',\n              transitionClass: 'tox-dialog-dock-transition'\n            },\n            modes: ['top']\n          })];\n      }\n    };\n    const setup = extras => {\n      const backstage = extras.backstage;\n      const editor = extras.editor;\n      const isStickyToolbar$1 = isStickyToolbar(editor);\n      const alertDialog = setup$2(backstage);\n      const confirmDialog = setup$1(backstage);\n      const open = (config, params, closeWindow) => {\n        if (params !== undefined && params.inline === 'toolbar') {\n          return openInlineDialog(config, backstage.shared.anchors.inlineDialog(), closeWindow, params.ariaAttrs);\n        } else if (params !== undefined && params.inline === 'cursor') {\n          return openInlineDialog(config, backstage.shared.anchors.cursor(), closeWindow, params.ariaAttrs);\n        } else {\n          return openModalDialog(config, closeWindow);\n        }\n      };\n      const openUrl = (config, closeWindow) => openModalUrlDialog(config, closeWindow);\n      const openModalUrlDialog = (config, closeWindow) => {\n        const factory = contents => {\n          const dialog = renderUrlDialog(contents, {\n            closeWindow: () => {\n              ModalDialog.hide(dialog.dialog);\n              closeWindow(dialog.instanceApi);\n            }\n          }, editor, backstage);\n          ModalDialog.show(dialog.dialog);\n          return dialog.instanceApi;\n        };\n        return DialogManager.openUrl(factory, config);\n      };\n      const openModalDialog = (config, closeWindow) => {\n        const factory = (contents, internalInitialData, dataValidator) => {\n          const initialData = internalInitialData;\n          const dialogInit = {\n            dataValidator,\n            initialData,\n            internalDialog: contents\n          };\n          const dialog = renderDialog(dialogInit, {\n            redial: DialogManager.redial,\n            closeWindow: () => {\n              ModalDialog.hide(dialog.dialog);\n              closeWindow(dialog.instanceApi);\n            }\n          }, backstage);\n          ModalDialog.show(dialog.dialog);\n          dialog.instanceApi.setData(initialData);\n          return dialog.instanceApi;\n        };\n        return DialogManager.open(factory, config);\n      };\n      const openInlineDialog = (config$1, anchor, closeWindow, ariaAttrs = false) => {\n        const factory = (contents, internalInitialData, dataValidator) => {\n          const initialData = validateData(internalInitialData, dataValidator);\n          const inlineDialog = value$2();\n          const isToolbarLocationTop = backstage.shared.header.isPositionedAtTop();\n          const dialogInit = {\n            dataValidator,\n            initialData,\n            internalDialog: contents\n          };\n          const refreshDocking = () => inlineDialog.on(dialog => {\n            InlineView.reposition(dialog);\n            Docking.refresh(dialog);\n          });\n          const dialogUi = renderInlineDialog(dialogInit, {\n            redial: DialogManager.redial,\n            closeWindow: () => {\n              inlineDialog.on(InlineView.hide);\n              editor.off('ResizeEditor', refreshDocking);\n              inlineDialog.clear();\n              closeWindow(dialogUi.instanceApi);\n            }\n          }, backstage, ariaAttrs);\n          const inlineDialogComp = build$1(InlineView.sketch({\n            lazySink: backstage.shared.getSink,\n            dom: {\n              tag: 'div',\n              classes: []\n            },\n            fireDismissalEventInstead: {},\n            ...isToolbarLocationTop ? {} : { fireRepositionEventInstead: {} },\n            inlineBehaviours: derive$1([\n              config('window-manager-inline-events', [run$1(dismissRequested(), (_comp, _se) => {\n                  emit(dialogUi.dialog, formCancelEvent);\n                })]),\n              ...inlineAdditionalBehaviours(editor, isStickyToolbar$1, isToolbarLocationTop)\n            ]),\n            isExtraPart: (_comp, target) => isAlertOrConfirmDialog(target)\n          }));\n          inlineDialog.set(inlineDialogComp);\n          InlineView.showWithin(inlineDialogComp, premade(dialogUi.dialog), { anchor }, Optional.some(body()));\n          if (!isStickyToolbar$1 || !isToolbarLocationTop) {\n            Docking.refresh(inlineDialogComp);\n            editor.on('ResizeEditor', refreshDocking);\n          }\n          dialogUi.instanceApi.setData(initialData);\n          Keying.focusIn(dialogUi.dialog);\n          return dialogUi.instanceApi;\n        };\n        return DialogManager.open(factory, config$1);\n      };\n      const confirm = (message, callback) => {\n        confirmDialog.open(message, callback);\n      };\n      const alert = (message, callback) => {\n        alertDialog.open(message, callback);\n      };\n      const close = instanceApi => {\n        instanceApi.close();\n      };\n      return {\n        open,\n        openUrl,\n        alert,\n        close,\n        confirm\n      };\n    };\n\n    const registerOptions = editor => {\n      register$e(editor);\n      register$d(editor);\n      register(editor);\n    };\n    var Theme = () => {\n      global$a.add('silver', editor => {\n        registerOptions(editor);\n        const {getUiMothership, backstage, renderUI} = setup$3(editor);\n        Autocompleter.register(editor, backstage.shared);\n        const windowMgr = setup({\n          editor,\n          backstage\n        });\n        return {\n          renderUI,\n          getWindowManagerImpl: constant$1(windowMgr),\n          getNotificationManagerImpl: () => NotificationManagerImpl(editor, { backstage }, getUiMothership())\n        };\n      });\n    };\n\n    Theme();\n\n})();\n", "export default require(\"./node_modules/tinymce/themes/silver/theme.js\");"],
  "mappings": "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",
  "names": ["t", "type", "value", "b", "all", "binder", "thunk", "r", "name", "left", "suffix", "prefix", "dom", "text", "parts", "element", "base", "offset", "getOffset", "set", "get", "getOuter", "properties", "max", "top", "translate", "box", "body", "win", "mediaMatch", "isTouch", "group", "browsers", "oses", "query", "stop", "filter", "parent", "width", "height", "path", "point", "position", "output", "error", "optional", "SimpleResultType", "values", "nu", "fallback", "partition", "input", "extract", "toString", "field", "keys", "schema", "label", "adt", "transform", "handlers", "can", "abort", "run", "closest", "owner", "clone", "original", "behaviours", "classes", "item", "child", "build", "children", "events", "subs", "config", "components", "is", "ancestor", "is$1", "selector", "EventConfiguration", "sequence", "required", "placement", "boundsRestriction", "labelPrefix", "southeast", "southwest", "northeast", "northwest", "south", "north", "east", "west", "min", "anchor", "bounds$1", "active", "rest", "getEvents", "hasFocus", "right", "bottom", "getBounds", "bounds", "maxX", "maxY", "reposition", "layout", "isVisible", "revoke", "clear", "on", "round", "parse", "rect", "layouts", "getClasses", "make", "AttributeValue", "f", "range", "focus", "last", "contents", "lookup", "store", "valueThunk", "replace", "part", "detail", "units", "uids", "factory", "sketch", "before", "after", "FocusInsideModes", "getKeydownRules", "getKeyupRules", "rule", "toEvents", "focusIn", "findCurrent", "go", "execute", "move", "moveLeft", "moveRight", "first", "matrix", "replacer", "init", "menu", "primary", "expand", "refresh", "getMenus", "HighlightOnOpen", "setup", "ExpandHighlightDecision", "onRight", "onLeft", "repositionMenus", "setContent", "getOpt", "open", "close", "anchorOverrides", "ToolbarMode", "ToolbarLocation", "isStickyToolbar", "api", "ItemResponse", "placeholder", "isSeparator", "show", "getApi", "search", "icon", "renderIcon", "rgbaColour", "red", "hexColour", "add", "remove", "custom", "onAction", "select", "emitExecute", "render", "builder", "map", "data", "bind", "FocusMode", "menuHasIcons", "renderText", "touch", "pointerEvents", "unbind", "stopper", "cutter", "eventHandler", "find", "register", "onItemAction", "setValueFrom", "edge", "step", "snapStart", "snap", "rounded", "setValue", "choose", "record", "renderTextField", "spectrumPart", "thumbPart", "pattern", "title", "image", "resolve", "l", "img", "role", "option", "supported", "labelPart", "thumb", "renderHeader", "throttle", "currentValue", "sandbox", "mapError", "action", "initialData", "bubbleSize", "getData", "attach", "types", "meta", "setGroups", "offsetParent$1", "viewport", "isDocked", "elm", "getBehaviours$2", "getBusySpec", "iframe", "toggle", "button", "overflow", "toolbar", "isOpen", "getFetch", "backstage", "dataset", "onSetup", "Delimiter", "fontFamily", "number", "renderComponents", "tooltip", "identifyButtons", "comp", "startNode", "getAnchor", "editor", "detection", "change", "xRange", "yRange", "fixed$1", "reset", "snapTo", "ResizeTypes", "resize", "singleton", "platform", "partMenubar", "partToolbar", "partMultipleToolbar", "partPromotion", "partSocket", "partSidebar", "renderContainer", "partHeader", "partThrobber", "isHidden", "handle", "hasGrown", "pClose", "self", "getSink", "isDisabled", "block", "unblock", "showTab", "root"]
}
